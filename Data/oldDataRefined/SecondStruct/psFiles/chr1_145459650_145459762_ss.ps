%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:16:59 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUACUCCAAGGUACCACAUUACCACUCGUGAGACCUGAGACUUAGGUCGCUAGGCUCAAGCUCAGAGCCACCUUGGAAAGACAAAUUAAUCCUGCCGUUACAACACAAAA\
) } def
/len { sequence length } bind def

/coor [
[250.03404236 220.99694824]
[239.57458496 210.24520874]
[232.55812073 207.60874939]
[228.98014832 199.05015564]
[218.82092285 188.01429749]
[206.66703796 187.17102051]
[198.11325073 177.93873596]
[198.20289612 164.95056152]
[188.35162354 153.63896179]
[178.50033569 142.32736206]
[168.64906311 131.01576233]
[158.79777527 119.70416260]
[148.94650269 108.39256287]
[139.09521484 97.08096313]
[129.24394226 85.76936340]
[124.41561890 115.84667206]
[99.13982391 125.67775726]
[80.54407501 110.85032654]
[65.74865723 113.31924438]
[50.95323944 115.78816223]
[45.64305115 130.19987488]
[33.82817841 140.01335144]
[18.68675804 142.58882141]
[4.29176092 137.23347473]
[-5.48463345 125.38790131]
[-8.01262379 110.23848724]
[-2.61219382 95.86034393]
[9.26396847 86.12113190]
[24.42123604 83.64064026]
[38.78237915 89.08611298]
[48.48432159 100.99274445]
[63.27973938 98.52382660]
[78.07515717 96.05490112]
[77.65438080 84.14375305]
[83.99392700 71.68878937]
[73.53446960 60.93705368]
[63.07501984 50.18531799]
[52.61557007 39.43357849]
[42.15611649 28.68184090]
[31.69666481 17.93010330]
[21.23721313 7.17836571]
[5.85872555 0.04124590]
[8.45973492 -16.71199608]
[25.27828407 -18.85039330]
[31.98895073 -3.28108621]
[42.44840240 7.47065163]
[52.90785217 18.22238922]
[63.36730576 28.97412682]
[73.82675934 39.72586441]
[84.28620911 50.47760391]
[94.74565887 61.22933960]
[102.10654449 59.79151154]
[99.23113251 45.06969070]
[113.95300293 42.19451904]
[116.82832336 56.91585159]
[124.18920898 55.47801971]
[129.83384705 41.58060837]
[135.47848511 27.68319893]
[141.12312317 13.78578758]
[146.76777649 -0.11162308]
[139.29232788 -13.84668064]
[142.44519043 -29.16312599]
[154.73765564 -38.82900238]
[170.36561584 -38.28038025]
[181.95001221 -27.77629852]
[184.02105713 -12.27646732]
[175.60086060 0.90056968]
[160.66517639 5.53301764]
[155.02053833 19.43042946]
[149.37590027 33.32783890]
[143.73126221 47.22525024]
[138.08662415 61.12266159]
[140.55554199 75.91808319]
[150.40681458 87.22968292]
[160.25810242 98.54128265]
[170.10937500 109.85287476]
[179.96066284 121.16447449]
[189.81193542 132.47607422]
[199.66322327 143.78767395]
[209.51449585 155.09927368]
[227.02142334 160.59675598]
[229.85679626 177.85507202]
[240.01600647 188.89093018]
[250.32632446 199.78576660]
[260.78576660 210.53750610]
[273.46463013 202.42382812]
[287.51733398 197.02879333]
[302.36843872 194.57333374]
[317.40982056 195.15797424]
[332.02554321 198.75880432]
[345.61706543 205.22836304]
[357.62786865 214.30171204]
[367.56607056 225.60731506]
[375.02478027 238.68220520]
[379.69848633 252.99098206]
[381.39584351 267.94772339]
[380.04736328 282.93994141]
[375.70822144 297.35369873]
[368.55615234 310.59881592]
[358.88397217 322.13284302]
[347.08779907 331.48352051]
[333.65066528 338.26794434]
[319.12280273 342.20825195]
[304.09912109 343.14312744]
[289.19485474 341.03427124]
[275.02029419 335.96807861]
[262.15588379 328.15194702]
[251.12840271 317.90597534]
[242.38945007 305.64974976]
[236.29685974 291.88510132]
[233.10012817 277.17572021]
[232.93014526 262.12396240]
[235.79389954 247.34613037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 85]
[2 84]
[4 83]
[5 82]
[8 80]
[9 79]
[10 78]
[11 77]
[12 76]
[13 75]
[14 74]
[15 73]
[18 33]
[19 32]
[20 31]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[41 45]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
