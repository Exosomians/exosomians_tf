%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:17:32 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGAAACUUCAUAUGAACUCCUCCCACUGCCCGCCACACAUACGCGAAGUCCCGGGACAAGUUGAUUCGUGAGAUGUGAAUCAAAUGACGAUUUAGGUGGAAGCUGGGAAUU\
) } def
/len { sequence length } bind def

/coor [
[13.79714012 313.95309448]
[1.18825686 305.82806396]
[-2.23023772 291.22348022]
[-11.76609421 302.80221558]
[-21.30195045 314.38098145]
[-19.61812210 325.30307007]
[-24.20226097 335.11480713]
[-33.28121948 340.60226440]
[-43.65717697 340.12011719]
[-53.81640244 351.15597534]
[-63.97562408 362.19183350]
[-67.03186798 378.30368042]
[-82.60039520 383.45663452]
[-94.66564178 372.34979248]
[-90.81591034 356.40890503]
[-75.01148224 352.03262329]
[-64.85226440 340.99673462]
[-54.69303894 329.96087646]
[-52.01343918 310.89404297]
[-32.88069916 304.84512329]
[-23.34484291 293.26635742]
[-13.80898762 281.68762207]
[-5.26186657 269.36096191]
[2.23813343 256.37057495]
[9.73813343 243.38018799]
[17.23813248 230.38981628]
[24.73813248 217.39942932]
[32.05843353 204.30694580]
[39.19764328 191.11483765]
[36.04886246 179.34565735]
[42.00350189 168.25762939]
[54.31706238 164.12516785]
[61.81706238 151.13478088]
[69.31706238 138.14440918]
[76.81706238 125.15402222]
[84.31706238 112.16364288]
[79.72868347 88.39861298]
[103.44274902 73.35595703]
[104.68143463 58.40718842]
[105.92012787 43.45841980]
[107.15882111 28.50965309]
[108.39750671 13.56088448]
[100.13048553 -2.82115340]
[110.52384949 -16.88765717]
[111.35016632 -31.86487961]
[112.17648315 -46.84210205]
[113.00279999 -61.81932449]
[113.82911682 -76.79654694]
[114.65543365 -91.77377319]
[114.03556061 -106.76095581]
[111.97525787 -121.61878967]
[109.91495514 -136.47662354]
[99.42088318 -149.07846069]
[105.34049988 -164.37193298]
[121.58422089 -166.62440491]
[131.44189453 -153.51875305]
[124.77278137 -138.53692627]
[126.83308411 -123.67909241]
[128.89338684 -108.82125854]
[138.67915344 -120.18958282]
[153.44389343 -122.83581543]
[166.56872559 -115.57368469]
[172.16995239 -101.65871429]
[167.73658752 -87.32884216]
[155.25605774 -79.00798798]
[140.32325745 -80.42630768]
[129.63265991 -90.94745636]
[128.80633545 -75.97023010]
[127.98002625 -60.99300766]
[127.15370941 -46.01578522]
[126.32739258 -31.03856277]
[125.50107574 -16.06134033]
[133.37150574 -6.76162529]
[132.71849060 5.80721903]
[123.34627533 14.79957485]
[122.10758209 29.74834251]
[120.86889648 44.69710922]
[119.63020325 59.64587784]
[118.39151764 74.59464264]
[128.08599854 86.04090881]
[143.03477478 87.27959442]
[157.98353577 88.51828766]
[172.93231201 89.75697327]
[183.80958557 78.52226257]
[199.36885071 76.95917511]
[212.26348877 85.80576324]
[216.40505981 100.88493347]
[209.83802795 115.07676697]
[195.66314697 121.68031311]
[180.57336426 117.57757568]
[171.69361877 104.70574188]
[156.74484253 103.46705627]
[141.79608154 102.22836304]
[126.84731293 100.98966980]
[120.33149719 113.71709442]
[109.05884552 120.25296783]
[97.30744171 119.66364288]
[89.80744171 132.65402222]
[82.30744171 145.64440918]
[74.80744171 158.63478088]
[67.30744171 171.62516785]
[67.79232025 189.96855164]
[52.38975143 198.25404358]
[45.25054169 211.44615173]
[43.88307953 220.62120056]
[37.72851562 224.89942932]
[30.22851372 237.88981628]
[22.72851372 250.88018799]
[15.22851467 263.87057495]
[7.72851419 276.86096191]
[22.60522079 274.94168091]
[34.63521957 283.90155029]
[37.05716324 298.70474243]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 22]
[4 21]
[5 20]
[9 18]
[10 17]
[11 16]
[23 110]
[24 109]
[25 108]
[26 107]
[27 106]
[28 104]
[29 103]
[32 101]
[33 100]
[34 99]
[35 98]
[36 97]
[38 79]
[39 78]
[40 77]
[41 76]
[42 75]
[44 72]
[45 71]
[46 70]
[47 69]
[48 68]
[49 67]
[50 59]
[51 58]
[52 57]
[80 94]
[81 93]
[82 92]
[83 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
