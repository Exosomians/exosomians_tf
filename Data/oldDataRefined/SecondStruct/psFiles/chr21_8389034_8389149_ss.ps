%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:20:11 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGACUGUGCGACAGGAGACCGCUGGACAGCGACCUCUCCAACCCGGAGGCCUACGCGCGCCCCGAGACCGGAUGGCCACUGGGCCGAUCGGCCGGCGCGAGGACGAACUCGGCGG\
) } def
/len { sequence length } bind def

/coor [
[-10.29647732 325.76922607]
[-22.01321411 329.09020996]
[-18.34773636 344.22964478]
[-26.31358528 357.19113159]
[-40.76929474 360.59228516]
[-48.44301987 373.48080444]
[-56.11674118 386.36932373]
[-63.79046249 399.25787354]
[-66.69824982 415.96060181]
[-83.55317688 417.79022217]
[-89.97721863 402.10046387]
[-76.67898560 391.58413696]
[-69.00526428 378.69561768]
[-61.33153915 365.80709839]
[-53.65781784 352.91857910]
[-57.55685806 338.58911133]
[-49.95821381 325.40902710]
[-34.90173721 321.41650391]
[-35.67108917 303.94042969]
[-19.66021729 294.96826172]
[-12.33529186 281.87835693]
[-5.01036596 268.78848267]
[2.31455970 255.69856262]
[9.63948536 242.60867310]
[16.96441078 229.51876831]
[24.28933716 216.42887878]
[17.57200432 204.80784607]
[17.50673676 191.27655029]
[24.21857834 179.40203857]
[36.03183365 172.36807251]
[49.88712311 172.12182617]
[57.56084442 159.23330688]
[57.42372513 144.33934021]
[71.13179779 136.44000244]
[78.80551910 123.55149078]
[86.47924042 110.66296387]
[84.27205658 95.82624054]
[73.17894745 85.72956848]
[62.08583832 75.63288879]
[50.99272537 65.53620911]
[34.96433640 64.85047913]
[25.62369728 51.80700684]
[30.13615227 36.41164017]
[45.04013062 30.47438431]
[58.90257263 38.54978943]
[61.08940506 54.44309998]
[72.18251801 64.53977966]
[83.27562714 74.63645935]
[94.36873627 84.73313141]
[107.15307617 76.88706970]
[103.17361450 62.42457199]
[91.12641907 51.29816055]
[95.00201416 35.36355209]
[110.81352234 31.01290131]
[122.29542542 42.72179031]
[117.63611603 58.44511414]
[121.61557770 72.90761566]
[128.43400574 76.03154755]
[148.88929749 85.40335846]
[162.44105530 78.97296906]
[175.99281311 72.54257965]
[185.14366150 59.63628387]
[199.95904541 61.17046356]
[213.51080322 54.74007797]
[227.06256104 48.30968857]
[233.57806396 41.71784210]
[241.06558228 41.89405823]
[247.75572205 35.47951508]
[255.23579407 35.85668945]
[269.11318970 30.16298485]
[282.99057007 24.46928024]
[296.86795044 18.77557373]
[306.69836426 6.37906790]
[321.41003418 8.70627689]
[335.28741455 3.01257110]
[349.16479492 -2.68113446]
[363.04217529 -8.37483978]
[376.91955566 -14.06854534]
[386.51272583 -27.36904907]
[402.79830933 -25.44241524]
[409.02310181 -10.27059937]
[398.78356934 2.53893399]
[382.61328125 -0.19116418]
[368.73590088 5.50254154]
[354.85852051 11.19624710]
[340.98114014 16.88995171]
[327.10375977 22.58365822]
[318.26593018 34.57291031]
[302.56164551 32.65295410]
[288.68426514 38.34666061]
[274.80688477 44.04036713]
[260.92950439 49.73407364]
[247.12982178 55.61357117]
[233.49295044 61.86144638]
[219.94119263 68.29183197]
[206.38943481 74.72222137]
[198.20790100 87.16857910]
[182.42320251 86.09433746]
[168.87144470 92.52472687]
[155.31968689 98.95511627]
[99.36775970 118.33669281]
[91.69403839 131.22520447]
[84.02031708 144.11373901]
[83.60855865 159.92958069]
[70.44937134 166.90702820]
[62.77564621 179.79556274]
[69.65700531 195.17828369]
[66.09642029 211.48036194]
[53.67668915 222.37507629]
[37.37923431 223.75379944]
[30.05430984 236.84368896]
[22.72938538 249.93359375]
[15.40445900 263.02349854]
[8.07953358 276.11340332]
[0.75460792 289.20330811]
[-6.57031775 302.29318237]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[5 15]
[6 14]
[7 13]
[8 12]
[20 116]
[21 115]
[22 114]
[23 113]
[24 112]
[25 111]
[26 110]
[31 106]
[32 105]
[34 103]
[35 102]
[36 101]
[37 49]
[38 48]
[39 47]
[40 46]
[50 57]
[51 56]
[59 100]
[60 99]
[61 98]
[63 96]
[64 95]
[65 94]
[67 93]
[69 92]
[70 91]
[71 90]
[72 89]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
