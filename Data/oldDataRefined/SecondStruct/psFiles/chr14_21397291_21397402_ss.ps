%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:17 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGGGAGUCUAGAAGUACACUCUUCAAAACAAUUUGAGUGACCGUGGGUUUGGUCCCGUUGUGACGGGAUGGACCACCGAGUCAUAAUCGUACCGUUGAGUAGUAACCCUG\
) } def
/len { sequence length } bind def

/coor [
[81.96625519 288.40975952]
[84.69157410 269.22061157]
[85.10855103 254.22640991]
[85.52552032 239.23220825]
[85.94248962 224.23800659]
[86.35946655 209.24380493]
[74.46453857 200.31919861]
[70.05347443 185.93147278]
[75.01828766 171.53689575]
[87.65312958 162.72399902]
[88.07009888 147.72979736]
[88.48706818 132.73559570]
[75.74674225 124.81826782]
[62.48733521 131.83168030]
[49.22792435 138.84510803]
[35.96851349 145.85852051]
[31.55522346 161.03410339]
[17.66376114 168.57087708]
[2.53568220 163.99739075]
[-4.85379028 150.02700806]
[-0.12061428 134.94813538]
[13.92710114 127.70677948]
[28.95509529 132.59910583]
[42.21450424 125.58569336]
[55.47391510 118.57227325]
[68.73332977 111.55886078]
[70.58602142 90.22135925]
[84.41953278 75.94637299]
[102.63487244 73.81140900]
[108.32693481 59.93334961]
[114.01898956 46.05529022]
[104.74711609 33.89060211]
[102.82175446 18.81778526]
[108.66064453 4.89752150]
[120.60333252 -4.17045021]
[135.38188171 -6.03054810]
[141.07394409 -19.90860558]
[146.76600647 -33.78666306]
[152.07006836 -47.81758881]
[156.98207092 -61.99053192]
[161.89405823 -76.16347504]
[166.80604553 -90.33641815]
[171.71803284 -104.50936127]
[176.43254089 -118.74922180]
[180.94865417 -133.05322266]
[173.91149902 -146.94985962]
[178.69523621 -161.39181519]
[191.98690796 -168.01502991]
[196.50302124 -182.31904602]
[201.01913452 -196.62306213]
[205.53524780 -210.92707825]
[200.26730347 -222.80119324]
[204.42590332 -234.68190002]
[215.23513794 -240.30589294]
[220.14712524 -254.47883606]
[225.05911255 -268.65179443]
[229.97109985 -282.82473755]
[234.88308716 -296.99768066]
[239.79508972 -311.17062378]
[244.70707703 -325.34356689]
[241.08062744 -341.33673096]
[253.30001831 -352.27374268]
[268.79495239 -346.90359497]
[271.62561035 -330.75057983]
[258.88000488 -320.43157959]
[253.96803284 -306.25863647]
[249.05604553 -292.08569336]
[244.14404297 -277.91275024]
[239.23205566 -263.73980713]
[234.32006836 -249.56684875]
[229.40808105 -235.39390564]
[233.69543457 -218.43905640]
[219.83924866 -206.41096497]
[215.32315063 -192.10694885]
[210.80703735 -177.80293274]
[206.29092407 -163.49893188]
[213.36982727 -150.44424438]
[208.99360657 -135.87361145]
[195.25267029 -128.53712463]
[190.73655701 -114.23310852]
[191.73773193 -106.80277252]
[185.89097595 -99.59737396]
[180.97898865 -85.42443085]
[176.06700134 -71.25148773]
[171.15501404 -57.07854080]
[166.24302673 -42.90559769]
[167.55395508 -38.17881775]
[165.80699158 -32.58308029]
[160.64405823 -28.09460640]
[154.95199585 -14.21654892]
[149.25994873 -0.33849120]
[158.47622681 11.36303711]
[160.61216736 26.20533180]
[154.99502563 40.21654510]
[143.04040527 49.59651184]
[127.89704895 51.74734879]
[122.20499420 65.62540436]
[116.51293182 79.50346375]
[126.79605103 91.62508392]
[128.60969543 108.43710327]
[120.20780182 124.26985168]
[103.48127747 133.15257263]
[103.06430054 148.14677429]
[102.64733124 163.14097595]
[114.77287292 172.64242554]
[118.93003082 187.29067993]
[113.72619629 201.41101074]
[101.35366821 209.66078186]
[100.93669891 224.65498352]
[100.51972198 239.64918518]
[100.10275269 254.64338684]
[99.68578339 269.63760376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 112]
[3 111]
[4 110]
[5 109]
[6 108]
[10 104]
[11 103]
[12 102]
[13 26]
[14 25]
[15 24]
[16 23]
[29 98]
[30 97]
[31 96]
[36 91]
[37 90]
[38 89]
[39 86]
[40 85]
[41 84]
[42 83]
[43 82]
[44 80]
[45 79]
[48 76]
[49 75]
[50 74]
[51 73]
[54 71]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[60 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
