%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:07 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUCUUUCUGCCAAGGCCUCGUAUUUAUGUUUUUGUGACCUCUACGACCCCUAGCUUGGGCCCUGGAGUACGUACGAUUCGUACGCGAGAUGGUGACUCGAUGUAGGGGUGGAG\
) } def
/len { sequence length } bind def

/coor [
[-44.11170197 210.06272888]
[-46.58935928 228.09678650]
[-52.73299408 245.22674561]
[-62.27622223 260.71609497]
[-74.80653381 273.89935303]
[-89.78314972 284.21060181]
[-106.56031799 291.20782471]
[-124.41519928 294.59185791]
[-142.57899475 294.21911621]
[-160.27003479 290.10775757]
[-176.72744751 282.43676758]
[-191.24385071 271.53820801]
[-202.33695984 281.63488770]
[-206.80255127 297.41433716]
[-222.76493835 301.17388916]
[-233.80339050 289.04605103]
[-228.56250000 273.50689697]
[-212.43363953 270.54177856]
[-201.34053040 260.44509888]
[-208.12097168 250.17008972]
[-213.39303589 239.04336548]
[-217.05184937 227.28497314]
[-219.02445984 215.12750244]
[-219.27127075 202.81153870]
[-217.78684998 190.58090210]
[-214.60003662 178.67778015]
[-209.77337646 167.33792114]
[-203.40193176 156.78605652]
[-195.61134338 147.23136902]
[-186.55541992 138.86332703]
[-176.41305542 131.84799194]
[-165.38471985 126.32472229]
[-153.68847656 122.40332794]
[-141.55572510 120.16197205]
[-129.22650146 119.64556122]
[-116.94490051 120.86486816]
[-104.95408630 123.79630280]
[-93.49156952 128.38238525]
[-82.78446198 134.53280640]
[-73.04500580 142.12632751]
[-64.46634674 151.01301575]
[-57.21870422 161.01737976]
[-43.84447479 154.22546387]
[-30.47024536 147.43356323]
[-17.09601784 140.64164734]
[-15.66350269 137.28413391]
[-12.46010780 134.49732971]
[-7.79405499 133.14028931]
[-2.36095071 133.89062500]
[11.51643085 128.19691467]
[25.39381218 122.50321198]
[39.27119446 116.80950928]
[53.14857483 111.11579895]
[67.02595520 105.42209625]
[80.90333557 99.72839355]
[86.58982086 86.40134430]
[99.99493408 80.90140533]
[113.40295410 86.39422607]
[127.28033447 80.70052338]
[141.15771484 75.00682068]
[155.03509521 69.31311035]
[168.91247559 63.61940765]
[182.71217346 57.73990631]
[196.34904480 51.49203110]
[209.90078735 45.06164551]
[208.77246094 30.79638481]
[212.59408569 17.03742981]
[220.88282776 5.44627619]
[232.61773682 -2.58468366]
[246.36544800 -6.09940338]
[260.45523071 -4.69196320]
[273.18203735 1.44666362]
[283.01284790 11.55422497]
[296.73236084 5.48999214]
[310.45187378 -0.57424092]
[324.17141724 -6.63847399]
[337.89093018 -12.70270729]
[351.61044312 -18.76693916]
[363.65301514 -30.70060921]
[378.45404053 -22.43222046]
[374.60610962 -5.92071486]
[357.67465210 -5.04742527]
[343.95513916 1.01680768]
[330.23562622 7.08104038]
[316.51611328 13.14527321]
[302.79660034 19.20950699]
[289.07708740 25.27373886]
[289.70547485 41.04793549]
[284.24417114 55.90077591]
[273.49484253 67.56698608]
[259.06805420 74.25537872]
[243.14193726 74.92382812]
[228.13334656 69.44155121]
[216.33117676 58.61339951]
[202.77943420 65.04379272]
[198.02343750 70.82949829]
[188.77641296 71.45941925]
[183.86679077 77.11535645]
[174.60618591 77.49678802]
[160.72880554 83.19049072]
[146.85142517 88.88420105]
[132.97404480 94.57790375]
[119.09666443 100.27160645]
[113.41017914 113.59865570]
[100.00506592 119.09859467]
[86.59704590 113.60577393]
[72.71966553 119.29947662]
[58.84228134 124.99317932]
[44.96490097 130.68688965]
[31.08751869 136.38059998]
[17.21013641 142.07429504]
[3.33275485 147.76800537]
[-10.30410957 154.01588440]
[-23.67833710 160.80778503]
[-37.05256653 167.59970093]
[-50.42679596 174.39160156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 19]
[13 18]
[42 116]
[43 115]
[44 114]
[45 113]
[49 112]
[50 111]
[51 110]
[52 109]
[53 108]
[54 107]
[55 106]
[58 103]
[59 102]
[60 101]
[61 100]
[62 99]
[63 97]
[64 95]
[65 94]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[78 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
