%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:45 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGGGGCCUCCCCCACGUGGCAAGGACCUCCAUGACGUUAUGGUCCAGCUACGCACCUCACCUGCCUCGUUCGAGGAUAAGGUAGAGGGACGAGGUUUUUAGGUAAAUUAUAUAACAGGAGCCUAUCUCCUGCAUAGUCUAUAAUUUGACUAUUCUUGUCUAUGAUGUGAACUAGAAUCGGUUUUCCGGCUCUUCGCUA\
) } def
/len { sequence length } bind def

/coor [
[169.20147705 160.28930664]
[161.43373108 147.45722961]
[153.66598511 134.62515259]
[145.89825439 121.79307556]
[130.98704529 123.42285919]
[126.17465973 137.62992859]
[121.36227417 151.83700562]
[116.54988861 166.04408264]
[120.28849792 182.01138306]
[108.14619446 193.03392029]
[92.61392975 187.77265930]
[89.66997528 171.63992310]
[102.34281921 161.23168945]
[107.15520477 147.02461243]
[111.96759033 132.81755066]
[116.77997589 118.61047363]
[99.18771362 123.96003723]
[83.55632019 115.92253113]
[69.95623016 122.25005341]
[56.35614014 128.57757568]
[42.75605011 134.90510559]
[29.15596199 141.23263550]
[15.55587387 147.56015015]
[10.40615177 159.39085388]
[-1.05749416 164.37930298]
[-12.46806431 160.34999084]
[-26.16491318 166.46524048]
[-39.86176300 172.58049011]
[-53.55860901 178.69575500]
[-67.25546265 184.81100464]
[-67.19747162 200.03981018]
[-73.34455109 213.97299194]
[-84.63167572 224.19651794]
[-99.10328674 228.93913269]
[-114.25209045 227.37911987]
[-127.45346832 219.78677368]
[-136.42019653 207.47752380]
[-139.59872437 192.58401489]
[-136.43838501 177.68663025]
[-127.48668671 165.36643982]
[-114.29459381 157.75798035]
[-99.14770508 156.17947388]
[-84.67031860 160.90441895]
[-73.37071228 171.11415100]
[-59.67386627 164.99890137]
[-45.97701645 158.88365173]
[-32.28016663 152.76838684]
[-18.58331871 146.65313721]
[-9.06812954 131.91136169]
[9.22834873 133.96006775]
[22.82843781 127.63254547]
[36.42852783 121.30501556]
[50.02861404 114.97749329]
[63.62870407 108.64996338]
[77.22879028 102.32244110]
[86.82867432 80.40261078]
[111.42986298 78.51593781]
[125.05825806 99.97038269]
[113.89029694 89.95656586]
[102.72233582 79.94274139]
[91.55437469 69.92891693]
[80.30888367 60.00224304]
[68.98654175 50.16331482]
[57.66419601 40.32438278]
[46.34185028 30.48545456]
[26.40344810 27.54742241]
[20.88883781 9.01867771]
[9.26598167 -0.46336856]
[-2.35687470 -9.94541454]
[-13.97973156 -19.42746162]
[-30.24533081 -21.51607323]
[-36.31882858 -36.74908447]
[-25.95232964 -49.45608139]
[-9.81000042 -46.56519318]
[-4.49768496 -31.05031776]
[7.12517166 -21.56827164]
[18.74802780 -12.08622551]
[30.37088585 -2.60417867]
[40.41194153 -4.54611206]
[50.06552505 -0.55318511]
[56.04769135 8.27781868]
[56.18077850 19.16311073]
[67.50312042 29.00204086]
[78.82546997 38.84096909]
[90.14781189 48.67989731]
[97.26389313 50.69582748]
[101.56819916 58.76095581]
[112.73616028 68.77478027]
[123.90412140 78.78859711]
[135.07208252 88.80242157]
[150.06800842 88.45252228]
[160.75675964 77.92871857]
[171.44552612 67.40492249]
[182.13427734 56.88111877]
[192.82304382 46.35731506]
[203.51179504 35.83351135]
[214.20056152 25.30970955]
[199.77490234 29.42074966]
[187.23977661 37.65909958]
[172.99203491 42.34970474]
[158.01441956 43.16902542]
[143.34004211 40.06055069]
[129.98106384 33.23868942]
[118.85894012 23.17398071]
[110.74082184 10.56065083]
[106.18666077 -3.73129058]
[105.51058197 -18.71604729]
[108.75921631 -33.36003494]
[115.70849609 -46.65317154]
[125.87908173 -57.67855835]
[138.56945801 -65.67571259]
[152.90429688 -70.09301758]
[167.89482117 -70.62579346]
[182.50708008 -67.23728180]
[195.73316956 -60.16122437]
[206.66081238 -49.88568497]
[214.53741455 -37.11683655]
[210.42637634 -22.69118690]
[220.95018005 -33.37994766]
[231.47398376 -44.06870651]
[241.99778748 -54.75746536]
[252.52159119 -65.44622803]
[263.04537964 -76.13498688]
[264.35897827 -92.12416840]
[277.75860596 -100.94628143]
[292.96520996 -95.83374786]
[298.31362915 -80.70846558]
[289.70095825 -67.17326355]
[273.73416138 -65.61118317]
[263.21035767 -54.92242432]
[252.68653870 -44.23366165]
[242.16273499 -33.54490280]
[231.63894653 -22.85614395]
[221.11514282 -12.16738510]
[228.17355347 1.06888580]
[235.23130798 14.30398655]
[249.97084045 11.52077103]
[264.71035767 8.73755455]
[279.44989014 5.95433807]
[294.18942261 3.17112160]
[308.92895508 0.38790536]
[315.44000244 -13.69704628]
[329.00286865 -21.23550415]
[344.40234375 -19.32877541]
[355.71704102 -8.71003819]
[358.59619141 6.53758669]
[351.93273926 20.55107689]
[338.28887939 27.94195938]
[322.91101074 25.86828804]
[311.71218872 15.12743378]
[296.97265625 17.91065025]
[282.23312378 20.69386673]
[267.49359131 23.47708321]
[252.75405884 26.26029968]
[238.01452637 29.04351616]
[224.72436523 35.99847031]
[214.03559875 46.52227020]
[203.34684753 57.04607391]
[192.65808105 67.56987762]
[181.96932983 78.09368134]
[171.28056335 88.61748505]
[160.59179688 99.14128113]
[158.73031616 114.02532959]
[166.49806213 126.85740662]
[174.26580811 139.68948364]
[182.03355408 152.52156067]
[199.09184265 156.38331604]
[207.90895081 171.09582520]
[203.45024109 187.30844116]
[211.41659546 200.01815796]
[219.38296509 212.72789001]
[227.34933472 225.43760681]
[231.97554016 227.88635254]
[234.90264893 231.50512695]
[235.96957397 235.44879150]
[235.37478638 238.93115234]
[242.73970032 251.99859619]
[250.10459900 265.06604004]
[263.62084961 273.28927612]
[263.12942505 288.17575073]
[270.49432373 301.24319458]
[277.85925293 314.31063843]
[285.22415161 327.37808228]
[299.60815430 335.25418091]
[299.70870972 351.65301514]
[285.42239380 359.70489502]
[271.44570923 351.12673950]
[272.15670776 334.74301147]
[264.79180908 321.67556763]
[257.42687988 308.60812378]
[250.06198120 295.54067993]
[237.07250977 288.25210571]
[237.03715515 272.43093872]
[229.67225647 259.36349487]
[222.30734253 246.29606628]
[214.63961792 233.40397644]
[206.67324829 220.69424438]
[198.70687866 207.98452759]
[190.74050903 195.27481079]
[177.89782715 194.17776489]
[167.88391113 185.75669861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[5 16]
[6 15]
[7 14]
[8 13]
[18 55]
[19 54]
[20 53]
[21 52]
[22 51]
[23 50]
[26 48]
[27 47]
[28 46]
[29 45]
[30 44]
[58 90]
[59 89]
[60 88]
[61 87]
[62 85]
[63 84]
[64 83]
[65 82]
[67 78]
[68 77]
[69 76]
[70 75]
[91 162]
[92 161]
[93 160]
[94 159]
[95 158]
[96 157]
[97 156]
[118 134]
[119 133]
[120 132]
[121 131]
[122 130]
[123 129]
[136 155]
[137 154]
[138 153]
[139 152]
[140 151]
[141 150]
[169 199]
[170 198]
[171 197]
[172 196]
[176 195]
[177 194]
[178 193]
[180 191]
[181 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
