%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:32 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUGGCUAUAAAACCUGGUUUUUGGCCCGAGCAGGCCCUAAACUUGGGCCCUGGAGAGCGUGGGAUUCGCUCUUAGUAUGGGGAUCUGGUUGCUCGGUGUGCGG\
) } def
/len { sequence length } bind def

/coor [
[11.26356220 217.80924988]
[1.63153315 222.72349548]
[-9.05943871 224.06256104]
[-19.53042030 221.69281006]
[-28.53781319 215.92268372]
[-40.97890091 224.30238342]
[-53.41998291 232.68209839]
[-65.86106873 241.06179810]
[-78.30215454 249.44149780]
[-83.78266907 256.95477295]
[-91.23839569 257.87878418]
[-103.92234039 265.88613892]
[-116.60627747 273.89346313]
[-129.29022217 281.90081787]
[-141.97415161 289.90817261]
[-152.13998413 303.47622681]
[-167.99198914 297.46371460]
[-166.60269165 280.56677246]
[-149.98150635 277.22424316]
[-137.29756165 269.21688843]
[-124.61363220 261.20953369]
[-111.92968750 253.20217896]
[-99.24575043 245.19483948]
[-86.68185425 237.00041199]
[-74.24076843 228.62071228]
[-61.79968643 220.24101257]
[-49.35860062 211.86129761]
[-36.91751480 203.48159790]
[-37.71527100 184.12550354]
[-26.79646492 167.95397949]
[-8.28113747 161.36587524]
[10.66656208 167.08659363]
[22.02923012 157.29425049]
[33.39189911 147.50192261]
[37.98186874 133.33218384]
[53.48673630 130.18421936]
[64.84940338 120.39189148]
[76.21207428 110.59955597]
[74.54456329 94.50118256]
[82.70836639 80.52654266]
[97.55047607 74.07287598]
[113.33863068 77.63268280]
[124.40613556 67.50793457]
[135.47363281 57.38319397]
[146.54113770 47.25844574]
[151.50080872 32.23472977]
[166.11396790 29.35287285]
[166.97471619 13.79983997]
[178.34295654 3.68956923]
[193.16510010 4.60601282]
[204.23260498 -5.51873255]
[215.30009460 -15.64347744]
[226.36759949 -25.76822281]
[237.43508911 -35.89296722]
[247.88336182 -46.65557480]
[257.67568970 -58.01824570]
[267.46801758 -69.38091278]
[277.26034546 -80.74358368]
[287.05270386 -92.10625458]
[296.84503174 -103.46891785]
[306.63735962 -114.83158875]
[303.94659424 -130.23593140]
[311.83175659 -143.73994446]
[326.56970215 -148.96743774]
[341.20162964 -143.45014954]
[348.81881714 -129.79318237]
[345.82461548 -114.44493866]
[333.63281250 -104.65237427]
[318.00003052 -105.03925323]
[308.20770264 -93.67658997]
[298.41534424 -82.31391907]
[288.62301636 -70.95124817]
[278.83068848 -59.58858109]
[269.03836060 -48.22591400]
[259.24603271 -36.86324310]
[259.42211914 -33.91025162]
[258.34188843 -30.70736122]
[255.90287781 -27.77136040]
[252.20631409 -25.64606857]
[247.55984497 -24.82546806]
[236.49234009 -14.70072365]
[225.42485046 -4.57597828]
[214.35734558 5.54876661]
[203.28984070 15.67351151]
[202.88652039 30.51847458]
[191.80673218 40.94406509]
[176.23870850 40.42037201]
[172.07064819 54.71990204]
[156.66587830 58.32594681]
[145.59837341 68.45069122]
[134.53088379 78.57543945]
[123.46337891 88.70018005]
[125.98136139 101.78461456]
[121.69796753 114.40187836]
[111.73450470 123.24903107]
[98.69919586 126.01007080]
[86.00440216 121.96222687]
[74.64173889 131.75456238]
[63.27906799 141.54689026]
[57.87636185 156.41703796]
[43.18423080 158.86459351]
[31.82156181 168.65692139]
[20.45889473 178.44924927]
[23.59159851 188.96044922]
[22.96333694 199.87174988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 28]
[6 27]
[7 26]
[8 25]
[9 24]
[11 23]
[12 22]
[13 21]
[14 20]
[15 19]
[32 103]
[33 102]
[34 101]
[36 99]
[37 98]
[38 97]
[42 92]
[43 91]
[44 90]
[45 89]
[47 87]
[50 84]
[51 83]
[52 82]
[53 81]
[54 80]
[55 75]
[56 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
