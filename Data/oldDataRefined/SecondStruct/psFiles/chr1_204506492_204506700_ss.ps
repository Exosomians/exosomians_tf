%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:17:08 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACCUCACUUGUCUUUCUCGAAAAGAAGCCCUCGCGGGCCUAUCGAGUCAGCCAUCUCGUAGUCUGAAAAUUAGACUCCCAGGUCCCAAGUUCAGGGACAAGCCCGCAAACAUCAAAAGCAAUGAAAUUGGACGAUUUAAUAGGGUAGUUCAGGGUUCUCGCCUGUAGCAUUUGGGAAUGUAAAGUUCAACUUAAGUUUAGUAAAAAG\
) } def
/len { sequence length } bind def

/coor [
[257.59112549 577.64910889]
[257.17178345 562.60546875]
[259.69564819 547.76916504]
[265.06573486 533.71038818]
[273.07562256 520.96960449]
[283.41744995 510.03649902]
[295.69366455 501.33126831]
[309.43240356 495.18859863]
[306.09460449 480.56466675]
[302.75677490 465.94073486]
[299.41897583 451.31683350]
[286.70999146 443.63455200]
[283.11666870 428.85137939]
[291.26071167 415.57312012]
[280.88531494 404.88665771]
[285.35778809 389.71075439]
[282.01998901 375.08685303]
[278.68215942 360.46292114]
[275.34436035 345.83901978]
[272.00653076 331.21508789]
[268.66873169 316.59115601]
[265.33090210 301.96725464]
[261.99310303 287.34332275]
[251.26933289 284.91387939]
[242.21492004 278.56555176]
[236.20799255 269.20654297]
[234.18472290 258.20751953]
[236.49369812 247.20085144]
[242.83689880 237.83839417]
[235.53207397 224.73727417]
[228.22723389 211.63615417]
[220.92240906 198.53501892]
[213.61756897 185.43389893]
[193.28048706 183.13732910]
[185.74603271 163.67639160]
[173.10520935 155.60113525]
[160.46440125 147.52586365]
[147.82359314 139.45060730]
[135.18276978 131.37535095]
[122.54195404 123.30009460]
[114.14464569 134.86767578]
[100.08145905 142.83518982]
[82.10944366 144.58770752]
[63.11955643 138.41207886]
[46.67598724 123.95758820]
[31.67598724 123.95758820]
[16.67598724 123.95758820]
[1.67598808 123.95758820]
[-7.33542967 136.58984375]
[-22.06152153 141.48085022]
[-36.83980560 136.74989319]
[-45.98772812 124.21613312]
[-45.98772812 108.69905090]
[-36.83980560 96.16529846]
[-22.06152153 91.43434143]
[-7.33542967 96.32533264]
[1.67598808 108.95758820]
[16.67598724 108.95758820]
[31.67598724 108.95758820]
[46.67598724 108.95758820]
[48.61713028 101.71315002]
[54.44055939 79.97982025]
[41.45018005 72.47982025]
[28.45979691 64.97982025]
[15.46941662 57.47981644]
[2.47903514 49.97981644]
[-10.51134586 42.47981644]
[-23.50172615 34.97981644]
[-40.24198914 32.29653549]
[-42.29773331 15.46768284]
[-26.69564819 8.83358574]
[-16.00172615 21.98943520]
[-3.01134586 29.48943520]
[9.97903538 36.98943710]
[22.96941566 44.48943710]
[35.95979691 51.98943710]
[48.95018005 59.48943710]
[61.94055939 66.98943329]
[67.58859253 62.05489731]
[54.71187592 54.36138535]
[58.04973602 39.73747635]
[72.98935699 38.39295959]
[78.88466644 52.18581390]
[84.53270721 47.25127411]
[78.84432220 33.37170792]
[73.15593719 19.49214554]
[67.46755981 5.61258078]
[61.77917480 -8.26698399]
[46.82898331 -12.85236931]
[38.36732864 -26.00282097]
[40.38954544 -41.50909805]
[51.94080353 -52.04961395]
[67.56695557 -52.64745331]
[79.88980865 -43.02033997]
[83.09088898 -27.71389771]
[75.65873718 -13.95536613]
[81.34712219 -0.07580124]
[87.03550720 13.80376339]
[92.72388458 27.68332863]
[98.41226959 41.56289291]
[128.80834961 59.40408325]
[139.14897156 87.48950958]
[130.61721802 110.65927887]
[143.25802612 118.73453522]
[155.89884949 126.80979919]
[168.53965759 134.88505554]
[181.18048096 142.96031189]
[193.82128906 151.03556824]
[186.59941101 137.88853455]
[174.00721741 129.73768616]
[166.54997253 116.72270966]
[165.88575745 101.73742676]
[172.16226196 88.11371613]
[183.98394775 78.88072968]
[198.72230530 76.09137726]
[213.10037231 80.36585236]
[223.92126465 90.75373840]
[228.77902222 104.94536591]
[226.59353638 119.78530121]
[217.84854126 131.97589111]
[215.92903137 146.85256958]
[224.74581909 134.71731567]
[233.56259155 122.58205414]
[242.37936401 110.44680023]
[246.79779053 94.07872009]
[263.74932861 93.79333496]
[268.71621704 110.00340271]
[254.51461792 119.26358032]
[245.69784546 131.39883423]
[236.88107300 143.53408813]
[228.06428528 155.66934204]
[237.08215332 143.68275452]
[250.51628113 137.01013184]
[265.51617432 137.06729126]
[278.89907837 143.84210205]
[287.82531738 155.89706421]
[290.40090942 170.67428589]
[286.07934570 185.03826904]
[275.77758789 195.94119263]
[261.68151855 201.06962585]
[246.78210449 199.33538818]
[234.24078369 191.10644531]
[226.71868896 178.12907410]
[234.02352905 191.23019409]
[241.32835388 204.33131409]
[248.63319397 217.43243408]
[255.93801880 230.53356934]
[278.46411133 234.46168518]
[290.99197388 253.13172913]
[305.96511841 254.02879333]
[320.93829346 254.92585754]
[335.91772461 255.71089172]
[350.90261841 256.38388062]
[365.88751221 257.05685425]
[380.87240601 257.72979736]
[391.31741333 246.09213257]
[406.80651855 243.94226074]
[420.02621460 252.29530334]
[424.73458862 267.20721436]
[418.70849609 281.63705444]
[404.79324341 288.77148438]
[389.55920410 285.24182129]
[380.19943237 272.71472168]
[365.21453857 272.04174805]
[350.22964478 271.36877441]
[335.24475098 270.69580078]
[328.42111206 273.53628540]
[320.04122925 269.89901733]
[305.06805420 269.00195312]
[290.09490967 268.10488892]
[284.86813354 277.33697510]
[276.61700439 284.00552368]
[279.95483398 298.62942505]
[283.29263306 313.25335693]
[286.63046265 327.87725830]
[289.96826172 342.50119019]
[293.30609131 357.12512207]
[296.64389038 371.74902344]
[299.98171997 386.37295532]
[310.59585571 398.10540771]
[305.88461304 412.23529053]
[318.98336792 420.66500854]
[322.16006470 435.54330444]
[314.04290771 447.97900391]
[317.38070679 462.60293579]
[320.71853638 477.22686768]
[324.05633545 491.85076904]
[339.09976196 491.42413330]
[353.93728638 493.94079590]
[367.99862671 499.30407715]
[380.74331665 507.30776978]
[391.68145752 517.64428711]
[400.39263916 529.91625977]
[406.54202271 543.65203857]
[409.89321899 558.32360840]
[410.31741333 573.36712646]
[407.79833984 588.20422363]
[402.43280029 602.26470947]
[394.42703247 615.00811768]
[384.08877563 625.94458008]
[371.81536865 634.65374756]
[358.07861328 640.80090332]
[343.40646362 644.14971924]
[328.36291504 644.57153320]
[313.52618408 642.05004883]
[299.46658325 636.68218994]
[286.72448730 628.67437744]
[275.78967285 618.33435059]
[267.08248901 606.05957031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 187]
[9 186]
[10 185]
[11 184]
[14 181]
[16 179]
[17 178]
[18 177]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[35 108]
[36 107]
[37 106]
[38 105]
[39 104]
[40 103]
[45 60]
[46 59]
[47 58]
[48 57]
[62 78]
[63 77]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[121 131]
[122 130]
[123 129]
[124 128]
[149 170]
[150 169]
[151 168]
[152 166]
[153 165]
[154 164]
[155 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
