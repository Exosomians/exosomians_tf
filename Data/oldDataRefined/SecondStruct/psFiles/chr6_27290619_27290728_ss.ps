%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:04 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUGUCCAAAGGCACCACAUCACCAAUAGUGUAAGCGGAAUGUGCGCUUUCCAGGAGCCCAGCUUUGGCUCGCCUUUGUUGAACGUUAAAAAGCCCCACAAAGACAAAA\
) } def
/len { sequence length } bind def

/coor [
[123.72519684 222.69975281]
[115.68062592 235.36012268]
[107.63606262 248.02049255]
[99.77144623 260.79342651]
[92.08837891 273.67639160]
[84.40530396 286.55932617]
[76.72222900 299.44226074]
[77.03132629 315.83850098]
[62.84854507 324.07141113]
[48.76391983 315.67169189]
[49.26650238 299.28024292]
[63.83927917 291.75918579]
[71.52235413 278.87625122]
[79.20542908 265.99331665]
[86.88850403 253.11035156]
[87.62232971 245.64468384]
[94.97569275 239.97592163]
[103.02026367 227.31555176]
[111.06483459 214.65518188]
[110.74317169 209.07867432]
[113.13456726 203.53179932]
[110.18219757 188.82522583]
[107.22982025 174.11863708]
[97.13883209 163.16322327]
[102.00856018 148.11010742]
[99.05618286 133.40353394]
[96.10381317 118.69695282]
[84.10046387 110.58116913]
[81.24856567 96.37508392]
[89.18960571 84.25542450]
[86.23723602 69.54884338]
[83.28485870 54.84226227]
[79.06290436 49.44777298]
[78.41352844 43.61470032]
[80.60636902 39.22127151]
[78.49075317 24.37121582]
[76.37512970 9.52115917]
[66.76878357 -3.04978299]
[72.63366699 -16.74110794]
[70.51804352 -31.59116364]
[68.40242767 -46.44121933]
[56.04654694 -55.92647171]
[54.11255264 -71.01667786]
[63.23143768 -82.73766327]
[61.11581802 -97.58772278]
[51.50946426 -110.15866089]
[57.37435150 -123.84999084]
[55.25873184 -138.70004272]
[53.14311218 -153.55009460]
[51.02748871 -168.40016174]
[48.91186905 -183.25021362]
[40.69200134 -198.07823181]
[52.66504288 -210.08166504]
[67.51385498 -201.89941406]
[63.76192474 -185.36582947]
[65.87754822 -170.51577759]
[67.99316406 -155.66572571]
[70.10878754 -140.81565857]
[72.22440338 -125.96560669]
[81.67943573 -114.45684052]
[75.96587372 -99.70333862]
[78.08148956 -84.85328674]
[90.11081696 -76.14518738]
[92.46789551 -61.11525726]
[83.25247955 -48.55683899]
[85.36810303 -33.70678329]
[87.48371887 -18.85672760]
[96.93875122 -7.34796143]
[91.22518921 7.40553951]
[93.34080505 22.25559616]
[95.45642853 37.10565186]
[97.99143982 51.88988876]
[100.94381714 66.59646606]
[103.89618683 81.30304718]
[115.89953613 89.41883087]
[118.75143433 103.62491608]
[110.81039429 115.74457550]
[113.76276398 130.45115662]
[116.71514130 145.15773010]
[127.01730347 157.16506958]
[121.93640137 171.16627502]
[124.88877869 185.87284851]
[127.84114838 200.57942200]
[134.25456238 187.01962280]
[143.30580139 175.05822754]
[154.61216736 165.20094299]
[167.69564819 157.86456299]
[182.00306702 153.35923767]
[196.92948914 151.87547302]
[211.84385681 153.47598267]
[226.11558533 158.09312439]
[239.14125061 165.53166199]
[250.37014771 175.47711182]
[259.32751465 187.50897217]
[265.63464355 201.11853027]
[269.02484131 215.73039246]
[269.35479736 230.72676086]
[266.61053467 245.47360229]
[260.90814209 259.34741211]
[252.48863220 271.76159668]
[241.70803833 282.19128418]
[229.02214050 290.19555664]
[214.96731567 295.43594360]
[200.13777161 297.69088745]
[185.16052246 296.86508179]
[170.66879272 292.99340820]
[157.27529907 286.23956299]
[145.54631042 276.88912964]
[135.97773743 265.33740234]
[128.97412109 252.07279968]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[4 15]
[5 14]
[6 13]
[7 12]
[21 83]
[22 82]
[23 81]
[25 79]
[26 78]
[27 77]
[30 74]
[31 73]
[32 72]
[35 71]
[36 70]
[37 69]
[39 67]
[40 66]
[41 65]
[44 62]
[45 61]
[47 59]
[48 58]
[49 57]
[50 56]
[51 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
