%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:34 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGACCAGGCUACCAUCACUAAAUAGUCUUGAAUAAUUGUAAUCACAGUGAUUUCAACCAUAUGUUGGGGGGUGACGAUUUAAACUGACCGAAAAUUUUUAUAAAUAAU\
) } def
/len { sequence length } bind def

/coor [
[205.72358704 379.49542236]
[213.89952087 366.80462646]
[225.19696045 356.79110718]
[218.63412476 343.30300903]
[204.51557922 338.69839478]
[197.66778564 325.11303711]
[202.59324646 310.33541870]
[196.03039551 296.84732056]
[189.46755981 283.35922241]
[175.34901428 278.75460815]
[168.50120544 265.16925049]
[173.42666626 250.39163208]
[166.86383057 236.90351868]
[150.09303284 227.45497131]
[151.42800903 207.43882751]
[138.46620178 200.10118103]
[138.49070740 184.27999878]
[131.17527771 171.18478394]
[123.85985565 158.08956909]
[116.54443359 144.99436951]
[109.22901154 131.89915466]
[99.03011322 133.82022095]
[88.54126740 132.49998474]
[78.78594208 127.94823456]
[70.75201416 120.49561310]
[65.29206085 110.77190399]
[63.03379059 99.65377045]
[64.30993652 88.18598938]
[69.11528778 77.48326874]
[77.09607697 68.62196350]
[68.00681305 56.68943024]
[58.91755295 44.75690079]
[49.82828903 32.82436752]
[40.73902512 20.89183617]
[23.42870331 18.91381836]
[13.04996872 5.33983278]
[15.57766914 -11.21972847]
[6.15436935 -22.89026451]
[-3.26893067 -34.56080246]
[-12.69223118 -46.23133850]
[-22.11553001 -57.90187454]
[-37.60341263 -63.29237747]
[-40.41284180 -79.44908142]
[-27.65371895 -89.75135803]
[-12.45153522 -83.60110474]
[-10.44499397 -67.32517242]
[-1.02169442 -55.65463638]
[8.40160561 -43.98410034]
[17.82490540 -32.31356430]
[27.24820518 -20.64302826]
[40.21138000 -21.06667519]
[51.19002151 -13.80018139]
[56.00640488 -1.33740962]
[52.67155457 11.80257416]
[61.76081848 23.73510551]
[70.85008240 35.66763687]
[79.93934631 47.60016632]
[89.02861023 59.53269958]
[103.97457123 58.26060867]
[110.91648865 44.96362305]
[117.85839844 31.66663742]
[114.44338226 15.99126911]
[124.68099976 3.63931561]
[140.71783447 4.08613968]
[150.25178528 16.98897552]
[145.96923828 32.44987106]
[131.15538025 38.60855484]
[124.21347046 51.90553665]
[117.27155304 65.20252228]
[133.08879089 83.51510620]
[134.48460388 106.47703552]
[122.32421875 124.58373260]
[129.63964844 137.67893982]
[136.95506287 150.77415466]
[144.27049255 163.86936951]
[151.58592224 176.96456909]
[165.07096863 185.23887634]
[164.52322388 200.12341309]
[175.31912231 202.53213501]
[182.79338074 210.38320923]
[184.59327698 220.84803772]
[180.35192871 230.34068298]
[186.91477966 243.82879639]
[201.58224487 249.07315063]
[208.04576111 262.84552002]
[202.95565796 276.79635620]
[209.51850891 290.28448486]
[216.08134460 303.77258301]
[230.74880981 309.01696777]
[237.21232605 322.78930664]
[232.12223816 336.74017334]
[238.68507385 350.22827148]
[253.53636169 347.51870728]
[268.56784058 348.91757202]
[282.66412354 354.32110596]
[294.77908325 363.32830811]
[304.01379395 375.27081299]
[309.68292236 389.26235962]
[311.36584473 404.26470947]
[308.93759155 419.16458130]
[302.57843018 432.85629272]
[292.76019287 444.32388306]
[280.21151733 452.71630859]
[265.86355591 457.41085815]
[250.78103638 458.05911255]
[236.08319092 454.61300659]
[222.86067200 447.32824707]
[212.09471130 436.74539185]
[204.58418274 423.64981079]
[200.88644409 409.01321411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 92]
[4 91]
[7 88]
[8 87]
[9 86]
[12 83]
[13 82]
[15 78]
[17 76]
[18 75]
[19 74]
[20 73]
[21 72]
[30 58]
[31 57]
[32 56]
[33 55]
[34 54]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[59 69]
[60 68]
[61 67]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
