%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:07 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACACUGCUCCACCGGCUCACCAAUUCCGCUACCUGACGAUUAGGUAACACGAGACGUGUGCACCCAAGCUUAGGGUAGGAGCAGCCGACGUAUCGUUCGGAAAACAA\
) } def
/len { sequence length } bind def

/coor [
[97.13509369 237.98260498]
[101.87884521 223.75247192]
[111.88596344 212.57850647]
[125.50891876 206.30035400]
[140.50486755 205.95164490]
[154.40399170 211.58915710]
[147.02799988 198.52796936]
[139.65200806 185.46676636]
[132.27601624 172.40557861]
[124.90001678 159.34439087]
[117.52402496 146.28320312]
[110.14802551 133.22201538]
[94.52677155 134.30346680]
[80.01764679 128.41461182]
[69.56886292 116.75201416]
[55.17646790 120.97800446]
[40.78407288 125.20399475]
[37.24110031 140.14865112]
[26.68880081 151.30860901]
[11.96568775 155.68188477]
[-2.96779561 152.09208679]
[-14.09461689 141.50485229]
[-18.42171669 126.76810455]
[-14.78512764 111.84594727]
[-4.16307306 100.75236511]
[10.58716679 96.47148132]
[25.49785233 100.15482330]
[36.55808258 110.81159973]
[50.95047760 106.58560944]
[65.34287262 102.35961914]
[63.60241318 90.16864777]
[66.33588409 77.18551636]
[54.99964142 67.36260986]
[43.66339493 57.53969574]
[32.32715225 47.71678543]
[20.99090958 37.89387512]
[9.65466499 28.07096481]
[-1.68157852 18.24805260]
[-17.61150742 12.44514561]
[-16.44522285 -4.46863890]
[0.13042535 -8.03013515]
[8.14133263 6.91180944]
[19.47757530 16.73472023]
[30.81381989 26.55763245]
[42.15006256 36.38054276]
[53.48630524 46.20345306]
[64.82254791 56.02636337]
[76.15879059 65.84927368]
[89.80327606 59.61804962]
[89.80327606 44.61804962]
[89.80327606 29.61804962]
[89.80327606 14.61805058]
[89.80327606 -0.38194954]
[83.75693512 -16.22108269]
[97.30327606 -26.41583633]
[110.84961700 -16.22108269]
[104.80327606 -0.38194954]
[104.80327606 14.61805058]
[104.80327606 29.61804962]
[104.80327606 44.61804962]
[104.80327606 59.61804962]
[111.84057617 63.16615677]
[117.71939850 67.84530640]
[122.27992249 73.34874725]
[134.15846252 64.18902588]
[146.03698730 55.02930832]
[157.91552734 45.86959076]
[158.37962341 30.23889732]
[168.82089233 18.59786034]
[184.30929565 16.44302177]
[197.53167725 24.79183197]
[202.24484253 39.70223999]
[196.22335815 54.13400269]
[182.31039429 61.27288437]
[167.07524109 57.74812698]
[155.19670105 66.90784454]
[143.31817627 76.06755829]
[131.43963623 85.22727966]
[134.04548645 106.89850616]
[123.20922089 125.84601593]
[130.58520508 138.90721130]
[137.96121216 151.96839905]
[145.33720398 165.02958679]
[152.71319580 178.09077454]
[160.08918762 191.15196228]
[167.46517944 204.21316528]
[177.12521362 215.68852234]
[188.73733521 225.18370056]
[200.34945679 234.67889404]
[211.96159363 244.17407227]
[223.70811462 253.50247192]
[235.58665466 262.66220093]
[251.82188416 267.54623413]
[251.62307739 284.49899292]
[235.27778625 289.00097656]
[226.42692566 274.54074097]
[214.54840088 265.38101196]
[207.22074890 263.76470947]
[202.46640015 255.78619385]
[190.85427856 246.29101562]
[179.24215698 236.79582214]
[167.63003540 227.30064392]
[170.81486511 241.95863342]
[167.91368103 256.67538452]
[159.40409851 269.02801514]
[146.68710327 276.98275757]
[131.85639954 279.23004150]
[117.35366058 275.39984131]
[105.56656647 266.12274170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 86]
[7 85]
[8 84]
[9 83]
[10 82]
[11 81]
[12 80]
[15 30]
[16 29]
[17 28]
[32 48]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[38 42]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[64 78]
[65 77]
[66 76]
[67 75]
[87 102]
[88 101]
[89 100]
[90 99]
[91 97]
[92 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
