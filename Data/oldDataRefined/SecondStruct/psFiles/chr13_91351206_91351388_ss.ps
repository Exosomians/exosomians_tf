%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:15 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAAAACGUCCAAACGUAGGUCGACACACUAUAAGACGACACGUUUAGGUACGUUUUGACUGACACCAUCACUUUUCAGACAUCUUUUCAUUCCCUUUGAGUUUGGGGAAAGAUGUGUCCAACCCUAGCCAACGUUACGACACAAAGACAUACCAUAACGUGAACAGGGCCGGACAACUCAA\
) } def
/len { sequence length } bind def

/coor [
[81.99717712 133.54640198]
[87.26536560 119.49953461]
[74.19046021 126.85118866]
[61.11555481 134.20283508]
[48.04064560 141.55448914]
[34.96574020 148.90614319]
[21.89083290 156.25779724]
[8.81592464 163.60945129]
[-4.25898170 170.96110535]
[-17.33388901 178.31275940]
[-30.34556007 185.77575684]
[-43.29304504 193.34957886]
[-56.17540359 201.03364563]
[-68.99169159 208.82739258]
[-81.80798340 216.62115479]
[-94.62427521 224.41491699]
[-107.44056702 232.20867920]
[-120.25685883 240.00244141]
[-123.78136444 245.64167786]
[-128.86648560 248.24572754]
[-133.64645386 247.83485413]
[-146.72135925 255.18650818]
[-159.79626465 262.53817749]
[-172.87117004 269.88983154]
[-171.40980530 285.04846191]
[-176.24650574 299.48889160]
[-186.54328918 310.70922852]
[-200.51617432 316.76550293]
[-215.74427795 316.60839844]
[-229.58924866 310.26513672]
[-239.65232849 298.83471680]
[-244.19006348 284.29757690]
[-242.41625977 269.17230225]
[-234.63821411 256.07949829]
[-222.20353699 247.28752136]
[-207.26661682 244.31965637]
[-192.41535950 247.69010925]
[-180.22282410 256.81491089]
[-167.14791870 249.46325684]
[-154.07301331 242.11160278]
[-140.99810791 234.75994873]
[-128.05061340 227.18614197]
[-115.23432922 219.39237976]
[-102.41803741 211.59863281]
[-89.60174561 203.80487061]
[-76.78545380 196.01110840]
[-63.96916199 188.21734619]
[-59.87793350 182.04078674]
[-50.86685562 180.40208435]
[-37.91936874 172.82827759]
[-33.72328186 166.72245789]
[-24.68554306 165.23785400]
[-11.61063480 157.88619995]
[1.46427190 150.53454590]
[14.53917885 143.18289185]
[27.61408615 135.83123779]
[40.68899155 128.47958374]
[53.76390076 121.12793732]
[66.83880615 113.77628326]
[79.91371155 106.42462921]
[82.33609009 91.62151337]
[72.28644562 80.48577881]
[62.23680496 69.35003662]
[52.18716431 58.21429443]
[37.55594254 62.56057358]
[22.48925972 60.11971283]
[9.97861385 51.37634659]
[2.50800347 38.06647110]
[1.56072342 22.83277893]
[7.32485676 8.69992638]
[18.65593147 -1.52599740]
[33.30415344 -5.81462717]
[48.36110687 -3.31445265]
[60.83722687 5.47811460]
[68.25536346 18.81730461]
[69.14264679 34.05461121]
[63.32290268 48.16465378]
[73.37254333 59.30039215]
[83.42218781 70.43613434]
[93.47182465 81.57187653]
[108.01448059 77.89612579]
[111.56594849 63.32262039]
[115.11741638 48.74911499]
[118.66888428 34.17560577]
[122.22035217 19.60210037]
[125.77181244 5.02859497]
[129.32328796 -9.54491138]
[115.29685974 -4.22894669]
[102.30680847 -11.72952080]
[99.89866638 -26.53495407]
[109.84202576 -37.76570511]
[124.83014679 -37.16902924]
[133.84928894 -25.18328285]
[138.63043213 -39.40089798]
[143.41159058 -53.61851501]
[148.19273376 -67.83612823]
[152.97389221 -82.05374146]
[143.87284851 -94.62158203]
[143.93081665 -110.13854980]
[153.12548828 -122.63805389]
[167.92134094 -127.31377411]
[182.62905884 -122.36780548]
[191.59323120 -109.70197296]
[191.36694336 -94.18655396]
[182.03721619 -81.78752899]
[167.19151306 -77.27259064]
[162.41035461 -63.05497360]
[157.62919617 -48.83736038]
[152.84805298 -34.61974335]
[148.06689453 -20.40213013]
[143.89678955 -5.99344540]
[140.34532166 8.58006096]
[136.79385376 23.15356827]
[133.24238586 37.72707367]
[129.69091797 52.30057907]
[126.13945770 66.87408447]
[122.58798981 81.44759369]
[129.93963623 94.52249908]
[144.23681641 99.06021881]
[158.53398132 103.59793854]
[172.83116150 108.13565826]
[186.73840332 101.11949921]
[201.17312622 105.92506409]
[207.77624512 119.22673035]
[222.07342529 123.76444244]
[236.37059021 128.30216980]
[250.66775513 132.83988953]
[259.81851196 132.45465088]
[265.16909790 137.57904053]
[277.79962158 128.75996399]
[293.02328491 129.06561279]
[305.00613403 138.16920471]
[309.27954102 152.41265869]
[323.49716187 157.19381714]
[337.71475220 161.97497559]
[351.93237305 166.75611877]
[366.14999390 171.53727722]
[380.36761475 176.31843567]
[395.91418457 173.38340759]
[405.51141357 184.77388000]
[415.47512817 173.29376221]
[429.07586670 166.50494385]
[444.23962402 165.44267273]
[458.65405273 170.26890564]
[470.12106323 180.24771118]
[476.89199829 193.85737610]
[477.93432617 209.02253723]
[473.08911133 223.43060303]
[463.09524536 234.88446045]
[449.47668457 241.63748169]
[434.31015015 242.65986633]
[419.90847778 237.79571533]
[408.46777344 227.78677368]
[401.73269653 214.15934753]
[400.73025513 198.99150085]
[386.20062256 202.26849365]
[375.58645630 190.53604126]
[361.36883545 185.75489807]
[347.15121460 180.97373962]
[332.93362427 176.19258118]
[318.71600342 171.41143799]
[304.49838257 166.63027954]
[292.48690796 175.39739990]
[277.43820190 175.41072083]
[265.12322998 166.45556641]
[260.38796997 151.79666138]
[246.13005066 147.13705444]
[231.83287048 142.59933472]
[217.53570557 138.06161499]
[203.23852539 133.52389526]
[190.17317200 140.58306885]
[175.60916138 136.18484497]
[168.29344177 122.43282318]
[153.99626160 117.89511108]
[139.69909668 113.35739136]
[125.40192413 108.81967163]
[137.19778442 118.08562469]
[143.25201416 131.80955505]
[142.14282227 146.76849365]
[134.13069153 159.44941711]
[121.09722137 166.87428284]
[106.10324860 167.29943848]
[92.67000580 160.62500000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 60]
[3 59]
[4 58]
[5 57]
[6 56]
[7 55]
[8 54]
[9 53]
[10 52]
[11 50]
[12 49]
[13 47]
[14 46]
[15 45]
[16 44]
[17 43]
[18 42]
[21 41]
[22 40]
[23 39]
[24 38]
[61 80]
[62 79]
[63 78]
[64 77]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[118 176]
[119 175]
[120 174]
[121 173]
[124 170]
[125 169]
[126 168]
[127 167]
[129 166]
[133 162]
[134 161]
[135 160]
[136 159]
[137 158]
[138 157]
[140 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
