%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:16:58 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAUGAACCGCCCCCUCUAUGGUACUAGUGCUUCCACCAAAAGAGUCCCGCUCCGAAUAGGCAAUACAAGGCCCACAUGACUGGGGACGGUAAAAGGGGGUUACACUCCUUGAGCUGACGUAUUGAACACUAUCAUCCCCUGACGCAAGCGCGAAAGGGGACCACGAAGACACCACGCUUAUCAUCCACUCGGCAUUCACAAAAACA\
) } def
/len { sequence length } bind def

/coor [
[113.73506927 225.72955322]
[126.20766449 216.76686096]
[124.63973999 201.84902954]
[123.07180786 186.93119812]
[121.50388336 172.01336670]
[119.93595886 157.09553528]
[118.36802673 142.17771912]
[83.91832733 134.73583984]
[70.74909210 108.82122040]
[55.76419449 109.49419403]
[40.77930069 110.16716766]
[25.79440308 110.84013367]
[10.81495953 111.62517548]
[-4.15819216 112.52223969]
[-19.13134384 113.41930389]
[-34.10449600 114.31636047]
[-49.23242569 124.81465149]
[-64.60978699 116.35933685]
[-79.56784058 117.48029327]
[-90.73344421 130.94638062]
[-107.84659576 132.14753723]
[-120.28395844 120.82768250]
[-135.22357178 122.17227173]
[-150.16319275 123.51686096]
[-160.27491760 135.36552429]
[-175.44496155 136.51631165]
[-186.67852783 126.80329895]
[-201.61814880 128.14788818]
[-214.66920471 137.09107971]
[-228.03880310 130.52578735]
[-242.97840881 131.87037659]
[-257.91802979 133.21496582]
[-265.93167114 146.37124634]
[-279.99121094 152.21781921]
[-294.62445068 148.70608521]
[-304.26846313 137.38658142]
[-319.20806885 138.73117065]
[-323.05801392 152.44396973]
[-331.34011841 163.99467468]
[-343.04296875 172.00764465]
[-356.74920654 175.53712463]
[-370.80725098 174.17886353]
[-383.53030396 168.11633301]
[-393.39877319 158.09622192]
[-399.24172974 145.33648682]
[-414.19979858 146.45744324]
[-429.15783691 147.57839966]
[-444.11590576 148.69935608]
[-459.45889282 155.91244507]
[-470.63745117 143.16583252]
[-461.48355103 128.89552307]
[-445.23684692 133.74128723]
[-430.27877808 132.62034607]
[-415.32073975 131.49938965]
[-400.36267090 130.37843323]
[-395.64157104 115.25144196]
[-385.45236206 103.06465912]
[-371.33251953 95.70306396]
[-355.43029785 94.32007599]
[-340.17813110 99.15691376]
[-327.92025757 109.50116730]
[-320.55267334 123.79156494]
[-305.61306763 122.44697571]
[-298.14520264 109.58737183]
[-284.37417603 103.51921082]
[-269.49661255 106.76139832]
[-259.26260376 118.27536011]
[-244.32299805 116.93077087]
[-229.38339233 115.58618164]
[-217.40092468 106.73915863]
[-202.96273804 113.20827484]
[-188.02311707 111.86368561]
[-178.70440674 100.30094147]
[-163.57266235 98.72451782]
[-151.50778198 108.57724762]
[-136.56816101 107.23265839]
[-121.62854767 105.88806915]
[-114.83552551 94.93836212]
[-102.79637909 89.82437134]
[-89.81909180 92.61946869]
[-80.68878937 102.52223206]
[-65.73073578 101.40128326]
[-57.60485840 92.43978882]
[-45.15169525 91.38390350]
[-35.00155640 99.34320831]
[-20.02840614 98.44615173]
[-5.05525446 97.54908752]
[9.91789722 96.65202332]
[16.40724564 93.11383820]
[25.12143135 95.85523987]
[40.10632706 95.18226624]
[55.09122086 94.50929260]
[70.07611847 93.83632660]
[80.90029144 69.83580017]
[109.66021729 60.30537796]
[139.71830750 76.78793335]
[139.49391174 61.78961182]
[139.26953125 46.79129028]
[139.04513550 31.79296875]
[138.82073975 16.79464722]
[138.59635925 1.79632533]
[127.08197784 -9.02932835]
[126.67849731 -24.82846642]
[137.62528992 -36.22773743]
[153.42779541 -36.46416092]
[164.71070862 -25.39746857]
[164.78004456 -9.59333134]
[153.59468079 1.57193422]
[153.81906128 16.57025528]
[154.04345703 31.56857681]
[154.26785278 46.56689835]
[154.49223328 61.56521988]
[154.71662903 76.56354523]
[166.78559875 85.47084808]
[181.18373108 81.26443481]
[195.58184814 77.05802155]
[209.97998047 72.85161591]
[224.34625244 68.53762054]
[238.67984009 64.11629486]
[246.10711670 50.42420959]
[260.70642090 46.14454269]
[273.71395874 53.30970383]
[288.04754639 48.88837433]
[292.94522095 25.43694115]
[313.06845093 10.09756756]
[339.66635132 11.74566174]
[350.35198975 1.21869338]
[361.03762817 -9.30827522]
[360.90521240 -25.11200905]
[372.04589844 -36.32183838]
[387.85015869 -36.28717041]
[398.94155884 -25.02857399]
[398.73980713 -9.22557259]
[387.36459351 1.74619198]
[371.56460571 1.37736619]
[360.87896729 11.90433502]
[350.19329834 22.43130302]
[357.30133057 35.64023590]
[371.97357178 32.52156067]
[386.64578247 29.40288544]
[401.31799316 26.28421021]
[415.99020386 23.16553497]
[430.66241455 20.04685974]
[439.28713989 7.07567167]
[454.21127319 4.12190247]
[466.52416992 12.42420578]
[481.19638062 9.30553055]
[495.86862183 6.18685484]
[507.68685913 -5.18244648]
[523.36486816 -0.37285724]
[526.77441406 15.66792965]
[514.40808105 26.43852806]
[498.98727417 20.85906982]
[484.31506348 23.97774506]
[469.64285278 27.09642029]
[461.77133179 39.68905640]
[446.93603516 43.06084824]
[433.78109741 34.71907425]
[419.10888672 37.83774948]
[404.43667603 40.95642471]
[389.76443481 44.07509995]
[375.09222412 47.19377518]
[360.42001343 50.31245041]
[357.23632812 60.70499039]
[351.39636230 69.65772247]
[343.44076538 76.52399445]
[334.05761719 80.84134674]
[324.02355957 82.36192322]
[314.13980103 81.06491089]
[305.16818237 77.15061188]
[297.77230835 71.01708221]
[292.46887207 63.22196960]
[278.13528442 67.64329529]
[271.42422485 80.89083862]
[256.95089722 85.57888031]
[243.10116577 78.44989014]
[228.76757812 82.87121582]
[223.30206299 87.84702301]
[214.18638611 87.24974060]
[199.78826904 91.45615387]
[185.39013672 95.66255951]
[170.99200439 99.86897278]
[168.30424500 106.87082672]
[183.28369141 107.65589142]
[187.16592407 122.14479065]
[174.58583069 130.31431580]
[162.92872620 120.87453461]
[160.24096680 127.87638855]
[168.12622070 140.63658142]
[182.81578064 147.92692566]
[183.57676697 164.30839539]
[169.62632751 172.92916870]
[155.31550598 164.92091370]
[155.36602783 148.52185059]
[147.48077393 135.76164246]
[133.28585815 140.60978699]
[134.85379028 155.52761841]
[136.42170715 170.44544983]
[137.98963928 185.36326599]
[139.55757141 200.28109741]
[141.12548828 215.19892883]
[155.18898010 221.37257385]
[164.26856995 233.76033020]
[165.92187500 249.02998352]
[159.70419312 263.07406616]
[147.28802490 272.11474609]
[132.01325989 273.72021484]
[117.98875427 267.45852661]
[108.98700714 255.01408386]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 201]
[3 200]
[4 199]
[5 198]
[6 197]
[7 196]
[9 93]
[10 92]
[11 91]
[12 90]
[13 88]
[14 87]
[15 86]
[16 85]
[18 82]
[19 81]
[22 77]
[23 76]
[24 75]
[27 72]
[28 71]
[30 69]
[31 68]
[32 67]
[36 63]
[37 62]
[45 55]
[46 54]
[47 53]
[48 52]
[96 113]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[114 182]
[115 181]
[116 180]
[117 179]
[118 177]
[119 176]
[122 173]
[123 172]
[126 137]
[127 136]
[128 135]
[138 163]
[139 162]
[140 161]
[141 160]
[142 159]
[143 158]
[146 155]
[147 154]
[148 153]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
