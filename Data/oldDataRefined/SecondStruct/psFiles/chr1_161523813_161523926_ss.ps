%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:17:04 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCUUAACUUUACCUAGCCUUUUUUUACUUUCACGUAACCGGCCCUUAGCUUGGGCCCGGAGGGCGCACCGUCCGCUCUUAAGAUGGUGACUUGGUGGUUACGAUGACAGUC\
) } def
/len { sequence length } bind def

/coor [
[-12.89727688 293.69076538]
[-12.17443466 308.72283936]
[-14.39839745 323.60708618]
[-19.48368263 337.77133179]
[-27.23482513 350.67117310]
[-37.35389328 361.81076050]
[-49.45193481 370.76196289]
[-63.06393433 377.18066406]
[-77.66667938 380.82015991]
[-92.69889069 381.54055786]
[-107.58275604 379.31417847]
[-121.74618530 374.22662354]
[-134.64477539 366.47338867]
[-145.78274536 356.35250854]
[-154.73196411 344.25302124]
[-161.14845276 330.63998413]
[-164.78559875 316.03665161]
[-165.50357056 301.00433350]
[-163.27479553 286.12081909]
[-158.18492126 271.95822144]
[-150.42959595 259.06088257]
[-140.30693054 247.92454529]
[-128.20599365 238.97727966]
[-114.59191132 232.56298828]
[-99.98799133 228.92822266]
[-84.95555115 228.21267700]
[-70.07240295 230.44386292]
[-55.91062164 235.53602600]
[-43.01454163 243.29344177]
[-32.92693329 232.19207764]
[-22.83932304 221.09071350]
[-20.00644302 206.46798706]
[-4.99942541 201.45800781]
[5.08818293 190.35664368]
[15.17579079 179.25529480]
[25.11082840 168.01718140]
[34.89144135 156.64442444]
[44.67205429 145.27166748]
[54.45266724 133.89891052]
[64.23328400 122.52615356]
[74.01389313 111.15339661]
[83.79450989 99.78063965]
[86.44405365 85.01649475]
[81.22827911 70.95251465]
[76.01250458 56.88852692]
[70.79673004 42.82454300]
[65.58095551 28.76055717]
[50.79436874 23.67223740]
[42.78224945 10.24316597]
[45.32767105 -5.18585968]
[57.22876358 -15.32972622]
[72.86619568 -15.39880943]
[84.85644531 -5.36049032]
[87.53809357 10.04544353]
[79.64493561 23.54478073]
[84.86071014 37.60876846]
[90.07649231 51.67275238]
[95.29226685 65.73674011]
[100.50804138 79.80072021]
[115.39484406 81.64006042]
[123.87686157 69.26850128]
[132.35887146 56.89694977]
[140.84089661 44.52539444]
[142.26295471 28.76822472]
[155.84130859 22.64634323]
[164.32331848 10.27478695]
[165.05122375 -6.10819769]
[179.72602844 -13.42818165]
[193.25155640 -4.15499115]
[191.71391296 12.17190933]
[176.69488525 18.75680351]
[168.21286011 31.12836075]
[167.39749146 46.00062943]
[153.21244812 53.00740814]
[144.73043823 65.37896729]
[136.24841309 77.75051880]
[127.76639557 90.12207794]
[130.75440979 97.00115967]
[145.65737915 98.70455170]
[136.73042297 110.75933075]
[139.71842957 117.63841248]
[154.54943848 119.88369751]
[169.38044739 122.12897491]
[184.21144104 124.37425995]
[199.04244995 126.61953735]
[210.65353394 116.14495850]
[226.28283691 115.63607788]
[238.55067444 125.33319092]
[241.66456604 140.65760803]
[234.15422058 154.37361145]
[219.56578064 160.00491333]
[204.78747559 154.89260864]
[196.79716492 141.45054626]
[181.96617126 139.20526123]
[167.13516235 136.95997620]
[152.30415344 134.71470642]
[137.47314453 132.46942139]
[105.82424927 129.58030701]
[95.16726685 109.56125641]
[85.38665009 120.93401337]
[75.60604095 132.30676270]
[65.82542419 143.67951965]
[56.04481125 155.05227661]
[46.26419830 166.42503357]
[36.48358536 177.79779053]
[33.19800949 186.46997070]
[26.27714920 189.34289551]
[16.18954086 200.44425964]
[6.10193300 211.54560852]
[2.54752040 226.96238708]
[-11.73796463 231.17832947]
[-21.82557297 242.27967834]
[-31.91318130 253.38104248]
[-22.96004295 265.47763062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 113]
[30 112]
[31 111]
[33 109]
[34 108]
[35 107]
[36 105]
[37 104]
[38 103]
[39 102]
[40 101]
[41 100]
[42 99]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[60 77]
[61 76]
[62 75]
[63 74]
[65 72]
[66 71]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
