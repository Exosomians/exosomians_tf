%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:49 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUUGAUUAGAGUGCGCUGGGUCUACCCUGAGCUUGGGUGUUAGGGGUCGAGGCCUCCGACUACGGAAUAGGUAAUCCGGUGACCCAGUGGUGUCCUAGGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[111.42052460 419.97836304]
[109.69503784 405.07794189]
[107.96954346 390.17752075]
[106.24405670 375.27709961]
[104.51856995 360.37667847]
[93.29698181 346.96936035]
[100.54543304 330.11892700]
[98.39125824 315.27441406]
[96.23708344 300.42993164]
[87.61109161 297.77828979]
[80.33110046 292.37118530]
[75.25103760 284.80630493]
[72.97893524 275.93637085]
[73.80431366 266.77316284]
[77.66161346 258.37207031]
[84.13436127 251.71055603]
[92.50000000 247.57443237]
[92.50000000 232.57443237]
[92.50000000 217.57443237]
[92.50000000 202.57443237]
[92.50000000 187.57443237]
[92.50000000 172.57443237]
[92.50000000 157.57443237]
[92.50000000 142.57443237]
[92.50000000 127.57442474]
[72.07562256 115.31539154]
[66.46754456 89.55696869]
[52.58876038 83.86668396]
[38.70997620 78.17639923]
[24.83119202 72.48610687]
[11.07163906 79.91636658]
[-4.23436117 76.71318817]
[-13.85978413 64.38901520]
[-13.25979900 48.76294708]
[-2.71770096 37.21313095]
[12.78885460 35.19304276]
[25.93814468 43.65650558]
[30.52147865 58.60732651]
[44.40026093 64.29761505]
[58.27904510 69.98789978]
[72.15782928 75.67818451]
[84.11274719 66.61838531]
[82.38726044 51.71796036]
[80.66176605 36.81753540]
[71.38835907 23.99901199]
[77.61024475 10.46618652]
[75.88475800 -4.43423939]
[74.15927124 -19.33466530]
[72.43378448 -34.23509216]
[70.70829010 -49.13551712]
[60.50041199 -61.97028351]
[66.76262665 -77.12668610]
[83.05291748 -79.01312256]
[92.61322021 -65.68898773]
[85.60871887 -50.86100388]
[87.33420563 -35.96057892]
[89.05969238 -21.06015396]
[90.78518677 -6.15972805]
[92.51067352 8.74069786]
[101.66065979 20.49344063]
[95.56219482 35.09204483]
[97.28768158 49.99246979]
[99.01316833 64.89289856]
[108.39870453 68.14933777]
[115.91235352 73.67817688]
[121.08085632 80.70760345]
[134.41638184 73.84002686]
[147.75192261 66.97245789]
[161.08744812 60.10488129]
[163.31538391 44.74858093]
[174.16812134 33.65814590]
[189.47254944 31.09806824]
[203.34381104 38.05275345]
[210.44813538 51.84798431]
[208.05374146 67.17921448]
[197.08132935 78.15126801]
[181.75003052 80.54516602]
[167.95503235 73.44041443]
[154.61949158 80.30799103]
[141.28396606 87.17556000]
[127.94843292 94.04313660]
[127.34110260 108.31041718]
[119.90605927 120.50238800]
[107.50000000 127.57442474]
[107.50000000 142.57443237]
[107.50000000 157.57443237]
[107.50000000 172.57443237]
[107.50000000 187.57443237]
[107.50000000 202.57443237]
[107.50000000 217.57443237]
[107.50000000 232.57443237]
[107.50000000 247.57443237]
[124.12889099 261.46408081]
[125.46971893 282.81521606]
[111.08159637 298.27575684]
[113.23577118 313.12026978]
[115.38993835 327.96478271]
[125.30223083 336.37197876]
[126.71913910 348.88662720]
[119.41899109 358.65118408]
[121.14448547 373.55160522]
[122.86997223 388.45202637]
[124.59545898 403.35244751]
[126.32095337 418.25286865]
[137.95111084 429.30361938]
[136.41911316 445.27334595]
[122.90013885 453.91146851]
[107.76481628 448.59155273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 104]
[2 103]
[3 102]
[4 101]
[5 100]
[7 97]
[8 96]
[9 95]
[17 92]
[18 91]
[19 90]
[20 89]
[21 88]
[22 87]
[23 86]
[24 85]
[25 84]
[27 41]
[28 40]
[29 39]
[30 38]
[42 63]
[43 62]
[44 61]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[66 81]
[67 80]
[68 79]
[69 78]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
