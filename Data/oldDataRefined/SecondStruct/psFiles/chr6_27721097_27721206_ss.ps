%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:06 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCCUCAGCUUUUGAAUUGGAUGGCUCUCACCCCAAGCUUGGGUGCGCCCGUGGUCGGGUAACCUAGAAUUCAGGUUGCGGAAUUGGUGAGCCGGUAGGGCCACUGAC\
) } def
/len { sequence length } bind def

/coor [
[278.03128052 371.52236938]
[276.26486206 367.67410278]
[275.86505127 363.00787354]
[266.77578735 351.07534790]
[257.68652344 339.14282227]
[248.59727478 327.21029663]
[234.73013306 321.77413940]
[232.52294922 306.10763550]
[223.43368530 294.17510986]
[214.34442139 282.24258423]
[205.25515747 270.31005859]
[196.16589355 258.37753296]
[191.49780273 256.85446167]
[187.80003357 252.29673767]
[186.92283630 245.50291443]
[178.52320862 233.07527161]
[170.12358093 220.64762878]
[161.72396851 208.21998596]
[153.32434082 195.79232788]
[144.92472839 183.36468506]
[131.51559448 184.13934326]
[119.39417267 178.10539246]
[111.80802155 166.75885010]
[110.84922028 153.03462219]
[116.87853241 140.54765320]
[108.83396149 127.88729095]
[95.79497528 128.94921875]
[83.59696960 124.22148132]
[74.67946625 114.64958954]
[70.82592773 102.14786530]
[72.80702972 89.21657562]
[60.74707413 80.29708099]
[48.68711472 71.37757874]
[36.62715912 62.45808411]
[24.56720161 53.53858566]
[9.40584469 57.36837006]
[-4.64757156 50.51012802]
[-10.95745373 36.20210648]
[-6.54446793 21.20012283]
[6.50770903 12.58764935]
[22.03623772 14.43123436]
[32.70902252 25.86039352]
[33.48669815 41.47863007]
[45.54665756 50.39812469]
[57.60661316 59.31762314]
[69.66657257 68.23712158]
[81.72652435 77.15661621]
[86.83017731 73.87921143]
[92.50000000 71.72474670]
[92.50000000 56.72474670]
[92.50000000 41.72474670]
[92.50000000 26.72474861]
[92.50000000 11.72474861]
[83.83629608 -2.19905472]
[91.80042267 -16.53448868]
[108.19957733 -16.53448868]
[116.16370392 -2.19905472]
[107.50000000 11.72474861]
[107.50000000 26.72474861]
[107.50000000 41.72474670]
[107.50000000 56.72474670]
[107.50000000 71.72474670]
[123.70845795 82.86381531]
[129.20072937 101.74840546]
[121.49433136 119.84272003]
[129.53889465 132.50308228]
[146.36450195 133.29254150]
[159.31028748 143.80874634]
[163.44784546 159.79559326]
[157.35237122 174.96507263]
[165.75198364 187.39271545]
[174.15161133 199.82035828]
[182.55123901 212.24800110]
[190.95085144 224.67564392]
[199.35047913 237.10328674]
[208.09841919 249.28825378]
[217.18768311 261.22079468]
[226.27694702 273.15332031]
[235.36621094 285.08584595]
[244.45547485 297.01837158]
[258.97274780 303.30801392]
[260.52981567 318.12103271]
[269.61907959 330.05355835]
[278.70834351 341.98608398]
[287.79760742 353.91860962]
[297.54739380 365.31781006]
[307.92645264 376.14715576]
[318.30554199 386.97650146]
[328.68463135 397.80581665]
[339.06372070 408.63516235]
[349.44281006 419.46450806]
[357.76806641 423.57507324]
[359.95697021 430.75024414]
[370.02545166 441.86898804]
[380.09390259 452.98770142]
[395.98162842 455.21490479]
[404.02178955 469.09780884]
[398.04669189 483.98666382]
[382.63992310 488.45999146]
[369.62020874 479.08624268]
[368.97518921 463.05618286]
[358.90673828 451.93743896]
[348.83825684 440.81872559]
[338.61346436 429.84359741]
[328.23437500 419.01425171]
[317.85528564 408.18490601]
[307.47619629 397.35556030]
[297.09713745 386.52624512]
[286.71804810 375.69689941]
[283.77627563 375.58236694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 85]
[4 84]
[5 83]
[6 82]
[8 80]
[9 79]
[10 78]
[11 77]
[12 76]
[15 75]
[16 74]
[17 73]
[18 72]
[19 71]
[20 70]
[25 66]
[26 65]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[93 103]
[94 102]
[95 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
