%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:03 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUCGGACACCGGGCACUUUAUUUGUAAUCUUUUCGGACACCGGGCAUGCCCCUAGCUUGGGCGCUGGAACCGCAAUAAUCGUGGUGCGAGACUGGUUGACUCGAUUGGCCGG\
) } def
/len { sequence length } bind def

/coor [
[72.12046814 194.23114014]
[71.03373718 209.45552063]
[63.44156647 222.69644165]
[50.85138702 231.32489014]
[35.76298523 233.62768555]
[21.17217445 229.14761353]
[9.97597313 218.77420044]
[4.39739275 204.56707764]
[5.54406500 189.34709167]
[13.18831825 176.13618469]
[25.81237984 167.55738831]
[40.90973282 165.31402588]
[45.31257248 150.97473145]
[49.71540833 136.63545227]
[54.11824799 122.29617310]
[50.45750046 107.85843658]
[61.90465164 96.93721008]
[66.30748749 82.59792328]
[59.92604828 96.17279816]
[49.38864517 106.84815216]
[35.89791489 113.40560150]
[20.99355316 115.09676361]
[6.37659311 111.72860718]
[-6.28473473 103.68554688]
[-15.54539394 91.88554382]
[-20.34846687 77.67531586]
[-20.14578056 62.67668533]
[-14.96046543 48.60144043]
[-5.38432169 37.05598831]
[7.48972607 29.35800743]
[22.19236565 26.38607025]
[37.04558563 28.47936058]
[50.35418701 35.39897537]
[60.59926987 46.35517502]
[66.61215973 60.09998703]
[62.59923553 45.64673615]
[58.58631134 31.19348717]
[54.57338715 16.74023819]
[50.56046295 2.28698754]
[36.17616653 -3.22647810]
[27.89333725 -16.00333595]
[28.71251678 -31.02974319]
[38.11028290 -42.55449677]
[34.09735870 -57.00774765]
[30.08443451 -71.46099854]
[26.07150841 -85.91424561]
[22.05858421 -100.36750031]
[18.04565811 -114.82074738]
[3.27893424 -119.28699493]
[-6.71158648 -131.04255676]
[-8.73796463 -146.33625793]
[-2.15359044 -160.28793335]
[10.94048691 -168.44567871]
[26.36599350 -168.20635986]
[39.20070648 -159.64636230]
[45.34911728 -145.49713135]
[42.84928894 -130.27365112]
[32.49890900 -118.83367157]
[36.51183319 -104.38042450]
[40.52475739 -89.92716980]
[44.53768539 -75.47392273]
[48.55060959 -61.02067184]
[52.56353378 -46.56742096]
[66.55770874 -41.53741074]
[75.00655365 -29.08425522]
[74.49650574 -13.86606789]
[65.01371002 -1.72593760]
[69.02663422 12.72731209]
[73.03955841 27.18056297]
[77.05248260 41.63381195]
[81.06541443 56.08706284]
[94.50349426 62.75173569]
[108.43814850 57.19966507]
[122.37279510 51.64759445]
[136.30744934 46.09552002]
[150.24209595 40.54344940]
[154.97380066 25.63891602]
[168.20654297 17.30655670]
[183.69226074 19.48065758]
[194.11904907 31.13467216]
[194.56370544 46.76593018]
[184.81628418 58.99383545]
[169.47920227 62.04473877]
[155.79417419 54.47809982]
[141.85952759 60.03017044]
[127.92486572 65.58224487]
[113.99021912 71.13431549]
[100.05556488 76.68638611]
[117.15418243 86.32588959]
[120.05445862 104.53588867]
[132.46980286 112.95368958]
[144.88513184 121.37149811]
[157.30046082 129.78930664]
[173.06478882 131.12969971]
[179.25694275 144.67616272]
[195.22010803 143.07719421]
[206.31951904 154.66093445]
[204.04063416 170.54130554]
[190.13163757 178.53625488]
[175.26231384 172.51275635]
[170.83912659 157.09149170]
[155.96284485 156.35319519]
[148.88265991 142.20463562]
[136.46733093 133.78683472]
[124.05198669 125.36902618]
[111.63665771 116.95122528]
[93.24983215 120.39030457]
[78.81099701 107.25345612]
[80.64677429 87.00076294]
[76.24393463 101.34004211]
[79.58975983 116.80342102]
[68.45752716 126.69901276]
[64.05469513 141.03829956]
[59.65185165 155.37757874]
[55.24901581 169.71685791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 115]
[13 114]
[14 113]
[15 112]
[17 110]
[18 109]
[35 71]
[36 70]
[37 69]
[38 68]
[39 67]
[43 63]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[90 106]
[91 105]
[92 104]
[93 103]
[95 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
