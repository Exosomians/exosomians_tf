%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:20:10 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGCAGAGCAGCGCGCGCGCAGGCGACCCCCGCCCCUCGCCAGCCCGCCGCCGCCAGCCGCCCGCCGCCCCGCCCCGCCAAGCAGGGGGGCGGGAUGGGGGGGCCGGGGCAGGCGGGGGGCAAGGGGGGAGGAGGAGCCGCGCGCCGCCGCCGCCGCCCGCCGCCUCCCCGG\
) } def
/len { sequence length } bind def

/coor [
[179.83605957 514.95312500]
[176.36712646 500.35974121]
[172.89817810 485.76635742]
[169.42924500 471.17300415]
[165.96029663 456.57962036]
[153.18287659 449.01174927]
[149.45698547 434.26141357]
[157.48152161 420.91058350]
[152.86004639 415.11077881]
[154.08378601 406.02413940]
[150.87736511 391.37084961]
[140.59831238 380.59167480]
[145.20683289 365.45654297]
[142.00041199 350.80325317]
[138.79400635 336.14996338]
[134.27737427 330.26815796]
[135.66404724 321.20495605]
[132.72117615 306.49645996]
[129.77832031 291.78796387]
[126.83546448 277.07946777]
[123.89260101 262.37100220]
[120.94974518 247.66250610]
[116.53943634 241.70056152]
[118.08856201 232.66369629]
[115.41020966 217.90475464]
[112.73185730 203.14581299]
[100.38034058 194.90107727]
[97.45385742 179.97155762]
[106.18544006 167.07205200]
[103.37471771 152.33773804]
[100.43186188 137.62925720]
[97.35709381 122.94777679]
[94.15068054 108.29448700]
[89.47366333 101.69383240]
[91.02072144 93.34945679]
[88.07785797 78.64096832]
[85.13500214 63.93247986]
[82.19213867 49.22399521]
[79.24928284 34.51550674]
[68.95488739 22.50151634]
[74.04484558 8.50360298]
[71.10198212 -6.20488358]
[68.15912628 -20.91337013]
[57.86446762 -28.72025681]
[55.73052216 -41.05580521]
[62.36581802 -51.19518280]
[59.68746567 -65.95412445]
[57.00910950 -80.71307373]
[54.33075714 -95.47201538]
[51.65240479 -110.23095703]
[48.97404861 -124.98990631]
[46.16333008 -139.72421265]
[43.22047043 -154.43269348]
[40.27761078 -169.14118958]
[35.51057053 -176.97319031]
[37.41643524 -184.13999939]
[34.73807907 -198.89894104]
[24.66100693 -211.09579468]
[30.00142288 -225.00007629]
[27.32306862 -239.75901794]
[24.64471626 -254.51797485]
[20.01903725 -262.43429565]
[22.05324364 -269.56573486]
[19.64025879 -284.37036133]
[17.22727585 -299.17501831]
[12.74444771 -307.17309570]
[14.90634251 -314.26687622]
[12.75950527 -329.11245728]
[10.61266804 -343.95800781]
[0.97990882 -356.50872803]
[6.81599474 -370.21237183]
[4.66915751 -385.05795288]
[2.52232027 -399.90350342]
[0.37548301 -414.74908447]
[-1.77135420 -429.59466553]
[-3.91819143 -444.44024658]
[-6.06502867 -459.28582764]
[-8.21186638 -474.13137817]
[-12.55039883 -482.20864868]
[-10.26151085 -489.26248169]
[-12.14150906 -504.14419556]
[-23.88570976 -515.07366943]
[-22.51947784 -531.05841064]
[-9.09086895 -539.83636475]
[6.09883785 -534.67376709]
[11.39739895 -519.53094482]
[2.74021125 -506.02420044]
[4.62020969 -491.14245605]
[6.63370895 -476.27822876]
[8.78054619 -461.43264771]
[10.92738342 -446.58706665]
[13.07422066 -431.74148560]
[15.22105789 -416.89593506]
[17.36789513 -402.05035400]
[19.51473236 -387.20477295]
[21.66156960 -372.35919189]
[31.14077377 -360.87033081]
[25.45824242 -346.10485840]
[27.60507965 -331.25927734]
[29.75191689 -316.41369629]
[32.03192139 -301.58801270]
[34.44490433 -286.78335571]
[36.85788727 -271.97869873]
[39.40365982 -257.19631958]
[42.08201218 -242.43737793]
[44.76036835 -227.67843628]
[54.64586639 -216.53724670]
[49.49702454 -201.57730103]
[52.17537689 -186.81835938]
[54.98609924 -172.08404541]
[57.92895889 -157.37556458]
[60.87181854 -142.66706848]
[65.28211975 -136.70512390]
[63.73299408 -127.66825867]
[66.41134644 -112.90930939]
[69.08969879 -98.15036774]
[71.76805115 -83.39142609]
[74.44641113 -68.63248444]
[77.12476349 -53.87353897]
[89.17847443 -41.13873672]
[82.86761475 -23.85622978]
[85.81047058 -9.14774323]
[88.75333405 5.56074333]
[98.83723450 16.52268410]
[93.95777130 31.57264709]
[96.90062714 46.28113556]
[99.84349060 60.98962021]
[102.78634644 75.69810486]
[105.72920990 90.40659332]
[108.80397034 105.08807373]
[112.01038361 119.74136353]
[116.91725159 127.48652649]
[115.14034271 134.68640137]
[118.08320618 149.39488220]
[122.85024261 157.22688293]
[120.94438171 164.39370728]
[133.65174866 173.40261841]
[136.15773010 188.40843201]
[127.49079895 200.46745300]
[130.16915894 215.22639465]
[132.84750366 229.98533630]
[135.65823364 244.71965027]
[138.60108948 259.42813110]
[141.54394531 274.13662720]
[144.48680115 288.84512329]
[147.42967224 303.55358887]
[150.37252808 318.26208496]
[153.44729614 332.94357300]
[156.65370178 347.59686279]
[159.86012268 362.25015259]
[170.36853027 374.07739258]
[165.53065491 388.16442871]
[168.73707581 402.81771851]
[172.07489014 417.44161987]
[185.24877930 425.75344849]
[188.55889893 440.60263062]
[180.55366516 453.11068726]
[184.02261353 467.70407104]
[187.49154663 482.29742432]
[190.96049500 496.89080811]
[194.42942810 511.48416138]
[205.14845276 523.12091064]
[200.56423950 537.29248047]
[204.03318787 551.88586426]
[207.50212097 566.47924805]
[221.08868408 574.55273438]
[224.90597534 589.88909912]
[216.68930054 603.38952637]
[201.31344604 607.04443359]
[187.90063477 598.68548584]
[184.40846252 583.27185059]
[192.90875244 569.94818115]
[189.43981934 555.35479736]
[185.97087097 540.76141357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 161]
[2 160]
[3 159]
[4 158]
[5 157]
[8 154]
[10 153]
[11 152]
[13 150]
[14 149]
[15 148]
[17 147]
[18 146]
[19 145]
[20 144]
[21 143]
[22 142]
[24 141]
[25 140]
[26 139]
[29 136]
[30 134]
[31 133]
[32 131]
[33 130]
[35 129]
[36 128]
[37 127]
[38 126]
[39 125]
[41 123]
[42 122]
[43 121]
[46 119]
[47 118]
[48 117]
[49 116]
[50 115]
[51 114]
[52 112]
[53 111]
[54 110]
[56 109]
[57 108]
[59 106]
[60 105]
[61 104]
[63 103]
[64 102]
[65 101]
[67 100]
[68 99]
[69 98]
[71 96]
[72 95]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[80 88]
[81 87]
[163 174]
[164 173]
[165 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
