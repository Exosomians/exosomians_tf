%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:24 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUGUAGAACGUUAUGUAACCUGUCAAGGAGUGUUAUUCUUUAAUGAGACGUGGGAUAUGCUUAAAACUUACAGAGUGAUCUGUAAGUACAUACUGGAUAUCGAGCAGACGUUC\
) } def
/len { sequence length } bind def

/coor [
[100.70363617 248.84542847]
[93.27254486 262.46740723]
[79.23946381 269.08950806]
[64.00039673 266.16537476]
[53.41507721 254.81942749]
[51.55377960 239.41439819]
[59.13220978 225.87382507]
[73.23630524 219.40435791]
[76.06298828 204.67309570]
[78.88966370 189.94183350]
[81.71634674 175.21058655]
[84.54302216 160.47932434]
[87.36970520 145.74807739]
[90.19638062 131.01681519]
[84.89308167 125.71351624]
[81.01088715 140.20242310]
[66.52204895 144.08489990]
[55.91524887 133.47848511]
[59.79718018 118.98950195]
[74.28648376 115.10691833]
[68.98317719 109.80361938]
[54.25192642 112.63029480]
[39.52067184 115.45697784]
[27.47896576 126.58933258]
[11.89956570 121.46933746]
[8.80922318 105.36399841]
[21.38701630 94.84111786]
[36.69398880 100.72572327]
[51.42524719 97.89904022]
[66.15650177 95.07235718]
[75.45333862 83.01716614]
[87.66643524 77.68408203]
[75.97523499 68.28643036]
[60.37170029 65.67103577]
[55.29938889 51.66672134]
[43.60818863 42.26906967]
[31.91698837 32.87142181]
[20.22578812 23.47377014]
[8.53458691 14.07612038]
[-7.74570799 12.10532379]
[-13.92933178 -3.08331752]
[-3.65510154 -15.86503220]
[12.50773430 -13.09108829]
[17.93223572 2.38491964]
[29.62343788 11.78256989]
[41.31463623 21.18021965]
[53.00584030 30.57786942]
[64.69703674 39.97552109]
[79.46434021 41.91872787]
[85.37288666 56.59523010]
[97.06408691 65.99288177]
[111.92676544 68.01787567]
[125.70596313 62.09049988]
[131.62791443 47.68327332]
[145.68641663 41.86835861]
[159.38500977 47.60282898]
[173.16421509 41.67544937]
[186.94340515 35.74806976]
[200.72259521 29.82069206]
[214.50178528 23.89331436]
[224.12135315 11.33247471]
[238.87023926 13.41076851]
[239.23696899 -3.64142537]
[246.93586731 -18.79968643]
[260.40209961 -29.08787346]
[276.94378662 -32.50917816]
[293.28005981 -28.43352699]
[306.19180298 -17.71300125]
[319.62988281 -24.37767792]
[333.06796265 -31.04235268]
[346.50604248 -37.70702744]
[359.94412231 -44.37170410]
[373.38223267 -51.03638077]
[386.82031250 -57.70105362]
[400.25839233 -64.36573029]
[413.69647217 -71.03040314]
[422.32104492 -84.97848511]
[438.70230103 -84.21304321]
[445.98864746 -69.52150726]
[436.68447876 -56.01726151]
[420.36114502 -57.59232330]
[406.92306519 -50.92764664]
[393.48498535 -44.26296997]
[380.04690552 -37.59829712]
[366.60879517 -30.93362045]
[353.17071533 -24.26894569]
[339.73263550 -17.60426903]
[326.29455566 -10.93959332]
[312.85647583 -4.27491808]
[314.06298828 8.80071640]
[310.70608521 21.52883148]
[303.17126465 32.36154175]
[292.35336304 39.97365952]
[279.55053711 43.42480087]
[266.30831909 42.27550125]
[254.23320007 36.64305496]
[244.79762268 27.18996239]
[236.16365051 39.32683563]
[220.42916870 37.67250824]
[206.64997864 43.59988785]
[192.87077332 49.52726364]
[179.09158325 55.45464325]
[165.31239319 61.38202286]
[160.05506897 75.27072906]
[146.16545105 81.47822571]
[131.63334656 75.86969757]
[117.85414886 81.79707336]
[128.37492371 109.26385498]
[104.92764282 133.84350586]
[102.10095978 148.57475281]
[99.27427673 163.30601501]
[96.44760132 178.03726196]
[93.62091827 192.76852417]
[90.79424286 207.49977112]
[87.96755981 222.23103333]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 115]
[9 114]
[10 113]
[11 112]
[12 111]
[13 110]
[14 109]
[21 30]
[22 29]
[23 28]
[32 51]
[33 50]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[52 107]
[53 106]
[56 103]
[57 102]
[58 101]
[59 100]
[60 99]
[62 97]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
