%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:08 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAACGCAGAUGGGUCCCGGACCUAUCGAGUCAACCAUCUUGUAGUCUGAAAAUUAGACUGCCACGUCCCAAGUUCAGGGACAAGUCCGCUUUAUAAACACACAAAAU\
) } def
/len { sequence length } bind def

/coor [
[77.11622620 228.63827515]
[74.59809875 213.78041077]
[75.57490540 198.74238586]
[79.99397278 184.33514404]
[87.61698914 171.33566284]
[98.03283691 160.44499207]
[110.67982483 152.25044250]
[105.63908386 138.12278748]
[74.63318634 135.28092957]
[52.38789368 108.52729034]
[39.12140274 115.52730560]
[25.85490799 122.52731323]
[12.58841324 129.52732849]
[-0.67808062 136.52732849]
[-13.94457436 143.52734375]
[-27.21106911 150.52735901]
[-40.47756195 157.52735901]
[-51.66458511 170.26655579]
[-67.00279236 163.04327393]
[-64.30785370 146.30488586]
[-47.47757339 144.26086426]
[-34.21107864 137.26086426]
[-20.94458389 130.26084900]
[-7.67809057 123.26084137]
[5.58840370 116.26082611]
[18.85489655 109.26081848]
[32.12139130 102.26081085]
[45.38788605 95.26079559]
[45.17369461 80.26232910]
[31.71271706 73.64401245]
[18.25173950 67.02569580]
[4.59128857 74.38583374]
[-10.78189373 72.27754211]
[-21.95650482 61.51150131]
[-24.63567734 46.22746658]
[-17.78921700 32.30247116]
[-4.04972506 25.09095001]
[11.29968166 27.36588860]
[22.35684395 38.25252151]
[24.87005615 53.56472015]
[38.33103180 60.18303680]
[51.79201126 66.80135345]
[64.05192566 58.15875626]
[62.34205627 43.25653076]
[60.63218307 28.35430527]
[58.92231369 13.45207882]
[57.21244049 -1.45014703]
[55.50257111 -16.35237312]
[53.79269791 -31.25459862]
[52.08282852 -46.15682602]
[50.37295532 -61.05905151]
[42.56050491 -76.10571289]
[54.85643005 -87.77817535]
[69.47658539 -79.19403839]
[65.27518463 -62.76892090]
[66.98505402 -47.86669540]
[68.69492340 -32.96446991]
[70.40480042 -18.06224442]
[72.11466980 -3.16001821]
[73.82453918 11.74220753]
[75.53440857 26.64443398]
[77.24427795 41.54666138]
[78.95415497 56.44888687]
[95.37161255 54.32222366]
[110.67434692 57.87783051]
[123.05848694 66.10388184]
[131.26914978 77.47476959]
[144.91362000 71.24353790]
[158.55810547 65.01231384]
[172.20259094 58.78108978]
[185.84706116 52.54986572]
[189.83940125 37.43050003]
[202.64599609 28.45690536]
[218.21994019 29.86614227]
[229.20771790 40.99280930]
[230.42123413 56.58323669]
[221.28749084 69.27610016]
[206.11917114 73.07821655]
[192.07829285 66.19434357]
[178.43380737 72.42556763]
[164.78933716 78.65679932]
[151.14485168 84.88802338]
[137.50036621 91.11924744]
[138.48577881 98.00249481]
[138.21826172 104.95077515]
[136.70651245 111.73787689]
[133.99975586 118.14283752]
[130.18609619 123.95715332]
[125.38971710 128.99151611]
[119.76674652 133.08204651]
[124.80748749 147.20970154]
[139.78529358 145.54774475]
[154.74256897 147.38529968]
[168.87269592 152.62327576]
[181.41363525 160.97920227]
[191.68908691 172.00244141]
[199.14491272 185.09852600]
[203.37901306 199.56120300]
[204.16305542 214.61051941]
[201.45475769 229.43489075]
[195.40019226 243.23484802]
[186.32583618 255.26617432]
[174.72108459 264.88003540]
[161.21176147 271.55798340]
[146.52641296 274.93988037]
[131.45700073 274.84332275]
[116.81618500 271.27355957]
[103.39353943 264.42306519]
[91.91292572 254.66128540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 91]
[8 90]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[29 42]
[30 41]
[31 40]
[43 63]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[49 57]
[50 56]
[51 55]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
