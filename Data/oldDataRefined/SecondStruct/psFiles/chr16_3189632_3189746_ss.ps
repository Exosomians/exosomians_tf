%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:32 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCGAGCAACCAGAUCCCCAUACUAAGAGCGAAUCCCACGCUCUCCAGGGCCCAAGUUUAGGGCCUGCUCGGGCCGAAAACCACGUCCCAUUUUCAGCAAAGGACGAGAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[184.05024719 185.14472961]
[184.08389282 170.08447266]
[187.72326660 155.46118164]
[174.47058105 148.43505859]
[161.21791077 141.40893555]
[147.96522522 134.38281250]
[134.71253967 127.35668182]
[121.45986176 120.33055878]
[108.20718384 113.30442810]
[121.21743011 120.76990509]
[131.47941589 131.71028137]
[138.09790039 145.17117310]
[140.49554443 159.97830200]
[138.46319580 174.83998108]
[132.17811584 188.45974731]
[122.18860626 199.64945984]
[109.36610413 207.43299866]
[94.82917786 211.13134766]
[79.84596252 210.42189026]
[65.72352600 205.36651611]
[53.69384384 196.40623474]
[44.80632782 184.32269287]
[39.83627701 170.16999817]
[39.21726608 155.18276978]
[43.00328445 140.66844177]
[50.86406326 127.89314270]
[62.11725616 117.96915436]
[48.18260574 112.41708374]
[34.24795532 106.86500549]
[20.31330490 101.31293488]
[6.37865448 95.76086426]
[-7.55599642 90.20879364]
[-21.24102402 97.77542877]
[-36.57810211 94.72452545]
[-46.32553482 82.49662781]
[-45.88087845 66.86536407]
[-35.45408630 55.21134949]
[-19.96837425 53.03725052]
[-6.73561907 61.36960983]
[-2.00392389 76.27413940]
[11.93072701 81.82621002]
[25.86537743 87.37828827]
[39.80002975 92.93035889]
[53.73468018 98.48242950]
[67.66932678 104.03450012]
[73.87699890 99.82559967]
[65.45939636 87.41012573]
[77.87501526 78.99272919]
[86.29233551 91.40779114]
[92.50000000 87.19889069]
[92.50000000 72.19889069]
[92.50000000 57.19889069]
[92.50000000 42.19889069]
[92.50000000 27.19889069]
[80.40541840 17.28652000]
[77.56279755 1.90947509]
[85.31433868 -11.67167473]
[100.00000000 -17.04432487]
[114.68566132 -11.67167473]
[122.43720245 1.90947509]
[119.59458160 17.28652000]
[107.50000000 27.19889069]
[107.50000000 42.19889069]
[107.50000000 57.19889069]
[107.50000000 72.19889069]
[107.50000000 87.19889069]
[115.23330688 100.05175018]
[128.48599243 107.07787323]
[141.73866272 114.10400391]
[154.99134827 121.13012695]
[168.24403381 128.15625000]
[181.49670410 135.18238831]
[194.74938965 142.20851135]
[204.81054688 130.98983765]
[217.25688171 122.51037598]
[231.36244202 117.25942993]
[246.30578613 115.53817749]
[261.21777344 117.44233704]
[275.23214722 122.85693359]
[287.53585815 131.46316528]
[297.41616821 142.75720215]
[304.30203247 156.07969666]
[307.79705811 170.65422058]
[307.70227051 185.63256836]
[304.02752686 200.14410400]
[317.28021240 207.17024231]
[330.53289795 214.19636536]
[343.78558350 221.22248840]
[357.03823853 228.24861145]
[369.00143433 218.82513428]
[383.76483154 215.08851624]
[398.77056885 217.68615723]
[411.41882324 226.16798401]
[419.51821899 239.06449890]
[421.66546631 254.14126587]
[417.48852539 268.78619385]
[407.71115112 280.46188354]
[394.02725220 287.14553833]
[378.80767822 287.67910767]
[364.68933105 281.97018433]
[354.11825562 271.00787354]
[348.92599487 256.69143677]
[350.01211548 241.50129700]
[336.75942993 234.47517395]
[323.50677490 227.44905090]
[310.25408936 220.42291260]
[297.00140381 213.39678955]
[287.05258179 224.58201599]
[274.70834351 233.06611633]
[260.68380737 238.35238647]
[245.79267883 240.12944031]
[230.90002441 238.28967285]
[216.87207031 232.93574524]
[204.52577209 224.37478638]
[194.58129883 213.10089111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 73]
[4 72]
[5 71]
[6 70]
[7 69]
[8 68]
[9 67]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[50 66]
[51 65]
[52 64]
[53 63]
[54 62]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
