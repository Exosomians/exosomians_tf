%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:39 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCUCCCGUCAGACUUGUCGCUCCCGACAGACGUCUGCUCCACCGGCUCACCAAUUCCGCUACCUGACGAUUAGGUAACACGAGACGUGCGCACCCAAGCUUAGGGUAGGAGCAGCCGAUUCCUUCAGGACACGAGUCAAAACAUCGUAGUUUUGAUCCUAAAGAGAACAAUGGGGGUCAGUGAGGUAAGUCAAA\
) } def
/len { sequence length } bind def

/coor [
[121.73703003 249.50765991]
[131.25454712 239.52828979]
[127.46862793 225.01393127]
[123.68270111 210.49955750]
[118.94697571 204.81417847]
[119.95409393 195.72354126]
[116.40010834 181.15065002]
[112.84611511 166.57775879]
[109.29212189 152.00486755]
[105.73812866 137.43197632]
[98.48094177 135.53901672]
[99.36531067 150.51292419]
[85.39749908 155.98101807]
[75.88087463 144.38645935]
[83.96658325 131.75308228]
[76.70939636 129.86012268]
[66.49011993 140.84039307]
[56.27083969 151.82066345]
[46.05156326 162.80093384]
[35.83228302 173.78120422]
[25.61300278 184.76147461]
[22.46890640 200.85639954]
[6.87249994 205.92434692]
[-5.13197088 194.75184631]
[-1.19533587 178.83221436]
[14.63273239 174.54219055]
[24.85201263 163.56192017]
[35.07129288 152.58164978]
[45.29056931 141.60137939]
[55.50984955 130.62110901]
[65.72913361 119.64084625]
[66.43676758 99.02432251]
[76.84561920 84.87848663]
[66.98168945 73.57791901]
[52.07769775 68.26927948]
[49.53735733 53.59290314]
[39.67342377 42.29233551]
[29.80949211 30.99176979]
[19.94556046 19.69120216]
[10.08162689 8.39063358]
[0.21769355 -2.90993357]
[-9.64623928 -14.21050072]
[-22.12252617 -10.70009041]
[-35.37196732 -13.67844677]
[-46.08355331 -23.00002480]
[-51.30404663 -36.86948013]
[-49.23554611 -52.16968155]
[-61.06878662 -61.38784027]
[-76.71041107 -63.76482773]
[-81.99582672 -77.69011688]
[-93.82907104 -86.90827179]
[-105.66230774 -96.12643433]
[-114.80145264 -93.72406006]
[-123.88523865 -95.77271271]
[-130.89794922 -101.68782806]
[-134.34359741 -110.04170227]
[-133.56410217 -118.90637970]
[-144.94294739 -128.67988586]
[-156.39938354 -138.36236572]
[-167.93264771 -147.95318604]
[-187.92787170 -150.45304871]
[-193.85279846 -168.85206604]
[-205.68603516 -178.07022095]
[-217.51927185 -187.28837585]
[-229.35252380 -196.50654602]
[-241.18576050 -205.72470093]
[-253.01899719 -214.94285583]
[-264.85223389 -224.16101074]
[-281.06320190 -229.12500000]
[-280.78085327 -246.07659912]
[-264.41354370 -250.49794006]
[-255.63407898 -235.99424744]
[-243.80084229 -226.77609253]
[-231.96760559 -217.55793762]
[-220.13435364 -208.33978271]
[-208.30111694 -199.12162781]
[-196.46788025 -189.90345764]
[-184.63464355 -180.68530273]
[-174.63450623 -182.85305786]
[-164.88969421 -179.07350159]
[-158.71180725 -170.37170410]
[-158.34182739 -159.48645020]
[-146.80856323 -149.89562988]
[-139.64723206 -148.03393555]
[-135.16943359 -140.05874634]
[-123.79058075 -130.28523254]
[-103.25646973 -128.26943970]
[-96.44415283 -107.95967102]
[-84.61090851 -98.74151611]
[-72.77767181 -89.52335358]
[-57.98243713 -87.80570984]
[-51.85063171 -73.22107697]
[-40.01739120 -64.00292206]
[-26.28838730 -70.04564667]
[-25.09361649 -84.99798584]
[-23.89884567 -99.95032501]
[-22.70407486 -114.90267181]
[-33.97069550 -125.74689484]
[-35.57947922 -141.30149841]
[-26.77081108 -154.22207642]
[-11.70386982 -158.40792847]
[2.50719261 -151.88261414]
[9.15234756 -137.72718811]
[5.09395647 -122.62542725]
[-7.75173283 -113.70790100]
[-8.94650364 -98.75555420]
[-10.14127445 -83.80321503]
[-11.33604527 -68.85087585]
[6.88352919 -48.20992279]
[1.65432811 -24.07443428]
[11.51826096 -12.77386665]
[21.38219452 -1.47329903]
[31.24612617 9.82726860]
[41.11006165 21.12783623]
[50.97399139 32.42840195]
[60.83792496 43.72896957]
[75.03638458 48.22931671]
[78.28225708 63.71398163]
[88.14618683 75.01454926]
[110.32784271 74.34612274]
[125.85903168 90.19714355]
[140.80137634 88.88318634]
[155.74371338 87.56922913]
[170.67509460 86.13617706]
[185.59458923 84.58410645]
[200.51406860 83.03204346]
[213.43959045 73.90835571]
[226.89912415 80.28722382]
[241.81861877 78.73515320]
[256.73809814 77.18309021]
[271.65759277 75.63101959]
[260.77609253 65.30663300]
[260.23455811 50.31641388]
[270.34268188 39.23374557]
[285.31933594 38.39715958]
[296.59887695 48.28512573]
[297.73019409 63.24240112]
[288.06671143 74.71419525]
[303.06622314 74.59458923]
[318.06573486 74.47499084]
[333.06527710 74.35538483]
[348.06478882 74.23578644]
[363.06430054 74.11618042]
[378.06384277 73.99658203]
[388.96966553 62.55811691]
[404.77124023 62.26502228]
[416.09375000 73.29118347]
[416.21978760 89.09496307]
[405.07452393 100.30027771]
[389.27029419 100.25920105]
[378.18344116 88.99610138]
[363.18392944 89.11570740]
[348.18438721 89.23530579]
[333.18487549 89.35491180]
[318.18533325 89.47451019]
[303.18582153 89.59411621]
[288.18630981 89.71371460]
[273.20965576 90.55050659]
[258.29016113 92.10257721]
[243.37068176 93.65464020]
[228.45120239 95.20671082]
[216.59283447 104.21938324]
[202.06614685 97.95153046]
[187.14665222 99.50359344]
[172.22717285 101.05566406]
[165.89219666 104.87911224]
[157.05766296 102.51157379]
[142.11532593 103.82553101]
[127.17298889 105.13948059]
[128.20220947 114.26174164]
[126.02589417 124.21923065]
[120.31101990 133.87799072]
[123.86501312 148.45088196]
[127.41900635 163.02375793]
[130.97299194 177.59664917]
[134.52699280 192.16954041]
[138.19706726 206.71363831]
[141.98298645 221.22799683]
[145.76892090 235.74237061]
[161.59733582 241.68971252]
[170.67544556 255.75765991]
[169.59465027 272.29898071]
[158.97807312 284.81268311]
[162.99496460 299.26483154]
[167.01187134 313.71697998]
[180.89326477 321.27224731]
[185.28630066 336.45373535]
[177.58465576 350.25445557]
[162.35760498 354.48675537]
[148.63905334 346.63961792]
[144.56800842 331.36868286]
[152.55972290 317.73385620]
[148.54281616 303.28170776]
[144.52592468 288.82955933]
[131.63293457 285.33908081]
[122.07369232 275.85549927]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[6 176]
[7 175]
[8 174]
[9 173]
[10 172]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[33 119]
[34 118]
[36 116]
[37 115]
[38 114]
[39 113]
[40 112]
[41 111]
[42 110]
[47 93]
[48 92]
[50 90]
[51 89]
[52 88]
[57 86]
[58 85]
[59 83]
[60 82]
[62 78]
[63 77]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[94 108]
[95 107]
[96 106]
[97 105]
[121 169]
[122 168]
[123 167]
[124 165]
[125 164]
[126 163]
[128 161]
[129 160]
[130 159]
[131 158]
[138 157]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[183 194]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
