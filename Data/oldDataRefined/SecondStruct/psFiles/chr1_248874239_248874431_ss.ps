%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:17:12 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUACAGAAGGGACCACCAGAUCACCAAUCCUAAGCCGCGAGAGUGGCGGCGCCGGGCCCAAGCUAAGGGCCAGUCCUUUCAUUCGGCAAAAUUUUUGACAACGGCGUCCCGAUUGGUAUCCACUACAAGGGUCUCAGUCGAUACUGAACUGAAGAUUUGUUUCCCGUUUUGCGUGGACCACAGGAGUAAAA\
) } def
/len { sequence length } bind def

/coor [
[86.74193573 405.13482666]
[96.22425079 393.51217651]
[109.57405090 386.67236328]
[124.54661560 385.76550293]
[138.62435913 390.94403076]
[149.43876648 401.33517456]
[145.83090210 386.77554321]
[142.22302246 372.21591187]
[138.61514282 357.65625000]
[135.00727844 343.09661865]
[131.28163147 328.56665039]
[127.43846130 314.06735229]
[123.59529877 299.56802368]
[119.75212860 285.06872559]
[108.86420441 281.60479736]
[100.92300415 273.22393799]
[97.98988342 261.93310547]
[100.90726471 250.51435852]
[109.06109619 241.83934021]
[105.68945312 227.22317505]
[102.31781769 212.60702515]
[98.94618225 197.99085999]
[95.57454681 183.37471008]
[92.20291138 168.75854492]
[82.22145844 95.43152618]
[71.36036682 85.08567047]
[60.49927902 74.73981476]
[49.63819122 64.39395905]
[38.77710342 54.04809952]
[27.91601372 43.70224380]
[17.05492401 33.35638809]
[7.95287848 37.76416779]
[-2.54604506 38.56685638]
[-13.00966263 35.35262680]
[-21.90153885 28.27796173]
[-27.80525589 18.08427811]
[-42.52293015 20.98084641]
[-57.24060059 23.87741470]
[-71.95827484 26.77398491]
[-86.67594910 29.67055321]
[-98.66468048 40.85993958]
[-114.26820374 35.81394958]
[-117.43495178 19.72346306]
[-104.90724945 9.14099503]
[-89.57251740 14.95287991]
[-74.85484314 12.05631161]
[-60.13716888 9.15974236]
[-45.41949844 6.26317358]
[-30.70182419 3.36660457]
[-24.68224907 -10.37256145]
[-32.53007889 -23.15581512]
[-40.37791061 -35.93906784]
[-48.22574234 -48.72232056]
[-56.07357407 -61.50556946]
[-63.92140579 -74.28882599]
[-71.76923370 -87.07207489]
[-82.46137238 -97.59245300]
[-95.37002563 -105.23225403]
[-108.27868652 -112.87205505]
[-121.18733978 -120.51185608]
[-134.09599304 -128.15165710]
[-148.78637695 -122.79190826]
[-163.46731567 -128.17745972]
[-171.20692444 -141.76541138]
[-168.35079956 -157.13995361]
[-156.24751282 -167.04170227]
[-140.61186218 -166.79533386]
[-128.82653809 -156.51721191]
[-126.45619202 -141.06031799]
[-113.54753876 -133.42051697]
[-100.63888550 -125.78070831]
[-87.73022461 -118.14090729]
[-74.82157135 -110.50110626]
[-63.96000290 -120.84742737]
[-53.09939194 -131.19282532]
[-59.88353348 -137.33122253]
[-60.10735321 -144.72923279]
[-66.89556122 -158.10534668]
[-82.23834991 -160.42449951]
[-93.26409149 -171.34295654]
[-95.73317719 -186.66232300]
[-88.69618225 -200.49201965]
[-74.85897827 -207.51422119]
[-59.54224777 -205.02876282]
[-48.63559341 -193.99134827]
[-46.33284378 -178.64608765]
[-53.51945114 -164.89355469]
[-46.73124313 -151.51744080]
[-39.83495712 -138.19673157]
[-39.62216568 -153.19522095]
[-25.98010635 -159.43174744]
[-11.02745152 -160.62258911]
[3.42974305 -156.62390137]
[15.64526176 -147.91867065]
[24.14365196 -135.55834961]
[27.89843178 -121.03589630]
[26.45608330 -106.10540009]
[19.99081802 -92.57025146]
[9.28354454 -82.06528473]
[-4.37245655 -75.85935211]
[-19.32774353 -74.70203400]
[-33.77593994 -78.73311615]
[-45.97024536 -87.46399689]
[-58.98598480 -94.91990662]
[-51.13815308 -82.13665771]
[-43.29032135 -69.35340118]
[-35.44248962 -56.57015228]
[-27.59465790 -43.78689957]
[-19.74682808 -31.00364494]
[-11.89899540 -18.22039413]
[14.08910465 -18.45500755]
[30.31423378 -0.19055425]
[27.40078163 22.49529839]
[38.26187134 32.84115601]
[49.12295914 43.18701172]
[59.98404694 53.53286743]
[70.84513855 63.87872314]
[81.70622253 74.22457886]
[92.56731415 84.57043457]
[107.51817322 85.78364563]
[119.90523529 77.32428741]
[132.29229736 68.86493683]
[144.67935181 60.40557861]
[146.04420471 44.82767105]
[157.13952637 33.80823135]
[172.72642517 32.55030060]
[185.44526672 41.64783478]
[189.29058838 56.80525970]
[182.44676208 70.86569977]
[168.14521790 77.19024658]
[153.13871765 72.79264069]
[140.75164795 81.25199890]
[128.36459351 89.71134949]
[115.97752380 98.17070770]
[120.52048492 112.46691132]
[125.06302643 126.76185608]
[140.06106567 126.51895905]
[155.05909729 126.27606201]
[170.05712891 126.03316498]
[185.05516052 125.79026794]
[200.05073547 125.42594147]
[215.04287720 124.94021606]
[228.67881775 115.83017731]
[243.26463318 123.32592010]
[243.79566956 139.71647644]
[229.72564697 148.14062500]
[215.52859497 139.93234253]
[200.53646851 140.41807556]
[193.94352722 143.78169250]
[185.29804993 140.78829956]
[170.30001831 141.03120422]
[155.30198669 141.27409363]
[140.30395508 141.51698303]
[125.30592346 141.75988770]
[116.06209564 153.57392883]
[106.81906891 165.38690186]
[110.19070435 180.00306702]
[113.56233978 194.61923218]
[116.93397522 209.23538208]
[120.30561066 223.85154724]
[123.67725372 238.46769714]
[140.10821533 247.87608337]
[144.38574219 265.99285889]
[134.25144958 281.22555542]
[138.09460449 295.72485352]
[141.93777466 310.22418213]
[145.78094482 324.72348022]
[151.01171875 332.22973633]
[149.56692505 339.48873901]
[153.17478943 354.04837036]
[156.78266907 368.60803223]
[160.39054871 383.16766357]
[163.99841309 397.72732544]
[169.11602783 411.82730103]
[182.11662292 420.84368896]
[180.73631287 435.67419434]
[187.30703735 449.15847778]
[201.94450378 455.72537231]
[205.79690552 471.29901123]
[195.90899658 483.93264771]
[179.86595154 483.93484497]
[169.97459412 471.30389404]
[173.82275391 455.72918701]
[167.25204468 442.24493408]
[154.72143555 434.19302368]
[155.63175964 418.39804077]
[153.99916077 433.30892944]
[146.51939392 446.31097412]
[134.45018005 455.21792603]
[119.82088470 458.53210449]
[105.09139252 455.69625854]
[92.73840332 447.18722534]
[84.83902740 434.43576050]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 173]
[7 172]
[8 171]
[9 170]
[10 169]
[11 167]
[12 166]
[13 165]
[14 164]
[19 161]
[20 160]
[21 159]
[22 158]
[23 157]
[24 156]
[25 119]
[26 118]
[27 117]
[28 116]
[29 115]
[30 114]
[31 113]
[36 49]
[37 48]
[38 47]
[39 46]
[40 45]
[50 110]
[51 109]
[52 108]
[53 107]
[54 106]
[55 105]
[56 104]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[75 89]
[77 88]
[78 87]
[120 134]
[121 133]
[122 132]
[123 131]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
[141 148]
[142 147]
[174 186]
[176 184]
[177 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
