%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:02 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCCAGGAAAGCUAUCGAGUCAACCAUCUCGCCUCCUGACAUCCAAGUAAUUUGAUUCCGUAGGAAUCCAGCGACCAAGCUUAGGCCGAGCUUCCUGCUUUCAAAACU\
) } def
/len { sequence length } bind def

/coor [
[76.95915985 394.62033081]
[73.18733978 379.95568848]
[74.38397980 364.86108398]
[80.41928101 350.97390747]
[90.63857269 339.80050659]
[103.93334198 332.55291748]
[101.39833069 317.76867676]
[98.86331940 302.98443604]
[96.32830811 288.20019531]
[93.79329681 273.41595459]
[91.25827789 258.63171387]
[86.96337128 252.48121643]
[88.86691284 243.39369202]
[86.75129700 228.54364014]
[84.63567352 213.69357300]
[76.71148682 211.52900696]
[69.83406067 206.16629028]
[65.29734039 198.13003540]
[64.12973022 188.46403503]
[49.25122070 190.36930847]
[34.37271500 192.27456665]
[27.03880882 205.94912720]
[13.05323410 212.67098999]
[-2.20626760 209.85545349]
[-12.87210751 198.58515930]
[-14.84305286 183.19377136]
[-7.36123419 169.59957886]
[6.69643593 163.02983093]
[21.92449760 166.01072693]
[32.46744919 177.39607239]
[47.34595490 175.49079895]
[62.22446060 173.58552551]
[73.62365723 163.83573914]
[77.81259918 149.43252563]
[82.00154114 135.02929688]
[86.19048309 120.62608337]
[69.51962280 105.84352875]
[69.29915619 78.90657806]
[59.87585831 67.23604584]
[44.38635635 68.16067505]
[31.32976341 59.77587128]
[25.72660255 45.30575562]
[29.73140717 30.31438446]
[41.80424500 20.56624794]
[57.30286789 19.80970192]
[70.26773834 28.33565331]
[75.71359253 42.86569977]
[71.54639435 57.81274414]
[80.96969604 69.48327637]
[88.40895081 68.53064728]
[79.31961060 56.59817123]
[85.10868835 42.76029968]
[99.98715973 40.85475922]
[109.07671356 52.78706741]
[103.28745270 66.62538147]
[110.72670746 65.67274475]
[116.90522766 52.00431824]
[123.08374786 38.33588791]
[129.26226807 24.66746330]
[135.44078064 10.99903488]
[141.61930847 -2.66939235]
[142.63386536 -19.59295654]
[159.17691040 -23.30295181]
[167.32148743 -8.43344784]
[155.28773499 3.50912642]
[149.10920715 17.17755318]
[142.93069458 30.84598160]
[136.75216675 44.51440811]
[130.57365417 58.18283463]
[124.39513397 71.85126495]
[122.82282257 78.96862030]
[120.02140808 85.32752991]
[134.23387146 80.53107452]
[148.44631958 75.73461151]
[155.23597717 61.46309662]
[170.15621948 56.25141907]
[184.35516357 63.19157410]
[189.40879822 78.16609192]
[182.31890869 92.29086304]
[167.29179382 97.18589783]
[153.24278259 89.94707489]
[139.03031921 94.74353027]
[124.81786346 99.53999329]
[117.92048645 117.17539215]
[100.59370422 124.81502533]
[96.40476227 139.21824646]
[92.21582031 153.62145996]
[88.02687836 168.02468872]
[107.26380920 177.75920105]
[111.32621002 197.36985779]
[99.48573303 211.57795715]
[101.60134888 226.42800903]
[103.71697235 241.27807617]
[106.04251862 256.09671021]
[108.57752991 270.88095093]
[111.11254120 285.66519165]
[113.64756012 300.44940186]
[116.18257141 315.23364258]
[118.71758270 330.01788330]
[133.66738892 332.42248535]
[147.02522278 339.55316162]
[157.34214783 350.63647461]
[163.49905396 364.47018433]
[164.82806396 379.55371094]
[161.18504333 394.25088501]
[152.96514893 406.96749878]
[141.06001282 416.32412720]
[126.76101685 421.30581665]
[111.61920929 421.37225342]
[97.27706146 416.51617432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 99]
[7 98]
[8 97]
[9 96]
[10 95]
[11 94]
[13 93]
[14 92]
[15 91]
[19 32]
[20 31]
[21 30]
[33 88]
[34 87]
[35 86]
[36 85]
[38 49]
[39 48]
[56 70]
[57 69]
[58 68]
[59 67]
[60 66]
[61 65]
[72 83]
[73 82]
[74 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
