%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:01 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUAUAUUCGUUUCGGGGUCCAGGCACUCUAACGGAUUGUCUGUGUAUGGAUAUCUAUGUUCGAACACGCCUGAUUAUGGUGUUCAAGCCUAGAUGCCCAAACACCGUU\
) } def
/len { sequence length } bind def

/coor [
[23.52261353 188.12109375]
[12.17197418 189.76123047]
[0.80620122 188.35231018]
[-9.77126122 184.00230408]
[-18.81490135 177.02680969]
[-25.68968964 167.92611694]
[-39.81735611 172.96685791]
[-53.94502258 178.00759888]
[-68.07268524 183.04833984]
[-82.20035553 188.08908081]
[-96.32801819 193.12982178]
[-110.45568085 198.17056274]
[-115.18868256 203.12915039]
[-120.87127686 204.61134338]
[-125.53628540 203.07055664]
[-139.92868042 207.29653931]
[-154.32107544 211.52253723]
[-168.71347046 215.74851990]
[-183.10586548 219.97450256]
[-190.45912170 233.96397400]
[-205.57530212 238.57662964]
[-219.48623657 231.07586670]
[-223.93882751 215.91177368]
[-216.29141235 202.08091736]
[-201.08108521 197.78889465]
[-187.33184814 205.58210754]
[-172.93945312 201.35612488]
[-158.54705811 197.13014221]
[-144.15466309 192.90414429]
[-129.76226807 188.67816162]
[-115.49642181 184.04290771]
[-101.36875916 179.00216675]
[-87.24109650 173.96142578]
[-73.11342621 168.92068481]
[-58.98576355 163.87994385]
[-44.85809708 158.83920288]
[-30.73043060 153.79846191]
[-29.82130432 135.03150940]
[-20.95626450 118.41146851]
[-5.80030394 107.14623260]
[12.76297569 103.42980194]
[31.17996979 108.01506805]
[45.90733719 120.06175995]
[59.17383194 113.06174469]
[72.44032288 106.06173706]
[85.70681763 99.06172943]
[93.31548309 87.33142853]
[107.29317474 87.67177582]
[120.55966949 80.67176819]
[133.82615662 73.67176056]
[142.42074585 60.38854599]
[157.28790283 61.29226685]
[170.55439758 54.29225922]
[183.82089233 47.29224777]
[197.08738708 40.29223633]
[210.35388184 33.29222870]
[223.62037659 26.29221916]
[232.21495056 13.00900555]
[247.08212280 13.91272736]
[260.34860229 6.91271687]
[273.61511230 -0.08729281]
[282.20968628 -13.37050533]
[297.07684326 -12.46678448]
[310.34335327 -19.46679497]
[323.60983276 -26.46680450]
[336.87634277 -33.46681213]
[350.14282227 -40.46682358]
[363.40933228 -47.46683502]
[363.31192017 -62.77203369]
[370.34866333 -76.36405182]
[382.90252686 -85.11954498]
[398.08877563 -87.02656555]
[412.41769409 -81.64688873]
[422.59658813 -70.21673584]
[426.28643799 -55.36265945]
[422.63934326 -40.49802399]
[412.49340820 -29.03861618]
[398.18002319 -23.61771965]
[382.98837280 -25.48101807]
[370.40933228 -34.20034027]
[357.14285278 -27.20032883]
[343.87634277 -20.20031929]
[330.60986328 -13.20030975]
[317.34335327 -6.20030022]
[304.07687378 0.79970974]
[296.43118286 13.58223534]
[280.61511230 13.17920113]
[267.34863281 20.17921066]
[254.08212280 27.17922020]
[246.43646240 39.96174622]
[230.62039185 39.55871201]
[217.35389709 46.55872345]
[204.08740234 53.55873108]
[190.82090759 60.55874252]
[177.55441284 67.55875397]
[164.28791809 74.55876160]
[156.64224243 87.34128571]
[140.82617188 86.93825531]
[127.55967712 93.93826294]
[114.29318237 100.93827057]
[106.68451691 112.66857147]
[92.70682526 112.32822418]
[79.44033051 119.32823181]
[66.17384338 126.32823944]
[52.90734482 133.32824707]
[54.90599442 144.71726990]
[53.83231735 156.21456909]
[49.77058029 167.00711060]
[43.01604843 176.33393860]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 37]
[7 36]
[8 35]
[9 34]
[10 33]
[11 32]
[12 31]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[43 105]
[44 104]
[45 103]
[46 102]
[48 100]
[49 99]
[50 98]
[52 96]
[53 95]
[54 94]
[55 93]
[56 92]
[57 91]
[59 89]
[60 88]
[61 87]
[63 85]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
