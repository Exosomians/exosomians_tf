%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:03 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUUUCUGACUCUCGGUGGUGUUCCGCUUCCCGUUCAUUGAUAGACAUGAUCAAACACCGUCGAGUUCAUUUUAGCUCAGGUUUGGUUGCCGAGAAAAGUCCCGGUGG\
) } def
/len { sequence length } bind def

/coor [
[79.98080444 111.70883179]
[65.27956390 114.68769073]
[50.57832336 117.66654968]
[35.87708664 120.64540100]
[23.88833046 130.96917725]
[9.87800026 125.91349792]
[-4.82323837 128.89236450]
[-19.43341637 132.28981018]
[-33.94062042 136.10308838]
[-48.44782257 139.91636658]
[-62.89909363 143.93640137]
[-66.60481262 158.77604675]
[-77.17103577 169.69627380]
[-91.68812561 173.83398438]
[-106.22985840 170.17422485]
[-116.91529083 159.79698181]
[-131.30769348 164.02297974]
[-145.70008850 168.24896240]
[-160.09248352 172.47496033]
[-174.48487854 176.70094299]
[-185.40382385 188.93649292]
[-201.40231323 185.33372498]
[-206.02249146 169.59886169]
[-194.51150513 157.91857910]
[-178.71086121 162.30854797]
[-164.31846619 158.08256531]
[-149.92607117 153.85656738]
[-135.53367615 149.63058472]
[-121.14128113 145.40458679]
[-117.76248169 130.89772034]
[-107.50781250 119.95707703]
[-93.05825043 115.58940887]
[-78.26544189 119.06356812]
[-67.12508392 129.54400635]
[-61.51038361 124.56584930]
[-52.26109695 125.40915680]
[-37.75389481 121.59587860]
[-23.24669266 117.78260803]
[-20.04747772 114.05415344]
[-14.41579342 112.38894653]
[-7.80209541 114.19111633]
[6.89914322 111.21226501]
[17.83636665 101.10155487]
[32.89822769 105.94416809]
[47.59946823 102.96530914]
[62.30070496 99.98645020]
[77.00194550 97.00759125]
[85.25909424 79.59256744]
[105.13676453 73.33306885]
[124.61661530 84.40674591]
[135.66772461 74.26412201]
[146.71884155 64.12149811]
[157.76995850 53.97887421]
[168.82107544 43.83625031]
[179.87219238 33.69362640]
[182.30163574 27.28374100]
[186.95904541 23.70639610]
[191.85588074 23.30970764]
[203.46800232 13.81452084]
[215.08012390 4.31933355]
[215.56192017 -6.73505640]
[221.98667908 -15.47016239]
[231.97915649 -19.07243729]
[242.06990051 -16.55307579]
[254.20515442 -25.36985588]
[266.34042358 -34.18663406]
[278.47567749 -43.00341415]
[290.61093140 -51.82019043]
[292.83538818 -67.46714783]
[305.52239990 -76.89133453]
[321.14495850 -74.50155640]
[330.43450928 -61.71561813]
[327.87966919 -46.11919403]
[314.99624634 -36.96536636]
[299.42770386 -39.68493652]
[287.29244995 -30.86815834]
[275.15719604 -22.05137825]
[263.02194214 -13.23460007]
[250.88668823 -4.41782141]
[244.51440430 13.74430561]
[224.57531738 15.93145752]
[212.96319580 25.42664528]
[201.35105896 34.92183304]
[190.01481628 44.74474335]
[178.96369934 54.88736725]
[167.91258240 65.02999115]
[156.86146545 75.17261505]
[145.81034851 85.31523895]
[134.75923157 95.45786285]
[133.47561646 110.40283966]
[142.63533020 122.28137207]
[151.79504395 134.15989685]
[160.95475769 146.03843689]
[175.50900269 152.24206543]
[177.15368652 167.04557800]
[186.31341553 178.92411804]
[201.67675781 184.65992737]
[204.12385559 200.87547302]
[191.13732910 210.88957214]
[176.07661438 204.40058899]
[174.43487549 188.08383179]
[165.27516174 176.20529175]
[151.37609863 170.85130310]
[149.07623291 155.19815063]
[139.91651917 143.31962585]
[130.75679016 131.44108582]
[121.59707642 119.56255341]
[109.88870239 125.82424927]
[97.29952240 126.02613068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 47]
[2 46]
[3 45]
[4 44]
[6 42]
[7 41]
[8 38]
[9 37]
[10 36]
[11 34]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[50 89]
[51 88]
[52 87]
[53 86]
[54 85]
[55 84]
[58 83]
[59 82]
[60 81]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[90 107]
[91 106]
[92 105]
[93 104]
[95 102]
[96 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
