%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:16:49 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGU\
) } def
/len { sequence length } bind def

/coor [
[88.65345764 152.38700867]
[75.51075745 145.15724182]
[72.96870422 130.37420654]
[82.94276428 119.16902161]
[75.45376587 118.76298523]
[65.43695068 129.92825317]
[55.42013168 141.09353638]
[45.40331650 152.25880432]
[35.38650131 163.42408752]
[38.77162933 178.56741333]
[32.57834625 192.79495239]
[19.18809128 200.63592529]
[3.74969530 199.07530212]
[-7.80046654 188.71319580]
[-11.02112103 173.53402710]
[-4.67385960 159.37451172]
[8.80066490 151.67926025]
[24.22122383 153.40727234]
[34.23804092 142.24198914]
[44.25485611 131.07672119]
[54.27167130 119.91144562]
[64.28849030 108.74617004]
[65.30331421 93.78053284]
[56.88550949 81.36520386]
[48.46770096 68.94986725]
[40.04989624 56.53453064]
[31.63208961 44.11919403]
[22.88117218 31.93636131]
[13.80355835 19.99496651]
[4.72594547 8.05356979]
[-10.68461323 5.78366947]
[-19.72049332 -6.45591831]
[-17.46152115 -21.13354111]
[-26.53913307 -33.07493591]
[-35.61674500 -45.01633453]
[-50.12786484 -51.32014084]
[-51.67047119 -66.13465118]
[-60.74808502 -78.07604218]
[-69.82569885 -90.01744080]
[-78.90331268 -101.95883942]
[-87.98092651 -113.90023041]
[-97.05854034 -125.84162903]
[-106.13615417 -137.78302002]
[-121.77425385 -141.36482239]
[-128.59393311 -155.88624573]
[-121.36372375 -170.20768738]
[-105.63002014 -173.34295654]
[-93.46236420 -162.88696289]
[-94.19475555 -146.86064148]
[-85.11714172 -134.91923523]
[-76.03952789 -122.97784424]
[-66.96191406 -111.03644562]
[-57.88430405 -99.09505463]
[-48.80669022 -87.15365601]
[-39.72907639 -75.21226501]
[-25.86724854 -69.76258087]
[-23.67535019 -54.09394836]
[-14.59773731 -42.15254974]
[-5.52012444 -30.21115494]
[9.22683907 -28.46110916]
[18.60293961 -16.48014832]
[16.66734123 -1.02404308]
[25.74495506 10.91735268]
[34.82256699 22.85874939]
[39.47636032 24.38582993]
[43.16302109 28.93058968]
[44.04742432 35.70138931]
[52.46523285 48.11672592]
[60.88303757 60.53205872]
[69.30084229 72.94739532]
[77.71865082 85.36273193]
[70.22605896 72.36807251]
[70.03597260 57.36927414]
[77.19683838 44.18890762]
[89.88363647 36.18609238]
[104.86305237 35.40041351]
[118.31743622 42.03210831]
[126.81784821 54.39103317]
[128.19764709 69.32882690]
[143.10972595 67.70703888]
[158.02178955 66.08525848]
[172.93385315 64.46347046]
[187.84593201 62.84168243]
[202.93849182 55.11827850]
[214.53810120 67.48296356]
[205.86772156 82.05213928]
[189.46771240 77.75375366]
[174.55564880 79.37554169]
[159.64356995 80.99732208]
[144.73150635 82.61911011]
[129.81944275 84.24089813]
[126.76272583 91.08972931]
[140.46029663 97.20336151]
[134.34646606 110.90084076]
[120.64930725 104.78739929]
[117.59259796 111.63623047]
[126.34352112 123.81906128]
[135.09443665 136.00189209]
[143.84535217 148.18473816]
[152.59628296 160.36756897]
[161.34719849 172.55039978]
[176.98187256 174.85958862]
[186.33720398 187.59745789]
[183.86283875 203.20684814]
[171.02676392 212.42698669]
[155.44441223 209.78773499]
[146.36050415 196.85490417]
[149.16436768 181.30131531]
[140.41343689 169.11848450]
[131.66252136 156.93565369]
[122.91160583 144.75282288]
[114.16068268 132.56997681]
[105.40976715 120.38715363]
[97.92076874 119.98110962]
[106.62462616 132.19760132]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[23 71]
[24 70]
[25 69]
[26 68]
[27 67]
[28 64]
[29 63]
[30 62]
[33 59]
[34 58]
[35 57]
[37 55]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[43 49]
[79 91]
[80 90]
[81 89]
[82 88]
[83 87]
[96 113]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
