%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:16:52 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGGUUGCACCUAUGUGGGCCCUCCAGUGAGAGGGGCCCGAGACAGGUUCACCGCAUCCCCUCGUAUCCCGAGACGGGGUACUACAUGUUCAGGGAAAGGUGUUGCAACCUUUAUUUCGACCCGGAGCACAGACGCGGACGUAUAAGGAUGUCGAAGGGUCUCAGGACAGCUGUUAAUGACCCCUCUGUUUGGUACGUCCUUUGUCGGAA\
) } def
/len { sequence length } bind def

/coor [
[60.81689835 174.17671204]
[50.02708435 180.04695129]
[37.83729553 180.76869202]
[26.56421661 176.26623535]
[15.20154858 186.05857849]
[3.83887982 195.85090637]
[-0.61841124 203.82310486]
[-7.76548243 205.70263672]
[-13.38794422 220.49108887]
[-28.11473274 222.72067261]
[-39.62125778 232.34355164]
[-51.12778473 241.96643066]
[-62.63431168 251.58930969]
[-61.25286102 268.44754028]
[-70.10428619 282.66604614]
[-85.53189850 288.74569702]
[-101.38269043 284.47470093]
[-112.74536133 294.26702881]
[-124.10803223 304.05938721]
[-135.47070312 313.85171509]
[-146.83337402 323.64404297]
[-158.19602966 333.43637085]
[-169.55870056 343.22869873]
[-180.92137146 353.02102661]
[-186.32408142 367.89117432]
[-201.01620483 370.33874512]
[-203.63296509 386.16693115]
[-217.70916748 393.86367798]
[-232.44676208 387.52468872]
[-236.54032898 372.01269531]
[-226.84962463 359.22717285]
[-210.80854797 358.97607422]
[-206.21856689 344.80633545]
[-190.71369934 341.65835571]
[-179.35104370 331.86602783]
[-167.98837280 322.07369995]
[-156.62570190 312.28137207]
[-145.26303101 302.48904419]
[-133.90036011 292.69671631]
[-122.53769684 282.90435791]
[-111.17502594 273.11203003]
[-113.51146698 259.96777344]
[-109.01200867 247.28363037]
[-98.75107574 238.40830994]
[-85.33872223 235.74082947]
[-72.25719452 240.08277893]
[-60.75066757 230.45989990]
[-49.24414062 220.83702087]
[-37.73761368 211.21414185]
[-32.93817520 197.11396790]
[-17.38836288 194.19610596]
[-5.95345211 184.48823547]
[5.40921640 174.69590759]
[16.77188492 164.90357971]
[14.49168396 147.39089966]
[23.25819778 131.87893677]
[39.72529602 124.67223358]
[57.37457657 128.82960510]
[68.44207764 118.70484924]
[79.50957489 108.58010864]
[79.06526947 101.09327698]
[64.09159851 101.98164368]
[63.20348740 87.00795746]
[78.17665863 86.11962128]
[77.73235321 78.63279724]
[65.54505157 69.88809967]
[53.35774994 61.14340973]
[41.17044449 52.39871979]
[28.98314285 43.65402603]
[16.79583931 34.90933609]
[4.60853672 26.16464233]
[-7.57876635 17.41995049]
[-23.97274590 13.09863281]
[-24.35861206 -3.85092306]
[-8.17826939 -8.91381359]
[1.16592562 5.23264694]
[13.35322857 13.97733974]
[25.54053116 22.72203064]
[37.72783661 31.46672440]
[49.91513824 40.21141434]
[62.10243988 48.95610809]
[74.28974152 57.70080185]
[86.47705078 66.44549561]
[93.29508209 63.32069016]
[87.04569244 49.68452072]
[100.68196106 43.43534470]
[106.93115997 57.07109070]
[113.74919128 53.94628906]
[115.08113098 39.00554276]
[116.41307068 24.06479454]
[117.74501038 9.12404728]
[119.07695007 -5.81669998]
[112.59561157 -20.24939919]
[121.43247223 -32.23935699]
[122.76441193 -47.18010330]
[124.09635162 -62.12085342]
[124.65193176 -77.11055756]
[124.42965698 -92.10890961]
[124.20738220 -107.10726929]
[123.98510742 -122.10562134]
[123.76283264 -137.10397339]
[123.54055786 -152.10232544]
[112.02771759 -162.92959595]
[111.62646484 -178.72879028]
[122.57485962 -190.12652588]
[138.37741089 -190.36071777]
[149.65875244 -179.29243469]
[149.72586060 -163.48828125]
[138.53890991 -152.32460022]
[138.76118469 -137.32624817]
[138.98345947 -122.32789612]
[139.20573425 -107.32953644]
[139.42800903 -92.33118439]
[139.65028381 -77.33283234]
[150.03141785 -88.16020966]
[164.92950439 -89.90576172]
[177.53231812 -81.77131653]
[182.07714844 -67.47640991]
[176.48583984 -53.55744934]
[163.31506348 -46.37897110]
[148.58721924 -49.22336960]
[139.03709412 -60.78891373]
[137.70515442 -45.84816742]
[136.37322998 -30.90741730]
[142.94982910 -17.54338074]
[134.01770020 -4.48476171]
[132.68576050 10.45598602]
[131.35382080 25.39673424]
[130.02188110 40.33748245]
[128.68994141 55.27822876]
[132.19256592 78.77420044]
[123.65982056 96.05012512]
[109.11671448 102.34803009]
[123.32660675 107.15207672]
[137.53649902 111.95613098]
[151.74639893 116.76017761]
[169.71395874 112.72764587]
[180.77763367 126.35018921]
[195.05714417 130.94314575]
[209.33666992 135.53610229]
[223.61619568 140.12905884]
[237.89572144 144.72200012]
[252.17524719 149.31495667]
[266.45477295 153.90791321]
[280.73428345 158.50086975]
[292.54406738 153.31640625]
[304.34265137 157.43530273]
[309.98510742 168.13471985]
[324.19500732 172.93876648]
[338.40490723 177.74281311]
[352.61480713 182.54685974]
[362.06820679 177.16905212]
[372.70178223 177.86692810]
[381.02102661 184.16920471]
[384.42514038 193.80279541]
[398.48641968 199.02581787]
[414.11712646 196.57795715]
[423.35375977 208.26271057]
[437.41506958 213.48573303]
[451.47634888 218.70877075]
[465.53765869 223.93179321]
[479.59896851 229.15481567]
[490.47659302 220.68983459]
[504.00909424 218.72048950]
[516.64654541 223.65531921]
[525.12713623 234.10577393]
[527.31884766 247.27494812]
[541.30120850 252.70576477]
[555.28356934 258.13659668]
[571.39947510 255.10182190]
[581.87890625 267.71585083]
[575.94152832 283.00244141]
[559.69519043 285.23605347]
[549.85278320 272.11892700]
[535.87042236 266.68811035]
[521.88806152 261.25729370]
[508.37673950 270.58111572]
[491.80429077 270.00817871]
[478.70919800 259.56637573]
[474.37591553 243.21611023]
[460.31463623 237.99308777]
[446.25332642 232.77006531]
[432.19204712 227.54702759]
[418.13073730 222.32400513]
[403.50582886 225.14544678]
[393.26339722 213.08711243]
[379.20211792 207.86408997]
[360.42489624 212.48146057]
[347.81076050 196.75674438]
[333.60086060 191.95269775]
[319.39096069 187.14865112]
[305.18106079 182.34460449]
[288.18374634 186.71147156]
[276.14132690 172.78039551]
[261.86181641 168.18743896]
[247.58229065 163.59448242]
[233.30276489 159.00152588]
[219.02323914 154.40856934]
[204.74371338 149.81562805]
[190.46420288 145.22267151]
[176.18467712 140.62971497]
[165.28381348 145.87245178]
[153.35005188 142.16342163]
[146.94235229 130.97007751]
[132.73245239 126.16602325]
[118.52256012 121.36197662]
[104.31266785 116.55792999]
[89.63432312 119.64760590]
[78.56681824 129.77235413]
[67.49932098 139.89709473]
[70.52931976 152.02413940]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 54]
[5 53]
[6 52]
[8 51]
[10 49]
[11 48]
[12 47]
[13 46]
[17 41]
[18 40]
[19 39]
[20 38]
[21 37]
[22 36]
[23 35]
[24 34]
[26 32]
[58 210]
[59 209]
[60 208]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[72 76]
[88 130]
[89 129]
[90 128]
[91 127]
[92 126]
[94 124]
[95 123]
[96 122]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[133 207]
[134 206]
[135 205]
[136 204]
[138 201]
[139 200]
[140 199]
[141 198]
[142 197]
[143 196]
[144 195]
[145 194]
[148 192]
[149 191]
[150 190]
[151 189]
[155 187]
[156 186]
[158 184]
[159 183]
[160 182]
[161 181]
[162 180]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
