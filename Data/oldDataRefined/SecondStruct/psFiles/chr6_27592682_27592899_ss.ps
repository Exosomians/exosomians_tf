%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:06 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCCAAAGUCUUUCGUGGUCCGUCAAUUUUGUCUCAAAUGAGGGAGCCAGUGACAUCCAGAAGUCAGUAAGUACUCUCCACAAUUUCGUGGAGAUUGUUCACGUUCUACGUCACAAAACCUCCUUUUUUUGUCCGUGGAUCGUCUCCUACCAAAGCUAGGUAGCUGGAGACCCAAUACCCGGGUCGUGCGAAGGCGACGCGGUGAGACGACAGGGGA\
) } def
/len { sequence length } bind def

/coor [
[93.54180908 352.48818970]
[80.29349518 341.90902710]
[86.79170990 326.24984741]
[87.22200775 311.25604248]
[87.65230560 296.26220703]
[75.76531219 287.32702637]
[71.36703491 272.93539429]
[76.34463501 258.54522705]
[88.98730469 249.74357605]
[89.41760254 234.74974060]
[89.84790039 219.75592041]
[90.17063904 204.75938416]
[90.38581085 189.76092529]
[90.60098267 174.76246643]
[90.81614685 159.76402283]
[91.03131866 144.76556396]
[77.78038025 137.73616028]
[65.48281860 146.32510376]
[53.18526459 154.91406250]
[40.94962692 163.59098816]
[28.77654076 172.35546875]
[16.60345459 181.11993408]
[9.92496681 195.46247864]
[-4.92460203 196.61987305]
[-17.09768867 205.38435364]
[-29.27077293 214.14881897]
[-32.32505417 220.00170898]
[-37.15065384 222.98931885]
[-41.92113876 222.98419189]
[-54.34063721 231.39584351]
[-66.76013184 239.80751038]
[-79.17963409 248.21917725]
[-88.90325165 262.10757446]
[-104.94065094 256.60864258]
[-104.09621429 239.67575073]
[-87.59129333 235.79968262]
[-75.17179871 227.38801575]
[-62.75230026 218.97634888]
[-50.33280182 210.56468201]
[-38.03524780 201.97573853]
[-25.86215973 193.21125793]
[-13.68907452 184.44679260]
[-7.88128662 170.73115540]
[7.83898258 168.94685364]
[20.01206779 160.18238831]
[32.18515396 151.41790771]
[35.77458572 144.96255493]
[44.59630966 142.61650085]
[56.89386749 134.02755737]
[69.19142151 125.43859863]
[62.17501831 124.88493347]
[54.96937180 123.07819366]
[40.10844421 121.04032898]
[25.24751854 119.00246429]
[10.38659382 116.96459961]
[-0.25746295 128.25546265]
[-15.51149940 131.10046387]
[-29.51002693 124.40562439]
[-36.87032700 110.74525452]
[-34.76221466 95.37204742]
[-23.99629784 84.19731140]
[-8.71229649 81.51796722]
[5.21278191 88.36426544]
[12.42445946 102.10367584]
[27.28538513 104.14154053]
[42.14630890 106.17940521]
[57.00723648 108.21726990]
[60.66367722 101.66895294]
[47.56704712 94.35607147]
[34.47042084 87.04318237]
[21.37391090 79.73007965]
[28.68723106 66.63368988]
[41.78330612 73.94655609]
[54.87993622 81.25943756]
[67.97656250 88.57232666]
[71.63300323 82.02400970]
[62.10152054 70.44165802]
[52.57003784 58.85931396]
[43.03855133 47.27696228]
[33.50706863 35.69461441]
[23.97558403 24.11226654]
[14.44409943 12.52991676]
[-1.30840921 11.25163078]
[-11.47942543 -0.84489721]
[-10.03466511 -16.58301163]
[2.16872096 -26.62556648]
[17.89068031 -25.01449394]
[27.80365181 -12.70561409]
[26.02644920 2.99843264]
[35.55793381 14.58078098]
[45.08941650 26.16312981]
[54.62090302 37.74547958]
[64.15238953 49.32782745]
[73.68386841 60.91017532]
[83.21535492 72.49252319]
[90.63043976 71.36711121]
[87.81864929 56.63300705]
[78.79892731 44.64781952]
[84.46712494 30.76000023]
[99.29725647 28.50893402]
[108.83126068 40.08921051]
[103.77397156 54.21140289]
[105.46060181 69.11627960]
[112.87568665 67.99085999]
[110.92395782 52.29050064]
[122.89530945 43.42844391]
[128.56092834 29.53957367]
[134.22654724 15.65070248]
[139.89216614 1.76183033]
[145.55778503 -12.12704086]
[151.22340393 -26.01591301]
[146.95256042 -38.18236160]
[151.95291138 -49.63161087]
[163.04554749 -54.44717407]
[168.90982056 -68.25334167]
[174.77409363 -82.05951691]
[180.63835144 -95.86568451]
[186.50262451 -109.67185974]
[192.36689758 -123.47802734]
[184.26304626 -136.71083069]
[185.51849365 -152.17704773]
[195.65051270 -163.92956543]
[210.76312256 -167.44934082]
[225.04521179 -161.38291931]
[233.00503540 -148.06297302]
[231.58187866 -132.61129761]
[221.32296753 -120.96937561]
[206.17306519 -117.61376190]
[200.30879211 -103.80758667]
[194.44451904 -90.00141907]
[188.58026123 -76.19524384]
[182.71598816 -62.38907623]
[176.85171509 -48.58290482]
[179.91944885 -31.30156708]
[165.11227417 -20.35029411]
[159.44665527 -6.46142197]
[153.78103638 7.42744970]
[148.11541748 21.31632233]
[142.44979858 35.20519257]
[136.78417969 49.09406662]
[139.14114380 63.80100250]
[126.76455688 73.65648651]
[136.29603577 85.23883057]
[151.01564026 82.35205841]
[165.73522949 79.46528625]
[180.45483398 76.57851410]
[195.17442322 73.69173431]
[209.89402771 70.80496216]
[224.54809570 67.60214996]
[239.12986755 64.08477783]
[253.71165466 60.56740570]
[268.29342651 57.05003738]
[275.09335327 42.96830750]
[289.37509155 36.59915924]
[304.39523315 40.94991302]
[313.06173706 53.96627045]
[311.28256226 69.50231171]
[299.89773560 80.22238159]
[284.28286743 81.06480408]
[271.81079102 71.63181305]
[257.22900391 75.14917755]
[242.64724731 78.66654968]
[228.06547546 82.18392181]
[225.92578125 84.97939301]
[222.32843018 86.87995911]
[217.70756531 87.21298218]
[212.78079224 85.52455902]
[198.06120300 88.41133118]
[183.34159851 91.29811096]
[168.62200928 94.18488312]
[153.90240479 97.07165527]
[139.18281555 99.95842743]
[137.00889587 107.13645935]
[151.36494446 111.48429108]
[166.36192322 111.18309021]
[171.28268433 125.35298920]
[159.32688904 134.41163635]
[147.01712036 125.84034729]
[132.66105652 121.49251556]
[130.48713684 128.67053223]
[141.13171387 139.23902893]
[151.77629089 149.80752563]
[167.02085876 154.03997803]
[170.60116577 168.49787903]
[181.24574280 179.06637573]
[191.89031982 189.63487244]
[202.53488159 200.20335388]
[213.17945862 210.77185059]
[228.98075867 210.46455383]
[240.31318665 221.48052979]
[240.45341492 237.28419495]
[229.31823730 248.49951172]
[213.51397705 248.47265625]
[202.41700745 237.21952820]
[202.61096191 221.41642761]
[191.96640015 210.84793091]
[181.32182312 200.27943420]
[170.67724609 189.71093750]
[160.03268433 179.14244080]
[145.54948425 175.66592407]
[141.20779419 160.45210266]
[130.56321716 149.88360596]
[119.91864777 139.31510925]
[106.02977753 144.98072815]
[105.81460571 159.97918701]
[105.59943390 174.97764587]
[105.38426208 189.97610474]
[105.16909790 204.97456360]
[108.17366791 213.59426880]
[104.84172058 220.18621826]
[104.41143036 235.18003845]
[103.98113251 250.17385864]
[116.09822083 259.68606567]
[120.24237061 274.33801270]
[115.02598572 288.45373535]
[102.64613342 296.69250488]
[102.21583557 311.68634033]
[101.78553772 326.68014526]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 218]
[4 217]
[5 216]
[9 212]
[10 211]
[11 210]
[12 208]
[13 207]
[14 206]
[15 205]
[16 204]
[17 50]
[18 49]
[19 48]
[20 46]
[21 45]
[22 44]
[24 42]
[25 41]
[26 40]
[29 39]
[30 38]
[31 37]
[32 36]
[52 67]
[53 66]
[54 65]
[55 64]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[104 142]
[106 140]
[107 139]
[108 138]
[109 137]
[110 136]
[111 135]
[114 133]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
[143 172]
[144 171]
[145 170]
[146 169]
[147 168]
[148 167]
[149 163]
[150 162]
[151 161]
[152 160]
[180 203]
[181 202]
[182 201]
[184 199]
[185 198]
[186 197]
[187 196]
[188 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
