%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:16:58 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUUUUAGUCCCCUUUCGCGCUUGCGUCAGGGGGUGAUGGUGUUUAAUACGUCAGCUCAAAGGGUGUAAACCCCUUUAGCGUCCCCAGUCGUGUAGGCCUCACGUUACCUAUUCGGAGCGGGACCCUUUUGGUGUAAGCACUAGUACCAUAGAGGGGACGGUCCAUUCA\
) } def
/len { sequence length } bind def

/coor [
[127.27704620 581.44433594]
[115.82878876 571.57373047]
[107.79996490 558.76635742]
[103.90448761 544.16094971]
[104.48875427 529.05633545]
[109.50080109 514.79553223]
[118.49495697 502.64657593]
[130.67147827 493.68981934]
[144.94763184 488.72164917]
[144.39660645 473.73175049]
[143.84556580 458.74188232]
[143.29454041 443.75201416]
[142.74349976 428.76214600]
[142.19247437 413.77224731]
[141.64143372 398.78237915]
[141.09040833 383.79251099]
[140.53938293 368.80264282]
[134.76544189 359.96081543]
[138.30650330 348.62847900]
[128.37429810 337.52890015]
[133.46028137 322.54745483]
[130.71997070 307.79989624]
[127.97966766 293.05230713]
[125.23935699 278.30474854]
[122.49905396 263.55718994]
[119.75874329 248.80961609]
[117.01844025 234.06205750]
[114.27812958 219.31448364]
[111.53782654 204.56692505]
[108.79751587 189.81935120]
[106.05721283 175.07179260]
[103.31690216 160.32421875]
[100.57659912 145.57666016]
[97.83628845 130.82908630]
[95.09598541 116.08152008]
[84.06012726 105.92229462]
[69.13663483 104.40919495]
[54.21314621 102.89608765]
[39.28965759 101.38298798]
[24.36617088 99.86988831]
[15.44936562 112.37532806]
[1.46781421 118.73236084]
[-13.81751728 117.23095703]
[-26.29495239 108.27500153]
[-32.60812378 94.27359009]
[-31.05881691 78.99304199]
[-22.06379128 66.54373932]
[-8.04266167 60.27448654]
[7.23295689 61.87168121]
[19.65400124 70.90568542]
[25.87927246 84.94639587]
[40.80276108 86.45950317]
[55.72624969 87.97260284]
[70.64974213 89.48570251]
[85.57322693 90.99880981]
[93.07322693 78.00843048]
[84.30110168 65.84085846]
[75.52896881 53.67329025]
[67.94188690 48.51700211]
[66.70987701 41.20064545]
[58.16275787 28.87397766]
[49.61563873 16.54730988]
[41.06851578 4.22064304]
[32.52139664 -8.10602379]
[23.97427559 -20.43269157]
[8.38706684 -21.68686676]
[-2.71089911 -32.70363235]
[-4.07950306 -48.28121185]
[4.92746782 -61.06434631]
[20.05719757 -65.01722717]
[34.16588974 -58.27342987]
[40.59185410 -44.01716995]
[36.30094147 -28.97981262]
[44.84806442 -16.65314484]
[53.39518356 -4.32647753]
[61.94230652 8.00018978]
[70.48942566 20.32685661]
[79.03654480 32.65352249]
[87.69654083 44.90115738]
[96.46866608 57.06872940]
[105.24079895 69.23629761]
[120.23826599 69.51186371]
[129.45146179 57.67475128]
[138.66464233 45.83764648]
[147.87783813 34.00053787]
[157.09103394 22.16342926]
[152.94416809 7.32733488]
[158.26620483 -6.93903494]
[170.81980896 -15.23787785]
[185.67512512 -14.56142426]
[194.88832092 -26.39853096]
[204.10151672 -38.23563766]
[206.47193909 -53.87826157]
[220.39500427 -59.16952133]
[229.60820007 -71.00662994]
[238.82138062 -82.84373474]
[248.03457642 -94.68083954]
[257.24777222 -106.51795197]
[251.39381409 -120.71748352]
[253.43980408 -135.93948364]
[262.83538818 -148.08932495]
[277.05322266 -153.89874268]
[292.26873779 -151.80503845]
[304.38906860 -142.37141418]
[310.15386963 -128.13546753]
[308.01248169 -112.92658234]
[298.54092407 -100.83588409]
[284.28695679 -95.11571503]
[269.08486938 -97.30476379]
[259.87167358 -85.46765137]
[250.65849304 -73.63054657]
[241.44529724 -61.79343796]
[232.23211670 -49.95632935]
[230.52067566 -35.16037369]
[215.93861389 -29.02244949]
[206.72543335 -17.18534088]
[197.51223755 -5.34823370]
[201.81475830 8.88645458]
[196.85157776 23.09317589]
[184.32824707 31.75454712]
[168.92813110 31.37661934]
[159.71495056 43.21372604]
[150.50175476 55.05083466]
[141.28855896 66.88793945]
[132.07537842 78.72505188]
[109.84355164 113.34121704]
[112.58385468 128.08877563]
[115.32416534 142.83634949]
[118.06446838 157.58390808]
[120.80477905 172.33148193]
[123.54508209 187.07904053]
[126.28539276 201.82661438]
[129.02569580 216.57417297]
[131.76600647 231.32174683]
[134.50631714 246.06930542]
[137.24661255 260.81689453]
[139.98692322 275.56445312]
[142.72723389 290.31201172]
[145.46754456 305.05957031]
[148.20783997 319.80715942]
[158.33604431 331.96157837]
[153.05406189 345.88815308]
[161.25025940 333.32540894]
[174.77299500 326.83422852]
[189.70153809 328.29663086]
[201.70755005 337.28857422]
[207.31005859 351.20303345]
[204.88468933 366.00564575]
[195.13462830 377.40463257]
[180.88679504 382.09494019]
[166.27215576 378.71676636]
[155.52925110 368.25161743]
[156.08027649 383.24148560]
[156.63131714 398.23135376]
[157.18234253 413.22122192]
[157.73338318 428.21109009]
[158.28440857 443.20098877]
[158.83544922 458.19085693]
[159.38647461 473.18072510]
[159.93751526 488.17059326]
[174.53990173 492.07720947]
[187.34118652 500.11578369]
[197.20306396 511.57156372]
[203.24862671 525.42590332]
[204.94032288 540.44683838]
[202.12770081 555.29882812]
[195.06088257 568.66113281]
[184.36824036 579.34564209]
[171.00054932 586.40228271]
[156.14645386 589.20355225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 160]
[10 159]
[11 158]
[12 157]
[13 156]
[14 155]
[15 154]
[16 153]
[17 152]
[19 142]
[21 140]
[22 139]
[23 138]
[24 137]
[25 136]
[26 135]
[27 134]
[28 133]
[29 132]
[30 131]
[31 130]
[32 129]
[33 128]
[34 127]
[35 126]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[56 81]
[57 80]
[58 79]
[60 78]
[61 77]
[62 76]
[63 75]
[64 74]
[65 73]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[90 117]
[91 116]
[92 115]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
