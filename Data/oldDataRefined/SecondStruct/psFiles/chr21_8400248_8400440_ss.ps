%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:20:13 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGUGGGGUGCAGAGCAGCGCGCGCGCAGGCGACCCCCGCCCCUCGCCAGCCCGCCGCCGCCAGCCGCCCGCCGCCCCGCCCCGCCAAGCAGGGGGGCGGGAUGGGGGGGCCGGGGCAGGCGGGGGGCAAGGGGGGAGGAGGAGCCGCGCGCCGCCGCCGCCGCCGUCCGCCGCCUCCCCGGCGCCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[146.20016479 207.60995483]
[139.41195679 194.23384094]
[126.75260925 186.38591003]
[127.40704346 170.57824707]
[120.61884308 157.20213318]
[113.83063507 143.82603455]
[107.04242706 130.44992065]
[100.25422668 117.07381439]
[90.44863892 116.83848572]
[81.26138306 110.82753754]
[73.62157440 123.73619843]
[65.98177338 136.64485168]
[58.34197235 149.55351257]
[62.50966644 164.79837036]
[54.60446930 178.48352051]
[39.31639481 182.48980713]
[25.71558571 174.44036865]
[21.87116051 159.11079407]
[30.06394958 145.59584045]
[45.43331528 141.91371155]
[53.07312012 129.00505066]
[60.71292114 116.09639740]
[68.35272217 103.18773651]
[70.41091919 88.32961273]
[66.56774902 73.83029938]
[62.72458267 59.33098984]
[58.88141632 44.83167648]
[55.03824997 30.33236313]
[51.19508362 15.83305073]
[45.96430588 8.32681656]
[47.40910721 1.06780314]
[43.80123520 -13.49184132]
[40.19335938 -28.05148506]
[26.94084358 -36.23736191]
[23.48935509 -51.05430984]
[31.37500763 -63.63811111]
[27.64936638 -78.16806793]
[23.80619812 -92.66737366]
[19.84576035 -107.13509369]
[15.76830959 -121.57027435]
[10.41666985 -128.99082947]
[11.74373627 -136.27227783]
[7.90056992 -150.77159119]
[4.05740356 -165.27090454]
[0.21423687 -179.77021790]
[-3.62892985 -194.26953125]
[-14.64372253 -205.62667847]
[-10.42555523 -219.91151428]
[-14.26872253 -234.41082764]
[-18.11188889 -248.91014099]
[-28.85881042 -256.05905151]
[-31.75583458 -268.22537231]
[-25.77913857 -278.75256348]
[-29.38701248 -293.31219482]
[-32.99488831 -307.87185669]
[-36.60276031 -322.43148804]
[-40.21063614 -336.99114990]
[-43.81851196 -351.55078125]
[-47.54415131 -366.08074951]
[-51.38731766 -380.58004761]
[-55.23048782 -395.07937622]
[-60.46126175 -402.58560181]
[-59.01646042 -409.84460449]
[-62.62433624 -424.40426636]
[-73.45377350 -435.93829346]
[-69.00484467 -450.15292358]
[-72.61272430 -464.71258545]
[-76.22059631 -479.27221680]
[-81.32913971 -486.86218262]
[-79.76697540 -494.09683228]
[-83.13861847 -508.71298218]
[-86.51025391 -523.32916260]
[-91.49521637 -531.00085449]
[-89.81611633 -538.20922852]
[-92.95062256 -552.87811279]
[-96.08513641 -567.54693604]
[-106.53540802 -579.42559814]
[-101.62851715 -593.48870850]
[-104.76303101 -608.15753174]
[-107.89754486 -622.82641602]
[-111.03205872 -637.49523926]
[-114.16657257 -652.16406250]
[-117.30107880 -666.83288574]
[-120.43559265 -681.50177002]
[-123.57010651 -696.17059326]
[-128.43019104 -703.92199707]
[-126.63458252 -711.10229492]
[-129.53115845 -725.81994629]
[-141.99752808 -735.91790771]
[-141.73118591 -751.95874023]
[-128.93646240 -761.63732910]
[-113.42834473 -757.52899170]
[-107.10335541 -742.78540039]
[-114.81347656 -728.71649170]
[-111.91690826 -713.99884033]
[-108.90126801 -699.30511475]
[-105.76675415 -684.63629150]
[-102.63224030 -669.96740723]
[-99.49773407 -655.29858398]
[-96.36322021 -640.62976074]
[-93.22870636 -625.96087646]
[-90.09419250 -611.29205322]
[-86.95967865 -596.62322998]
[-76.73361206 -585.79376221]
[-81.41629791 -570.68145752]
[-78.28178406 -556.01263428]
[-75.14727783 -541.34375000]
[-71.89409637 -526.70080566]
[-68.52245331 -512.08465576]
[-65.15081787 -497.46847534]
[-61.66094971 -482.88009644]
[-58.05307770 -468.32043457]
[-54.44520187 -453.76080322]
[-43.87382126 -443.26818848]
[-48.06468964 -428.01211548]
[-44.45681763 -413.45248413]
[-40.73117447 -398.92251587]
[-36.88800812 -384.42321777]
[-33.04484177 -369.92388916]
[-28.28536415 -364.25573730]
[-29.25886536 -355.15866089]
[-25.65099144 -340.59899902]
[-22.04311752 -326.03936768]
[-18.43524361 -311.47973633]
[-14.82736874 -296.92007446]
[-11.21949387 -282.36044312]
[1.61651492 -270.40255737]
[-3.61257601 -252.75331116]
[0.23059052 -238.25399780]
[4.07375717 -223.75468445]
[14.81366158 -213.43461609]
[10.87038326 -198.11270142]
[14.71354961 -183.61338806]
[18.55671692 -169.11407471]
[22.39988327 -154.61476135]
[26.24304962 -140.11544800]
[30.20348740 -125.64772797]
[34.28094101 -111.21254730]
[39.13157654 -105.62219238]
[38.30551147 -96.51054382]
[42.14867783 -82.01123047]
[46.90815353 -76.34306335]
[45.93465424 -67.24598694]
[58.78362656 -59.80021667]
[62.64993286 -45.08605957]
[54.75300598 -31.65935898]
[58.36087799 -17.09971619]
[61.96875381 -2.54007125]
[65.69439697 11.98988342]
[69.53755951 26.48919678]
[73.38072968 40.98851013]
[77.22389221 55.48782349]
[81.06706238 69.98713684]
[84.91023254 84.48645020]
[104.48323822 80.38602448]
[117.47138977 93.62603760]
[113.63033295 110.28560638]
[120.41854095 123.66171265]
[127.20674133 137.03782654]
[133.99494934 150.41392517]
[140.78315735 163.79003906]
[153.92803955 172.59472656]
[152.78807068 187.44563293]
[159.57627869 200.82174683]
[166.58018494 214.08618164]
[173.79798889 227.23545837]
[181.01577759 240.38473511]
[188.23356628 253.53401184]
[203.14103699 258.05120850]
[210.27357483 271.48925781]
[205.87524414 285.67343140]
[213.09303284 298.82269287]
[220.31083679 311.97198486]
[227.52862549 325.12124634]
[234.74641418 338.27053833]
[249.98847961 342.44842529]
[257.73931885 356.22158813]
[253.40052795 371.41864014]
[239.54618835 379.02343750]
[224.39585876 374.52420044]
[216.93795776 360.59024048]
[221.59712219 345.48831177]
[214.37933350 332.33905029]
[207.16154480 319.18975830]
[199.94375610 306.04049683]
[192.72596741 292.89120483]
[178.39819336 288.98602295]
[170.89102173 275.75360107]
[175.08427429 260.75180054]
[167.86648560 247.60252380]
[160.64869690 234.45324707]
[153.43090820 221.30397034]
[149.16423035 219.12948608]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[4 161]
[5 160]
[6 159]
[7 158]
[8 157]
[10 23]
[11 22]
[12 21]
[13 20]
[24 154]
[25 153]
[26 152]
[27 151]
[28 150]
[29 149]
[31 148]
[32 147]
[33 146]
[36 143]
[37 141]
[38 140]
[39 138]
[40 137]
[42 136]
[43 135]
[44 134]
[45 133]
[46 132]
[48 130]
[49 129]
[50 128]
[53 126]
[54 125]
[55 124]
[56 123]
[57 122]
[58 121]
[59 119]
[60 118]
[61 117]
[63 116]
[64 115]
[66 113]
[67 112]
[68 111]
[70 110]
[71 109]
[72 108]
[74 107]
[75 106]
[76 105]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 98]
[84 97]
[85 96]
[87 95]
[88 94]
[165 192]
[166 191]
[167 190]
[168 189]
[171 186]
[172 185]
[173 184]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
