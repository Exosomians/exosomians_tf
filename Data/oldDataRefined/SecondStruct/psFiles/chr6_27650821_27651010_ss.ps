%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:06 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUAUAUUCUAGGAAACUAAAUCCACGAACAAGUAUAUGUUUUCAGGAUAGACCAAGUUUAUCUCUGAGAGUCCUAGUCCUUGUUCUGCAUUCUUCCCAUUGGUGAACAAAGGCGGACCAAAACUAGGUCCCUGGAAAGCGCACAAUCCGCUUGCACUAUUGGUGAUGUGAUGCCUUUGUUGGGACGAC\
) } def
/len { sequence length } bind def

/coor [
[-135.45623779 128.58557129]
[-138.95323181 134.44766235]
[-143.18782043 139.79518127]
[-148.08544922 144.53602600]
[-153.56018066 148.58876038]
[-159.51615906 151.88397217]
[-165.84931946 154.36552429]
[-172.44917297 155.99150085]
[-179.20079041 156.73486328]
[-185.98675537 156.58395386]
[-192.68919373 155.54266357]
[-199.19187927 153.63029480]
[-205.38221741 150.88130188]
[-214.15902710 163.04548645]
[-222.93583679 175.20968628]
[-218.92771912 190.32487488]
[-225.61993408 204.45811462]
[-239.85263062 210.93609619]
[-254.90556335 206.70014954]
[-263.67120361 193.75033569]
[-262.01065063 178.20117188]
[-250.70802307 167.39448547]
[-235.10003662 166.43287659]
[-226.32322693 154.26867676]
[-217.54641724 142.10449219]
[-227.41836548 128.76225281]
[-232.52125549 112.96886444]
[-232.32243347 96.37274170]
[-246.55747986 91.64373016]
[-260.79251099 86.91471863]
[-275.02755737 82.18569946]
[-289.26260376 77.45668793]
[-303.49765015 72.72767639]
[-317.73269653 67.99866486]
[-333.21575928 76.12329865]
[-349.46722412 70.65220642]
[-356.59786987 55.42937469]
[-370.90878296 50.93513107]
[-386.39318848 54.18222427]
[-396.21752930 42.98707962]
[-410.56491089 38.61067963]
[-424.94778442 34.35242081]
[-439.33068848 30.09416199]
[-453.71356201 25.83590317]
[-468.09643555 21.57764435]
[-482.47930908 17.31938553]
[-496.86218262 13.06112576]
[-511.27960205 8.92129612]
[-525.73059082 4.90017366]
[-540.18157959 0.87905180]
[-554.63250732 -3.14207006]
[-569.08349609 -7.16319227]
[-583.53448486 -11.18431377]
[-597.98541260 -15.20543575]
[-614.86572266 -13.62647629]
[-621.05584717 -29.40995026]
[-607.60284424 -39.72751236]
[-593.96429443 -29.65640831]
[-579.51336670 -25.63528633]
[-565.06237793 -21.61416435]
[-550.61138916 -17.59304237]
[-536.16040039 -13.57191944]
[-521.70947266 -9.55079746]
[-507.25848389 -5.52967596]
[-499.95919800 -6.76754093]
[-492.60394287 -1.32175362]
[-478.22106934 2.93650508]
[-463.83816528 7.19476414]
[-449.45529175 11.45302296]
[-435.07241821 15.71128178]
[-420.68954468 19.96953964]
[-406.30667114 24.22779846]
[-398.98800659 23.11015511]
[-391.72329712 28.67618179]
[-377.26251221 25.10763168]
[-366.41452026 36.62423325]
[-352.10363770 41.11847687]
[-341.61831665 33.61232376]
[-328.52880859 33.51979446]
[-317.61853027 41.09900665]
[-313.00369263 53.76362228]
[-298.76864624 58.49263382]
[-284.53359985 63.22164917]
[-270.29855347 67.95066071]
[-256.06350708 72.67967224]
[-241.82847595 77.40868378]
[-227.59342957 82.13769531]
[-214.65667725 65.72830200]
[-196.22628784 55.80402756]
[-175.33207703 54.02969742]
[-155.42221069 60.72758484]
[-139.79412842 74.81936646]
[-131.04843140 93.99960327]
[-116.08950043 92.89037323]
[-103.96923828 84.23308563]
[-89.63468933 90.92869568]
[-74.67575836 89.81945801]
[-59.71682739 88.71022034]
[-44.75789642 87.60099030]
[-29.79896545 86.49175262]
[-41.13476944 76.66833496]
[-43.64095306 61.87918091]
[-36.17446899 48.86950684]
[-22.14071655 43.57291794]
[-7.94038057 48.40514755]
[-0.05011730 61.16225433]
[-2.06861281 76.02582550]
[-13.07512760 86.21665192]
[1.91219246 86.83328247]
[16.89951324 87.44991302]
[31.88683319 88.06654358]
[46.87415314 88.68317413]
[61.86147308 89.29980469]
[76.84879303 89.91643524]
[91.83611298 90.53306580]
[106.18348694 86.15666962]
[118.27508545 77.28011322]
[130.36668396 68.40356445]
[142.45829773 59.52701187]
[154.54989624 50.65046310]
[155.38310242 35.03509140]
[166.09646606 23.64396095]
[181.63145447 21.85561180]
[194.65292358 30.51444817]
[199.01252747 45.53203201]
[192.65180969 59.81752014]
[178.57408142 66.62574005]
[163.42645264 62.74206161]
[151.33483887 71.61861420]
[139.24324036 80.49516296]
[127.15164185 89.37171936]
[115.06003571 98.24826813]
[117.07060242 105.47375488]
[129.57171631 97.18386841]
[141.31890869 106.51142883]
[136.07792664 120.56604004]
[121.09172058 119.92472839]
[123.10227966 127.15021515]
[138.04093933 128.50534058]
[152.97961426 129.86045837]
[167.91827393 131.21557617]
[182.85693359 132.57069397]
[193.82141113 121.42106628]
[209.39237976 119.97925568]
[222.21771240 128.92604065]
[226.24166870 144.03701782]
[219.56427002 158.17726135]
[205.33836365 164.67016602]
[190.28100586 160.44998169]
[181.50181580 147.50935364]
[166.56315613 146.15423584]
[151.62448120 144.79911804]
[136.68582153 143.44400024]
[121.74716187 142.08888245]
[119.26591492 149.16654968]
[111.82215881 170.39955139]
[124.33687592 178.66888428]
[136.85159302 186.93821716]
[149.36630249 195.20756531]
[165.91439819 198.89495850]
[166.95207214 215.81712341]
[150.97850037 221.49876404]
[141.09696960 207.72227478]
[128.58224487 199.45294189]
[116.06753540 191.18360901]
[103.55281830 182.91426086]
[88.58480835 181.93519592]
[75.08010101 175.40657043]
[65.01571655 164.28414917]
[59.86502457 150.19619751]
[60.38205338 135.20510864]
[66.49111938 121.50550079]
[77.29788208 111.10291290]
[91.21948242 105.52038574]
[76.23216248 104.90375519]
[61.24484253 104.28712463]
[46.25752258 103.67049408]
[31.27020264 103.05386353]
[16.28288078 102.43723297]
[1.29556143 101.82060242]
[-13.69175911 101.20397186]
[-28.68972969 101.45068359]
[-43.64865875 102.55991364]
[-58.60758972 103.66915131]
[-73.56652069 104.77838898]
[-88.52545166 105.88761902]
[-101.71567535 114.62424469]
[-114.98026276 107.84930420]
[-129.93919373 108.95853424]
[-130.90853882 115.72976685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 25]
[14 24]
[15 23]
[28 87]
[29 86]
[30 85]
[31 84]
[32 83]
[33 82]
[34 81]
[37 77]
[38 76]
[40 74]
[41 72]
[42 71]
[43 70]
[44 69]
[45 68]
[46 67]
[47 66]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[54 58]
[93 189]
[94 188]
[96 186]
[97 185]
[98 184]
[99 183]
[100 182]
[108 181]
[109 180]
[110 179]
[111 178]
[112 177]
[113 176]
[114 175]
[115 174]
[116 132]
[117 131]
[118 130]
[119 129]
[120 128]
[138 154]
[139 153]
[140 152]
[141 151]
[142 150]
[156 166]
[157 165]
[158 164]
[159 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
