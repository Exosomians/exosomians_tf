%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:45 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUAGGGGCCUCCCCCACGUGGCAAGGACCUCCAUGACGUUAUGGUCCAGCUACGCACCUCACCUGCCUCGUUCGAGGAUAAGGUAGAGGGACGAGGUUUUUAGGUAAAUUAUAUAACAGGAGCCUAUCUCCUGCAUAGUCUAUAAUUUGACUAUUCUUGUCUAUGAUGUGAACUAGAAUCGGUUUUCCGGCUCUUCGCUA\
) } def
/len { sequence length } bind def

/coor [
[162.90901184 172.25982666]
[168.13746643 161.57423401]
[160.60398865 148.60324097]
[153.07051086 135.63224792]
[145.53701782 122.66126251]
[130.59132385 123.93647766]
[125.36419678 137.99624634]
[120.13706970 152.05601501]
[114.90993500 166.11578369]
[118.17848206 182.18589783]
[105.71800995 192.84745789]
[90.34679413 187.13276672]
[87.87741852 170.92059326]
[100.85016632 160.88865662]
[106.07730103 146.82888794]
[111.30442810 132.76911926]
[116.53155518 118.70934296]
[98.76976013 123.88753510]
[83.17491913 115.49304962]
[69.41875458 121.47369385]
[55.66259766 127.45433807]
[41.90644073 133.43498230]
[28.15028191 139.41563416]
[14.39412403 145.39627075]
[8.94640923 157.09214783]
[-2.63936996 161.78852844]
[-13.94389153 157.47210693]
[-27.79095459 163.23915100]
[-41.63801575 169.00619507]
[-55.48508072 174.77325439]
[-69.33214569 180.54029846]
[-69.65914917 195.76570129]
[-76.15648651 209.53903198]
[-87.69845581 219.47396851]
[-102.28533173 223.84921265]
[-117.38986206 221.90675354]
[-130.39508057 213.98312378]
[-139.04777527 201.45112610]
[-141.84878540 186.48200989]
[-138.31285095 171.66928101]
[-129.05256653 159.57931519]
[-115.67235565 152.30679321]
[-100.49040222 151.11169434]
[-86.13708496 156.20111084]
[-75.09918976 166.69323730]
[-61.25212860 160.92619324]
[-47.40506744 155.15913391]
[-33.55800247 149.39208984]
[-19.71094131 143.62504578]
[-9.82560062 129.12844849]
[8.41347980 131.64012146]
[22.16963768 125.65946960]
[35.92579651 119.67882538]
[49.68195343 113.69818115]
[63.43811417 107.71753693]
[77.19426727 101.73689270]
[87.34147644 80.11761475]
[111.90893555 78.85456848]
[124.96058655 100.54875183]
[113.99115753 90.31783295]
[103.02173615 80.08691406]
[92.05230713 69.85599518]
[81.00404358 59.71026230]
[69.87760925 49.65032196]
[58.75117111 39.59038162]
[47.62473297 29.53044319]
[27.74764061 26.19950485]
[22.60076332 7.56476307]
[11.16833305 -2.14603114]
[-0.26409775 -11.85682583]
[-11.69652843 -21.56761932]
[-27.91748428 -23.97855377]
[-33.68754196 -39.32907486]
[-23.07095909 -51.82788086]
[-6.98916626 -48.61727524]
[-1.98573434 -33.00004959]
[9.44669628 -23.28925705]
[20.87912750 -13.57846165]
[32.31155777 -3.86766768]
[42.38813782 -5.60995483]
[51.95989227 -1.42723858]
[57.76599884 7.51925659]
[57.68467331 18.40400505]
[68.81111145 28.46394348]
[79.93754578 38.52388382]
[91.06398773 48.58382416]
[98.13838959 50.73929596]
[102.28322601 58.88656616]
[113.25265503 69.11748505]
[124.22207642 79.34840393]
[135.19151306 89.57932281]
[150.19105530 89.46325684]
[161.00083923 79.06380463]
[171.81062317 68.66436005]
[182.62042236 58.26491165]
[193.43020630 47.86546707]
[204.23999023 37.46601868]
[215.04977417 27.06657028]
[200.57752991 31.01045609]
[187.95976257 39.12165833]
[173.66520691 43.66762543]
[158.68005371 44.33473969]
[144.03808594 41.07697296]
[130.74945068 34.11907959]
[119.73091888 23.94106865]
[111.74263763 11.24511433]
[107.33569336 -3.09290838]
[106.81414032 -18.08383751]
[110.21394348 -32.69347000]
[117.30055237 -45.91390610]
[127.58508301 -56.83308029]
[140.35801697 -64.69770050]
[154.73815918 -68.96519470]
[169.73344421 -69.34114838]
[184.30937195 -65.79962921]
[197.46037292 -58.58496475]
[208.27915955 -48.19488144]
[216.02006531 -35.34457016]
[211.74131775 -20.96777153]
[222.38887024 -31.53325844]
[233.03643799 -42.09874344]
[243.68399048 -52.66423035]
[254.33154297 -63.22971725]
[264.97909546 -73.79520416]
[266.47879028 -89.76800537]
[279.98022461 -98.43347931]
[295.12631226 -93.14421082]
[300.29821777 -77.95767975]
[291.52853394 -64.52368164]
[275.54458618 -63.14764404]
[264.89703369 -52.58215714]
[254.24948120 -42.01667023]
[243.60191345 -31.45118523]
[232.95436096 -20.88570023]
[222.30680847 -10.32021332]
[229.23048401 2.98702550]
[236.15353394 16.29308891]
[250.91661072 13.63757896]
[265.67968750 10.98206902]
[280.44274902 8.32656002]
[295.20581055 5.67105055]
[309.96890259 3.01554084]
[316.60162354 -11.01251602]
[330.22924805 -18.43327522]
[345.61166382 -16.39330292]
[356.83398438 -5.67701006]
[359.58102417 9.59496880]
[352.79650879 23.55024719]
[339.08917236 30.82273674]
[323.72982788 28.61601448]
[312.62438965 17.77861214]
[297.86132812 20.43412209]
[283.09826660 23.08963013]
[268.33520508 25.74514008]
[253.57211304 28.40065002]
[238.80905151 31.05615997]
[225.44921875 37.87635803]
[214.63943481 48.27580261]
[203.82965088 58.67525101]
[193.01986694 69.07469940]
[182.21008301 79.47414398]
[171.40028381 89.87359619]
[160.59049988 100.27304077]
[158.50801086 115.12777710]
[166.04150391 128.09877014]
[173.57498169 141.06976318]
[181.10845947 154.04075623]
[199.58854675 158.18948364]
[209.01191711 174.24981689]
[203.80075073 191.79376221]
[211.73202515 204.52540588]
[219.66331482 217.25704956]
[227.59458923 229.98869324]
[232.21250916 232.44949341]
[235.12911987 236.07498169]
[236.18569946 240.02032471]
[235.58259583 243.50044250]
[242.91444397 256.58645630]
[250.24629211 269.67248535]
[263.74172974 277.92987061]
[263.21264648 292.81506348]
[270.54449463 305.90109253]
[277.87634277 318.98712158]
[285.20819092 332.07312012]
[299.57223511 339.98553467]
[299.63134766 356.38458252]
[285.32470703 364.40032959]
[271.36975098 355.78686523]
[272.12216187 339.40496826]
[264.79031372 326.31896973]
[257.45846558 313.23294067]
[250.12661743 300.14691162]
[237.15562439 292.82553101]
[237.16027832 277.00433350]
[229.82843018 263.91830444]
[222.49658203 250.83229065]
[214.86294556 237.91998291]
[206.93167114 225.18833923]
[199.00038147 212.45669556]
[191.06910706 199.72505188]
[179.65313721 199.61224365]
[169.60670471 193.94142151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 167]
[3 166]
[4 165]
[5 164]
[6 17]
[7 16]
[8 15]
[9 14]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[27 49]
[28 48]
[29 47]
[30 46]
[31 45]
[59 91]
[60 90]
[61 89]
[62 88]
[63 86]
[64 85]
[65 84]
[66 83]
[68 79]
[69 78]
[70 77]
[71 76]
[92 163]
[93 162]
[94 161]
[95 160]
[96 159]
[97 158]
[98 157]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
[137 156]
[138 155]
[139 154]
[140 153]
[141 152]
[142 151]
[170 200]
[171 199]
[172 198]
[173 197]
[177 196]
[178 195]
[179 194]
[181 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
