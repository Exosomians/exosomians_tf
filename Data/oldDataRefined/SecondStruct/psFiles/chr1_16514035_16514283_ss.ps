%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:16:51 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUGGAUUCUGUGGUUGGUUCUGUGUUUGGUUAUGUUUUUUUCUAUACUGGGAACCGCAUGUCAGACAAAAACUUUGAGGUCUUUCAGUCCCCUUUCGCGCUUGCGUCAGGGGGUGAUGGUGUUUAAUACGUCAGCUCAAAGGGUGUAAACCCCUUUAGCGUCCCCAGUCGUGUAGGCCUCACGUUACCUAUUCGGAGCGGGACCCUUUUGGUGGAAGCACUAGUACCAUAGAGGGGACGGUCCAUUCA\
) } def
/len { sequence length } bind def

/coor [
[102.35585022 351.76318359]
[112.32489014 339.19345093]
[111.94793701 324.19818115]
[111.57098389 309.20294189]
[111.19403076 294.20767212]
[110.81707764 279.21240234]
[110.44013214 264.21713257]
[109.40422821 249.25294495]
[107.71138000 234.34878540]
[106.01853943 219.44461060]
[104.32569122 204.54043579]
[102.63284302 189.63627625]
[100.94000244 174.73210144]
[99.24715424 159.82792664]
[97.55430603 144.92376709]
[71.31056213 140.90066528]
[49.44589615 121.48113251]
[37.53603745 130.60008240]
[25.62618256 139.71903992]
[13.71632671 148.83799744]
[1.80647099 157.95695496]
[-10.10338497 167.07591248]
[-12.31984997 182.49424744]
[-24.52803993 191.57249451]
[-39.21340561 189.36442566]
[-51.12326431 198.48336792]
[-57.37672806 213.01626587]
[-72.18579865 214.61021423]
[-84.09565735 223.72917175]
[-96.00550842 232.84811401]
[-98.22197723 248.26644897]
[-110.43016815 257.34469604]
[-125.11553192 255.13662720]
[-126.94609833 270.83453369]
[-139.39227295 280.57458496]
[-155.06996155 278.57815552]
[-164.67785645 266.02969360]
[-162.51579285 250.37399292]
[-149.86645508 240.89930725]
[-134.23448181 243.22677612]
[-132.53556824 228.47383118]
[-120.58718872 219.05625916]
[-105.12446594 220.93826294]
[-93.21460724 211.81930542]
[-81.30475616 202.70034790]
[-75.90316010 188.81971741]
[-60.24221802 186.57351685]
[-48.33236313 177.45455933]
[-46.63344574 162.70161438]
[-34.68506241 153.28404236]
[-19.22233963 155.16604614]
[-7.31248331 146.04710388]
[4.59737253 136.92814636]
[16.50722885 127.80918884]
[28.41708374 118.69023132]
[40.32693863 109.57128143]
[37.42369843 94.85491943]
[22.94297409 90.94229889]
[13.86822128 91.72534943]
[8.30546188 86.88845825]
[-6.12495279 82.79418182]
[-19.80901718 90.23623657]
[-34.38518524 85.87848663]
[-41.39571381 72.78695679]
[-55.82612991 68.69268036]
[-70.25654602 64.59840393]
[-84.68695831 60.50412369]
[-94.77282715 71.96004486]
[-108.83375549 77.89746857]
[-124.07794189 77.13751984]
[-137.47863770 69.83108521]
[-146.37513733 57.42886734]
[-149.00102234 42.39332581]
[-144.83491516 27.70978355]
[-134.70402527 16.29367065]
[-120.61981964 10.41166019]
[-105.37874603 11.23163319]
[-92.00691986 18.59078217]
[-83.15933990 31.02794266]
[-80.59268188 46.07370758]
[-66.16226959 50.16798782]
[-51.73184967 54.26226425]
[-37.30143738 58.35654449]
[-24.46017647 50.89748001]
[-9.76735878 54.84409714]
[-2.03067374 68.36376190]
[12.39974117 72.45804596]
[26.85559654 76.46157074]
[41.33632278 80.37419891]
[50.07667923 68.18378448]
[41.72354507 55.72484589]
[33.37041092 43.26590729]
[25.01727486 30.80696869]
[16.66414070 18.34803009]
[1.41540432 15.16781330]
[-6.87837934 2.41368461]
[-3.75255585 -12.10405731]
[-12.10569000 -24.56299591]
[-20.45882416 -37.02193451]
[-35.40868759 -43.76238251]
[-36.77676773 -60.10436630]
[-23.15570259 -69.23664856]
[-8.55767632 -61.76472855]
[-7.99988604 -45.37506866]
[0.35324842 -32.91613007]
[8.70638275 -20.45719147]
[23.32353592 -17.83528519]
[31.97228432 -5.31914282]
[29.12307930 9.99489594]
[37.47621536 22.45383453]
[45.82934952 34.91277313]
[54.18248367 47.37171173]
[62.53561783 59.83065033]
[80.30149078 48.37073135]
[101.20008087 44.42259598]
[101.01158905 29.42378044]
[100.82310486 14.42496586]
[100.63461304 -0.57384998]
[100.44612122 -15.57266521]
[87.01042175 -23.01427269]
[79.10932159 -36.18500900]
[78.86818695 -51.54200745]
[86.35186768 -64.95431519]
[99.54730225 -72.81408691]
[114.90498352 -73.00708771]
[128.29377747 -65.48139954]
[136.11215210 -52.26139450]
[136.25700378 -36.90318298]
[128.68939209 -23.53805351]
[115.44493866 -15.76115608]
[115.63343048 -0.76234055]
[115.82191467 14.23647499]
[116.01040649 29.23529053]
[116.19889832 44.23410797]
[130.62931824 48.32838440]
[138.66671753 35.66346741]
[146.70411682 22.99854851]
[148.65199280 14.10078907]
[154.92292786 10.22586536]
[163.11885071 -2.33705497]
[171.31475830 -14.89997578]
[179.51068115 -27.46289635]
[187.70658875 -40.02581787]
[195.90251160 -52.58873749]
[191.18902588 -67.49903870]
[197.21017456 -81.93093872]
[211.12297058 -89.07012939]
[226.35821533 -85.54571533]
[235.72227478 -73.02180481]
[234.79374695 -57.41181564]
[224.01104736 -46.08629990]
[208.46543884 -44.39282227]
[200.26951599 -31.82990074]
[192.07360840 -19.26698112]
[183.87768555 -6.70406008]
[175.68177795 5.85886049]
[167.48585510 18.42178154]
[159.36903381 31.03594971]
[151.33163452 43.70086670]
[143.29423523 56.36578751]
[151.33163452 69.03070831]
[166.21334839 67.15071106]
[181.09507751 65.27070618]
[195.97679138 63.39070892]
[210.85852051 61.51071167]
[218.39474487 48.07525253]
[232.23535156 41.72776031]
[246.98522949 44.71195602]
[257.02932739 55.67798233]
[271.91107178 53.79798126]
[286.79278564 51.91798401]
[299.51440430 42.51207352]
[313.11105347 48.59321213]
[327.99276733 46.71321487]
[342.87448120 44.83321762]
[357.75619507 42.95321655]
[372.63793945 41.07321930]
[378.51568604 26.88352203]
[390.71060181 17.54650116]
[405.94226074 15.57376862]
[420.11346436 21.49597740]
[429.41223145 33.72008514]
[431.33718872 48.95787048]
[425.37060547 63.11043930]
[413.11740112 72.37082672]
[397.87365723 74.24803162]
[383.73986816 68.23709869]
[374.51794434 55.95494080]
[359.63619995 57.83493805]
[344.75448608 59.71493530]
[329.87277222 61.59493637]
[314.99105835 63.47493362]
[303.33386230 72.74637604]
[288.67279053 66.79970551]
[273.79104614 68.67970276]
[258.90933228 70.55970001]
[251.90791321 83.67907715]
[238.36358643 90.23766327]
[223.37924194 87.53160858]
[212.73851013 76.39243317]
[197.85679626 78.27243042]
[182.97506714 80.15242767]
[168.09335327 82.03242493]
[153.21163940 83.91242981]
[153.06898499 93.46079254]
[151.29022217 102.48382568]
[148.05038452 110.71377563]
[143.56605530 117.92704010]
[138.08560181 123.95022583]
[149.27471924 133.94039917]
[160.46383667 143.93058777]
[171.65295410 153.92076111]
[182.84207153 163.91093445]
[194.03118896 173.90112305]
[210.18765259 176.71191406]
[215.57682800 192.20025635]
[204.65480042 204.43305969]
[188.65721130 200.82626343]
[184.04100037 185.09024048]
[172.85188293 175.10005188]
[161.66276550 165.10987854]
[150.47364807 155.11970520]
[139.28453064 145.12951660]
[128.09541321 135.13934326]
[120.67662811 139.95751953]
[112.45848083 143.23091125]
[114.15132141 158.13508606]
[115.84416962 173.03926086]
[117.53701782 187.94342041]
[119.22985840 202.84759521]
[120.92270660 217.75177002]
[122.61555481 232.65592957]
[124.30839539 247.56010437]
[133.43118286 235.65318298]
[148.04981995 232.29231262]
[161.45668030 239.01959229]
[167.50013733 252.74826050]
[163.40721130 267.17907715]
[151.05589294 275.69055176]
[136.11349487 274.37728882]
[125.43539429 263.84017944]
[125.81234741 278.83544922]
[126.18929291 293.83071899]
[126.56624603 308.82598877]
[126.94319916 323.82122803]
[127.32015228 338.81649780]
[137.90815735 350.86944580]
[134.94456482 366.63641357]
[120.70278168 374.02230835]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 246]
[3 245]
[4 244]
[5 243]
[6 242]
[7 241]
[8 233]
[9 232]
[10 231]
[11 230]
[12 229]
[13 228]
[14 227]
[15 226]
[17 56]
[18 55]
[19 54]
[20 53]
[21 52]
[22 51]
[25 48]
[26 47]
[28 45]
[29 44]
[30 43]
[33 40]
[57 89]
[58 88]
[60 87]
[61 86]
[64 83]
[65 82]
[66 81]
[67 80]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[97 106]
[98 105]
[99 104]
[115 134]
[116 133]
[117 132]
[118 131]
[119 130]
[135 160]
[136 159]
[137 158]
[139 157]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
[161 204]
[162 203]
[163 202]
[164 201]
[165 200]
[169 196]
[170 195]
[171 194]
[173 192]
[174 191]
[175 190]
[176 189]
[177 188]
[209 224]
[210 223]
[211 222]
[212 221]
[213 220]
[214 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
