%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:17 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAAGGCACGAAGGAAGCUAUCGAGUCGACCAUCUCGCCUCCUGACAUCAUGAAUUACACACCAGUAGGAAUCCAGCGACCAAGCUAAGGCCGAGCUUCCUCUGCGACGACAAAACC\
) } def
/len { sequence length } bind def

/coor [
[87.89478302 372.17807007]
[82.25565338 358.15338135]
[81.00255585 343.08947754]
[84.24692535 328.32583618]
[91.70026398 315.17520142]
[102.69983673 304.80694580]
[116.26755524 298.14297485]
[113.90148163 283.33078003]
[111.53541565 268.51855469]
[107.32028198 262.33224487]
[109.30776978 253.28457642]
[107.33351898 238.41506958]
[103.28315735 232.11964417]
[105.50878143 223.12759399]
[103.92772675 208.21115112]
[102.34667206 193.29470825]
[100.76561737 178.37826538]
[99.18456268 163.46182251]
[97.60350800 148.54537964]
[96.02245331 133.62893677]
[78.39830780 128.31703186]
[65.36957550 114.04010773]
[61.31131744 94.20148468]
[46.32307816 93.60763550]
[31.33483887 93.01379395]
[16.34659767 92.41995239]
[6.84213924 104.68554688]
[-8.06604004 108.98970795]
[-22.64544106 103.67739868]
[-31.28998756 90.79129791]
[-30.67567444 75.28639221]
[-21.03871536 63.12461853]
[-6.08472157 58.98243713]
[8.43619347 64.45259857]
[16.94044113 77.43170929]
[31.92868233 78.02555084]
[46.91692352 78.61940002]
[61.90516281 79.21324158]
[71.25750732 67.48577118]
[67.34336090 53.00545883]
[63.42920685 38.52514648]
[52.35890579 27.22209167]
[56.50704193 12.91676903]
[52.59289169 -1.56354201]
[48.67874146 -16.04385376]
[33.56890106 -16.78412819]
[19.42807198 -22.15926361]
[7.64162016 -31.64265633]
[-0.63573414 -44.30522156]
[-4.59306097 -58.90641403]
[-3.84266186 -74.01574707]
[1.54194701 -88.15297699]
[11.03323650 -99.93307495]
[23.70134735 -108.20194244]
[38.30518341 -112.14948273]
[53.41401672 -111.38895416]
[67.54763031 -105.99488068]
[79.32136536 -96.49569702]
[87.58174133 -83.82205200]
[91.51949310 -69.21556854]
[90.74884796 -54.10725021]
[85.34529877 -39.97725296]
[75.83823395 -28.20988846]
[63.15904999 -19.95800591]
[67.07320404 -5.47769356]
[70.98735809 9.00261784]
[81.77768707 19.26994324]
[77.90951538 34.61099625]
[81.82366943 49.09130478]
[85.73782349 63.57161713]
[98.78625488 62.21305466]
[111.09569550 65.23569489]
[121.28929901 71.99576569]
[128.33044434 81.44973755]
[142.38783264 76.21620941]
[156.30216980 70.61343384]
[170.06376648 64.64531708]
[183.82536316 58.67719650]
[189.39784241 43.88790512]
[203.83003235 37.44683456]
[218.55958557 43.17535400]
[224.84770203 57.67483902]
[218.96377563 72.34299469]
[204.39862061 78.47747803]
[189.79348755 72.43878937]
[176.03189087 78.40691376]
[162.27029419 84.37503052]
[159.67950439 88.52353668]
[154.39659119 91.01865387]
[147.62136841 90.27359772]
[133.56398010 95.50712585]
[133.11470032 107.08116913]
[128.79119873 117.82675171]
[121.09929657 126.48670959]
[110.93889618 132.04788208]
[112.51995087 146.96432495]
[114.10100555 161.88076782]
[115.68206024 176.79721069]
[117.26311493 191.71365356]
[118.84416962 206.63009644]
[120.42522430 221.54653931]
[122.20302582 236.44081116]
[124.17727661 251.31031799]
[126.34762573 266.15246582]
[128.71369934 280.96469116]
[131.07977295 295.77691650]
[146.04832458 297.88253784]
[159.73051453 304.30819702]
[170.90972900 314.48251343]
[178.59193420 327.50076294]
[182.09399414 342.20544434]
[181.10455322 357.28894043]
[175.71156311 371.41009521]
[166.39456177 383.31326294]
[153.98204041 391.94000244]
[139.57768250 396.52322388]
[124.46233368 396.65539551]
[109.98002625 392.32479858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 106]
[8 105]
[9 104]
[11 103]
[12 102]
[14 101]
[15 100]
[16 99]
[17 98]
[18 97]
[19 96]
[20 95]
[23 38]
[24 37]
[25 36]
[26 35]
[39 70]
[40 69]
[41 68]
[43 66]
[44 65]
[45 64]
[74 91]
[75 90]
[76 87]
[77 86]
[78 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
