%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:32 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAUAGGCGGGGCCACCGGAUUACCUAUUCCGUAACCGGAGGAUUCGGUCCCUAACACCCAAGCUCAGGGUGGGCCCCAUUUCUUUCCGGCUUAAAAUCACAAGGAAUAGCCCGUCUUCUCAAUCUUACGCCAUAUGAGGUCACCUCCACGCCUCAAAGGCUUCCCAAUGGUUUUUCCGAGAUUUAGUCUUUGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[233.71903992 115.45574188]
[232.02900696 130.36022949]
[223.68643188 142.82624817]
[210.55273438 150.07235718]
[195.55831909 150.48179626]
[182.04876709 143.96322632]
[173.03833008 131.97105408]
[170.53742981 117.18101501]
[175.10408020 102.89305878]
[185.72065735 92.29433441]
[170.96231079 94.97598267]
[156.20396423 97.65763855]
[141.44561768 100.33928680]
[126.68727875 103.02093506]
[111.92893219 105.70258331]
[96.59577179 145.12342834]
[83.72419739 152.82554626]
[70.85262299 160.52764893]
[57.98104477 168.22976685]
[45.10947037 175.93188477]
[32.23789215 183.63398743]
[19.36631775 191.33610535]
[6.49474192 199.03822327]
[20.16522980 205.21217346]
[24.01686096 219.70924377]
[15.21339417 231.85415649]
[0.23747215 232.70372009]
[-9.88302803 221.63233948]
[-7.69627380 206.79364014]
[-21.12986565 213.46737671]
[-34.56345749 220.14109802]
[-47.99704742 226.81483459]
[-61.43063736 233.48855591]
[-70.04579926 247.44244385]
[-86.42758942 246.68803406]
[-93.72381592 232.00140381]
[-84.42875671 218.49090576]
[-68.10436249 220.05496216]
[-54.67077255 213.38124084]
[-41.23718262 206.70750427]
[-27.80359268 200.03378296]
[-14.37000084 193.36006165]
[-1.20737076 186.16664124]
[11.66420460 178.46453857]
[24.53577995 170.76242065]
[37.40735626 163.06030273]
[50.27893066 155.35820007]
[63.15050507 147.65608215]
[76.02207947 139.95396423]
[88.89366150 132.25186157]
[88.60066986 124.75757599]
[73.61221313 125.34585571]
[58.62356186 125.92918396]
[58.03825760 110.94060516]
[73.02606201 110.35269165]
[88.01470184 109.76902771]
[87.72171783 102.27475739]
[74.28813171 95.60102844]
[60.85453796 88.92729950]
[47.42094803 82.25357056]
[33.98735809 75.57984161]
[19.72904587 82.00125885]
[4.69305801 77.70555115]
[-4.02107143 64.72102356]
[-2.29879713 49.17856979]
[9.04667473 38.41686630]
[24.65835953 37.51725769]
[37.16489792 46.90451050]
[40.66108322 62.14625168]
[54.09467316 68.81998444]
[67.52826691 75.49370575]
[80.96185303 82.16743469]
[94.39544678 88.84116364]
[109.24728394 90.94423676]
[124.00563049 88.26258850]
[138.76397705 85.58094025]
[153.52232361 82.89929199]
[168.28067017 80.21764374]
[183.03901672 77.53599548]
[197.51261902 73.59712219]
[211.59458923 68.43012238]
[225.67657471 63.26311493]
[239.75854492 58.09611130]
[253.84053040 52.92911148]
[267.92251587 47.76210785]
[270.69195557 34.25480652]
[279.70407104 23.96281052]
[292.52294922 19.50544930]
[305.76327515 21.94659805]
[315.98400879 30.54302216]
[330.14501953 25.59674072]
[344.30603027 20.65045929]
[358.46704102 15.70417690]
[363.07351685 10.94342995]
[368.56835938 9.45359421]
[373.14865112 10.83214855]
[387.45733643 6.33087921]
[401.76602173 1.82960963]
[416.07470703 -2.67165995]
[430.38339233 -7.17292929]
[433.72640991 -18.59179115]
[442.08361816 -26.89141846]
[453.29470825 -30.08955002]
[464.53921509 -27.50203133]
[473.04614258 -19.88534164]
[487.48852539 -23.93720055]
[501.93090820 -27.98905945]
[516.37329102 -32.04091644]
[527.57043457 -43.21834564]
[541.91461182 -39.20661545]
[556.35699463 -43.25847626]
[570.79937744 -47.31033325]
[585.24176025 -51.36219406]
[584.48712158 -62.19216537]
[585.56756592 -72.99034882]
[588.45086670 -83.44813538]
[593.05316162 -93.26686859]
[599.24169922 -102.16639709]
[606.83831787 -109.89304352]
[615.62487793 -116.22686768]
[625.34924316 -120.98789215]
[635.73284912 -124.04122162]
[646.47833252 -125.30090332]
[657.27832031 -124.73229980]
[667.82409668 -122.35305023]
[677.81439209 -118.23254395]
[686.96411133 -112.48988342]
[695.01232910 -105.29045105]
[701.72991943 -96.84113312]
[706.92590332 -87.38439178]
[710.45281982 -77.19128418]
[725.32067871 -79.17823029]
[740.18847656 -81.16516876]
[747.08404541 -92.74086761]
[759.21154785 -98.15024567]
[772.04949951 -95.62199402]
[780.95147705 -86.29965973]
[795.84851074 -88.05398560]
[810.74560547 -89.80831909]
[825.64263916 -91.56265259]
[840.53967285 -93.31697845]
[855.43676758 -95.07131195]
[862.10974121 -108.98083496]
[875.25543213 -117.05513000]
[890.67907715 -116.71771240]
[903.45910645 -108.07625580]
[909.51739502 -93.88820648]
[906.92083740 -78.68093109]
[896.49786377 -67.30701447]
[881.57452393 -63.39582443]
[866.91278076 -68.19541931]
[857.19110107 -80.17424774]
[842.29400635 -78.41992188]
[827.39697266 -76.66558838]
[812.49993896 -74.91126251]
[797.60284424 -73.15692902]
[782.70581055 -71.40260315]
[772.86395264 -57.76977921]
[755.87335205 -55.42305756]
[742.17541504 -66.29735565]
[727.30761719 -64.31040955]
[712.43981934 -62.32346344]
[709.78765869 -42.97378159]
[701.39971924 -25.31958008]
[688.05389404 -11.01916599]
[670.99426270 -1.41884577]
[651.81506348 2.57382512]
[632.31176758 0.57582694]
[614.31311035 -7.23459959]
[599.50927734 -20.13381386]
[589.29364014 -36.91981125]
[574.85119629 -32.86795044]
[560.40881348 -28.81609154]
[545.96643066 -24.76423264]
[535.80236816 -13.87662125]
[520.42517090 -17.59853554]
[505.98278809 -13.54667568]
[491.54040527 -9.49481678]
[477.09802246 -5.44295788]
[469.11578369 11.02477455]
[451.32891846 16.53058052]
[434.88467407 7.13575935]
[420.57598877 11.63702869]
[406.26727295 16.13829803]
[391.95858765 20.63956833]
[377.64990234 25.14083672]
[363.41333008 29.86519051]
[349.25231934 34.81147385]
[335.09130859 39.75775528]
[320.93026733 44.70403671]
[316.70889282 60.56391907]
[303.73791504 70.88819885]
[287.00314331 71.45533752]
[273.08950806 61.84408569]
[259.00753784 67.01108551]
[244.92555237 72.17809296]
[230.84358215 77.34509277]
[216.76159668 82.51209259]
[202.67962646 87.67910004]
[217.20166016 91.43546295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 79]
[11 78]
[12 77]
[13 76]
[14 75]
[15 74]
[16 50]
[17 49]
[18 48]
[19 47]
[20 46]
[21 45]
[22 44]
[23 43]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[80 199]
[81 198]
[82 197]
[83 196]
[84 195]
[85 194]
[90 190]
[91 189]
[92 188]
[93 187]
[96 186]
[97 185]
[98 184]
[99 183]
[100 182]
[105 179]
[106 178]
[107 177]
[108 176]
[110 174]
[111 173]
[112 172]
[113 171]
[131 162]
[132 161]
[133 160]
[137 157]
[138 156]
[139 155]
[140 154]
[141 153]
[142 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
