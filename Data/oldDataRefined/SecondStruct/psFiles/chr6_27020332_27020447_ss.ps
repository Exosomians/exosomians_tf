%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:03 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUCUUUGACCCACGAGGUCACCGCGUUAGCCAAUCGCGCGCCAUGAAUAUACCGUCAUACACACGCUCACUACGGCUCCAACACUCAAGCUCGGAGUGGACCUCGUAACAAAAG\
) } def
/len { sequence length } bind def

/coor [
[137.08227539 355.47256470]
[121.98934937 360.91162109]
[108.40271759 352.38034058]
[106.74486542 336.42315674]
[118.28755951 325.28109741]
[119.89553833 310.36752319]
[121.50351715 295.45397949]
[123.11148834 280.54040527]
[111.52523041 273.17965698]
[104.22951508 261.47399902]
[102.70976257 247.69801331]
[107.32237244 234.55813599]
[117.21327209 224.66081238]
[130.47547913 219.99557495]
[132.48327637 205.13056946]
[134.49107361 190.26554871]
[136.49887085 175.40052795]
[138.50666809 160.53550720]
[140.51446533 145.67048645]
[142.52226257 130.80548096]
[144.53005981 115.94045258]
[112.71844482 140.20722961]
[78.64769745 130.27166748]
[68.10231018 101.14273834]
[53.40544891 98.14234924]
[38.70858765 95.14196777]
[24.01173019 92.14157867]
[9.31486988 89.14119720]
[-1.37935603 100.26041412]
[-16.39269066 103.81053162]
[-30.93443489 98.65871429]
[-40.36436844 86.44888306]
[-41.67343521 71.07716370]
[-34.44392014 57.44860077]
[-20.98272896 49.91203308]
[-5.58528233 50.87234116]
[6.83515072 60.02310181]
[12.31525517 74.44433594]
[27.01211548 77.44471741]
[41.70897293 80.44510651]
[56.40583420 83.44548798]
[71.10269165 86.44587708]
[76.99615479 70.96350861]
[91.30134583 58.73605347]
[111.90597534 54.22586060]
[107.15595245 39.99781418]
[102.40593719 25.76976776]
[97.65591431 11.54172039]
[82.82012939 6.99429464]
[73.51756287 -5.42511940]
[73.32523346 -20.94100189]
[82.31710815 -33.58718109]
[97.03562164 -38.50094223]
[111.82119751 -33.79284286]
[120.98849487 -21.27324677]
[121.01248932 -5.75618982]
[111.88396454 6.79170084]
[116.63397980 21.01974678]
[121.38400269 35.24779510]
[126.13401794 49.47584152]
[133.46165466 51.07455063]
[128.90316772 36.78398514]
[139.00001526 25.69102097]
[153.65519714 28.88876343]
[158.21336365 43.17942810]
[148.11689758 54.27197647]
[155.44453430 55.87068558]
[165.68922424 44.91412735]
[175.93391418 33.95756531]
[175.15313721 18.17257500]
[185.82449341 6.51505470]
[201.61685181 5.90120602]
[213.16090393 16.69521332]
[213.60774231 32.49318314]
[202.69229126 43.92246246]
[186.89047241 44.20225906]
[176.64578247 55.15882111]
[166.40109253 66.11537933]
[168.58424377 73.29060364]
[180.88317871 64.70361328]
[192.85035706 73.74721527]
[187.94726562 87.92324066]
[172.95056152 87.64105225]
[175.13371277 94.81627655]
[189.74472046 98.21015930]
[204.35572815 101.60404205]
[218.96673584 104.99793243]
[233.57774353 108.39181519]
[245.96957397 98.85364532]
[261.59100342 99.56393433]
[273.06610107 110.18731689]
[274.97668457 125.70774078]
[266.42059326 138.79695129]
[251.43777466 143.27461243]
[237.10267639 137.02651978]
[230.18386841 123.00282288]
[215.57286072 119.60894012]
[200.96185303 116.21504974]
[186.35084534 112.82116699]
[171.73983765 109.42728424]
[159.39508057 117.94824982]
[157.38728333 132.81327820]
[155.37948608 147.67828369]
[153.37168884 162.54330444]
[151.36389160 177.40832520]
[149.35609436 192.27334595]
[147.34829712 207.13836670]
[145.34049988 222.00337219]
[158.49089050 231.92341614]
[164.84329224 247.02033997]
[162.76535034 263.17276001]
[152.91242981 276.02200317]
[138.02505493 282.14837646]
[136.41708374 297.06195068]
[134.80909729 311.97552490]
[133.20112610 326.88906860]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 116]
[6 115]
[7 114]
[8 113]
[14 108]
[15 107]
[16 106]
[17 105]
[18 104]
[19 103]
[20 102]
[21 101]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[45 60]
[46 59]
[47 58]
[48 57]
[67 78]
[68 77]
[69 76]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
