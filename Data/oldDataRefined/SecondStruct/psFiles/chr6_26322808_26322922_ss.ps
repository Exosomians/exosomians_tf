%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:02 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUUGGGCCCUGGUGCACCGGAUUACCUAUUCCGCAGACUGAAGCCUAGUCUUCUAACUCCCAAGCUUAGGGAGGCACCAAUAAACUCUAUGACUGAUCAGACCACAAUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[240.59014893 277.86099243]
[250.98629761 266.94384766]
[242.90777588 254.30511475]
[234.82925415 241.66638184]
[221.45544434 235.10968018]
[220.54241943 219.31483459]
[212.46389771 206.67610168]
[204.38537598 194.03736877]
[186.83250427 193.87239075]
[172.70770264 183.19044495]
[167.68124390 166.04748535]
[173.90896606 149.13764954]
[165.15805054 136.95481873]
[156.40713501 124.77198792]
[147.65620422 112.58914948]
[138.90528870 100.40631866]
[130.15437317 88.22348785]
[122.97232056 117.74791718]
[96.99845123 125.51077271]
[79.63054657 109.18345642]
[64.68002319 110.40083313]
[49.72950745 111.61821747]
[34.77898788 112.83559418]
[26.82251740 126.15753937]
[12.54194927 132.22755432]
[-2.57154179 128.71159363]
[-12.70651245 116.96160889]
[-13.96585846 101.49571991]
[-5.86533594 88.26087189]
[8.48023891 82.34613800]
[23.55469894 86.02584839]
[33.56160736 97.88507843]
[48.51212692 96.66769409]
[63.46264267 95.45031738]
[78.41316223 94.23293304]
[79.18416595 82.24697113]
[86.81313324 70.43517303]
[77.10233307 59.00274277]
[67.39154053 47.57031250]
[57.68074799 36.13788223]
[47.96995163 24.70545197]
[38.25915909 13.27302074]
[22.45007706 10.54309940]
[14.85422039 -3.58780766]
[21.29848289 -18.27967834]
[36.83937454 -22.26216507]
[49.55525589 -12.48024750]
[49.69158936 3.56222630]
[59.40238190 14.99465752]
[69.11317444 26.42708778]
[78.82397461 37.85951996]
[88.53476715 49.29195023]
[98.24555969 60.72438049]
[105.70159912 59.91348648]
[99.55127716 46.23234940]
[110.66238403 36.15547943]
[123.67948151 43.60900879]
[120.61366272 58.29170227]
[128.06970215 57.48080826]
[135.09582520 44.22813034]
[142.12194824 30.97544861]
[149.14808655 17.72276878]
[156.17420959 4.47008705]
[150.13153076 -9.95281601]
[154.82278442 -24.87012863]
[168.03288269 -33.23834991]
[183.52444458 -31.10626411]
[193.98280334 -19.48057556]
[194.46986389 -3.85057831]
[184.75563049 8.40371990]
[169.42687988 11.49621391]
[162.40075684 24.74889374]
[155.37463379 38.00157547]
[148.34851074 51.25425720]
[141.32238770 64.50693512]
[142.33720398 79.47256470]
[151.08811951 91.65540314]
[159.83905029 103.83823395]
[168.58996582 116.02106476]
[177.34088135 128.20390320]
[186.09179688 140.38673401]
[198.64468384 138.80296326]
[210.59393311 142.73553467]
[219.64752197 151.36445618]
[224.09712219 162.97540283]
[223.14022827 175.29997253]
[217.02410889 185.95886230]
[225.10263062 198.59759521]
[233.18115234 211.23631287]
[247.13279724 218.69703674]
[247.46798706 233.58787537]
[255.54650879 246.22659302]
[263.62503052 258.86532593]
[277.89837646 254.01403809]
[292.91799927 252.72024536]
[307.81072998 255.05918884]
[321.71066284 260.89486694]
[333.80969238 269.88800049]
[343.40441895 281.51574707]
[349.93701172 295.10211182]
[353.02764893 309.85714722]
[352.49667358 324.92306519]
[348.37493896 339.42391968]
[340.90206909 352.51666260]
[330.51257324 363.44009399]
[317.81042480 371.55914307]
[303.53414917 376.40176392]
[288.51370239 377.68646240]
[273.62243652 375.33850098]
[259.72601318 369.49438477]
[247.63243103 360.49389648]
[238.04476929 348.86035156]
[231.52041626 335.27005005]
[228.43872070 320.51312256]
[228.97883606 305.44754028]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 93]
[3 92]
[4 91]
[6 89]
[7 88]
[8 87]
[12 81]
[13 80]
[14 79]
[15 78]
[16 77]
[17 76]
[20 35]
[21 34]
[22 33]
[23 32]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
