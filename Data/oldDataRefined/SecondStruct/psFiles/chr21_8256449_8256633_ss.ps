%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:20:11 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGCCGCCGGCAGCCCACCCCCGAAAUGGGCCGCCGGCAGCGCGCGGACGGCGCGCACACCGCACGCGGGGCGCGGCACCCCCGCCCUUGGGGGCCCGCGGACACCCCACCACAGGCGCGAGCGGGGGCGCACCCGCCGCGCGCGGAGGGGCACCACACUUUGGAAGGCUGGGGAGAG\
) } def
/len { sequence length } bind def

/coor [
[-64.86085510 889.92883301]
[-68.86536407 904.38439941]
[-72.86986542 918.84002686]
[-76.87437439 933.29559326]
[-80.87888336 947.75115967]
[-84.88338470 962.20678711]
[-83.28502655 979.08520508]
[-99.06137085 985.29351807]
[-109.39439392 971.85235596]
[-99.33897400 958.20227051]
[-95.33446503 943.74664307]
[-91.32995605 929.29107666]
[-87.32545471 914.83551025]
[-83.32094574 900.37988281]
[-79.31643677 885.92431641]
[-88.22013855 871.66839600]
[-83.98533630 855.05413818]
[-68.75611115 846.46783447]
[-76.50986481 833.80236816]
[-72.90376282 819.02227783]
[-59.56645203 810.97528076]
[-55.80666351 796.45416260]
[-52.04687500 781.93298340]
[-48.28708649 767.41180420]
[-44.65006638 752.85943604]
[-41.13606644 738.27685547]
[-47.01233673 721.75079346]
[-34.24176788 708.49853516]
[-30.97456551 693.85870361]
[-27.70736122 679.21881104]
[-24.44015884 664.57897949]
[-21.17295456 649.93914795]
[-28.31253433 631.98297119]
[-14.49872208 617.32128906]
[-11.72783089 602.57940674]
[-8.95694065 587.83758545]
[-6.31064367 573.07281494]
[-3.78913021 558.28631592]
[-1.26761687 543.49975586]
[-3.24686790 536.36193848]
[1.42337573 528.48565674]
[4.19426680 513.74377441]
[-5.83985472 504.91876221]
[-10.23303509 492.18411255]
[-7.73472309 478.83645630]
[1.10676622 468.38739014]
[14.06017876 463.63964844]
[17.07965660 448.94671631]
[20.09913445 434.25375366]
[23.11861229 419.56082153]
[26.13809013 404.86785889]
[29.15756798 390.17492676]
[32.17704391 375.48196411]
[35.19652176 360.78903198]
[33.45947647 353.58843994]
[38.39307022 345.87435913]
[41.66027451 331.23449707]
[44.92747498 316.59466553]
[38.77293015 300.17022705]
[51.31785202 286.70416260]
[54.33732986 272.01123047]
[57.35680771 257.31826782]
[60.37628555 242.62532043]
[51.84394455 232.95289612]
[50.42607117 219.93724060]
[56.86423111 208.31379700]
[69.00038910 202.44174194]
[72.26759338 187.80187988]
[75.53479767 173.16203308]
[78.80200195 158.52217102]
[74.02264404 144.41519165]
[84.58003998 132.63163757]
[87.84724426 117.99178314]
[91.11444092 103.35192871]
[93.26056671 88.50625610]
[94.27320862 73.54047394]
[95.28585815 58.57469559]
[96.29850006 43.60891342]
[96.80511475 28.61747169]
[96.80511475 13.61747265]
[96.80511475 -1.38252735]
[96.80511475 -16.38252831]
[96.80511475 -31.38252831]
[88.24601746 -41.05069733]
[88.56712341 -53.55792236]
[97.04991150 -62.20086670]
[97.30325317 -77.19873047]
[97.55659485 -92.19658661]
[97.80993652 -107.19445038]
[98.06327820 -122.19230652]
[86.89949036 -133.37915039]
[86.99932861 -149.18312073]
[98.30357361 -160.22801208]
[114.10560608 -159.96109009]
[125.03036499 -148.54071045]
[124.59638977 -132.74237061]
[113.06114197 -121.93896484]
[112.80780029 -106.94110870]
[112.55445099 -91.94324493]
[112.30110931 -76.94538879]
[112.04776764 -61.94752502]
[121.38254547 -47.09820175]
[111.80511475 -31.38252831]
[111.80511475 -16.38252831]
[111.80511475 -1.38252735]
[111.80511475 13.61747265]
[111.80511475 28.61747169]
[113.71277618 30.69973183]
[114.90124512 33.67126465]
[115.02458191 37.25853729]
[113.84343719 41.06690598]
[111.26428223 44.62156296]
[110.25163269 59.58734131]
[109.23899078 74.55311584]
[108.22634125 89.51889801]
[114.84448242 93.04738617]
[134.69889832 103.63286591]
[146.56053162 94.45127106]
[155.38473511 79.97474670]
[171.73829651 84.44659424]
[171.96832275 101.39897919]
[155.74212646 106.31291199]
[143.88049316 115.49449921]
[122.86511230 115.55271912]
[105.75430298 106.61913300]
[102.48709869 121.25898743]
[99.21989441 135.89884949]
[103.76555634 151.05296326]
[93.44185638 161.78938293]
[90.17465210 176.42922974]
[86.90744781 191.06909180]
[83.64024353 205.70893860]
[93.28687286 220.28962708]
[89.48915100 237.00920105]
[75.06923676 245.64480591]
[72.04975891 260.33773804]
[69.03028107 275.03070068]
[66.01080322 289.72363281]
[72.44850922 300.91683960]
[69.61628723 313.10339355]
[59.56733322 319.86184692]
[56.30012894 334.50170898]
[53.03292465 349.14157104]
[49.88947296 363.80850220]
[46.86999512 378.50143433]
[43.85051727 393.19439697]
[40.83103943 407.88732910]
[37.81156158 422.58029175]
[34.79208374 437.27325439]
[31.77260590 451.96618652]
[28.75312805 466.65914917]
[40.32076263 478.98526001]
[42.25105667 495.61145020]
[33.98085785 509.97213745]
[18.93611717 516.51470947]
[16.16522598 531.25653076]
[13.51893044 546.02124023]
[10.99741650 560.80780029]
[8.47590351 575.59436035]
[10.11995602 584.60235596]
[5.78491068 590.60845947]
[3.01401973 605.35028076]
[0.24312888 620.09216309]
[6.90496683 628.72515869]
[7.68733025 639.38110352]
[2.57243872 648.51074219]
[-6.53309870 653.20635986]
[-9.80030251 667.84619141]
[-13.06750584 682.48602295]
[-16.33470917 697.12591553]
[-19.60191154 711.76574707]
[-13.35417271 723.06610107]
[-16.39181328 735.20306396]
[-26.55348206 741.79083252]
[-30.06747818 756.37341309]
[-29.03530502 765.47186279]
[-33.76593018 771.17163086]
[-37.52571869 785.69274902]
[-41.28550720 800.21392822]
[-45.04529572 814.73510742]
[-37.28907394 828.24353027]
[-41.30889130 842.91650391]
[-54.23495102 850.22760010]
[-46.10556412 860.98309326]
[-45.66848755 874.26330566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[6 10]
[18 183]
[21 180]
[22 179]
[23 178]
[24 177]
[25 175]
[26 174]
[28 171]
[29 170]
[30 169]
[31 168]
[32 167]
[34 163]
[35 162]
[36 161]
[37 159]
[38 158]
[39 157]
[41 156]
[42 155]
[47 151]
[48 150]
[49 149]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[56 143]
[57 142]
[58 141]
[60 138]
[61 137]
[62 136]
[63 135]
[67 132]
[68 131]
[69 130]
[70 129]
[72 127]
[73 126]
[74 125]
[75 115]
[76 114]
[77 113]
[78 112]
[79 107]
[80 106]
[81 105]
[82 104]
[83 103]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
[117 123]
[118 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
