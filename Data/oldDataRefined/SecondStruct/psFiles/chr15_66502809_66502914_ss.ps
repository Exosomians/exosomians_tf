%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:27 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACGAGUCAUUCUUAAAAGCAGUUGGAAGACAUGGUCGAAUGACUGUCGUCCGUUGACAGCGACUCUUGUCUCAUUCUGCGUUUAAUGCUGUAGUAACGUUCGU\
) } def
/len { sequence length } bind def

/coor [
[115.58127594 446.37063599]
[123.83248901 432.19851685]
[123.39214325 417.20498657]
[122.95179749 402.21145630]
[122.51144409 387.21789551]
[122.07109833 372.22436523]
[106.12648773 362.79025269]
[98.86043549 345.58834839]
[103.28266907 327.29470825]
[117.82935333 315.12252808]
[116.07176208 300.22586060]
[103.01038361 293.11682129]
[96.56336975 279.51901245]
[99.39250946 264.55743408]
[110.61878967 254.00863647]
[108.86119843 239.11196899]
[107.10359955 224.21530151]
[105.34600830 209.31861877]
[103.58841705 194.42195129]
[94.41312408 182.68894958]
[100.48011780 168.07723999]
[98.72251892 153.18057251]
[96.96492767 138.28388977]
[95.20733643 123.38722229]
[82.41963196 116.15122986]
[76.29120636 102.79729462]
[79.14346313 88.38377380]
[89.89599609 78.37037659]
[88.13839722 63.47370148]
[83.96702576 55.16543198]
[86.55449677 48.11476135]
[85.23497772 33.17291260]
[83.91545105 18.23106384]
[82.59593201 3.28921413]
[71.66416168 -11.43736362]
[79.49234772 -27.06777954]
[77.73475647 -41.96445084]
[75.97716522 -56.86112595]
[74.21956635 -71.75779724]
[72.46197510 -86.65447235]
[60.67881012 -77.37239075]
[46.00945663 -80.50448608]
[39.04465866 -93.78950500]
[44.81274796 -107.63613129]
[59.14937592 -112.04760742]
[71.70471191 -103.83786774]
[72.14505768 -118.83140564]
[72.58540344 -133.82493591]
[73.02574921 -148.81846619]
[73.46610260 -163.81201172]
[73.90644836 -178.80554199]
[63.99063873 -191.41729736]
[67.80860138 -206.99942017]
[82.43152618 -213.59864807]
[96.64194489 -206.15261841]
[99.53884888 -190.37327576]
[88.89997864 -178.36518860]
[88.45963287 -163.37165833]
[88.01928711 -148.37812805]
[87.57894135 -133.38459778]
[87.13859558 -118.39105225]
[86.69824982 -103.39752197]
[87.35865021 -88.41206360]
[89.11624146 -73.51538849]
[90.87383270 -58.61872101]
[92.63143158 -43.72204590]
[94.38902283 -28.82537270]
[103.74655151 -21.00458908]
[105.25109863 -8.49639893]
[97.53778076 1.96969128]
[98.85729980 16.91154099]
[100.17682648 31.85338974]
[101.49634552 46.79523849]
[103.03507233 61.71610641]
[104.79266357 76.61277771]
[117.58036804 83.84877014]
[123.70879364 97.20270538]
[120.85653687 111.61622620]
[110.10400391 121.62962341]
[111.86160278 136.52629089]
[113.61919403 151.42297363]
[115.37679291 166.31964111]
[124.67779541 179.11814880]
[118.48508453 192.66435242]
[120.24268341 207.56103516]
[122.00027466 222.45770264]
[123.75786591 237.35437012]
[125.51546478 252.25105286]
[138.88851929 259.89746094]
[145.12200928 273.78979492]
[142.01666260 288.51464844]
[130.96842957 298.46826172]
[132.72602844 313.36492920]
[143.79585266 317.24932861]
[152.52606201 325.00808716]
[157.63778687 335.45205688]
[158.40225220 347.00274658]
[154.74446106 357.93093872]
[147.24847412 366.61550903]
[137.06463623 371.78402710]
[137.50498962 386.77755737]
[137.94532776 401.77108765]
[138.38568115 416.76461792]
[138.82601929 431.75817871]
[147.89474487 445.42163086]
[140.35488892 459.98468018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 104]
[3 103]
[4 102]
[5 101]
[6 100]
[10 93]
[11 92]
[15 88]
[16 87]
[17 86]
[18 85]
[19 84]
[21 82]
[22 81]
[23 80]
[24 79]
[28 75]
[29 74]
[31 73]
[32 72]
[33 71]
[34 70]
[36 67]
[37 66]
[38 65]
[39 64]
[40 63]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
