%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:36 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUGAGCCCUCCGACUCCGACCUCCUAGCGAACUCAGGUCCUCAAGACCCGACAUCACGCGAUACGGCUAGCCCACAGGCGUGAUUCAAGCCGUAGUUAUACCACUGGAGGGCCCUCGCCCCCUGGUGGUCCAACGGAUUCCUCCCCACUUGGCCGGGUCCAGCCUUUGCCUCGUCCAGUUUUGAGGGCACGACUAGUCA\
) } def
/len { sequence length } bind def

/coor [
[82.40538025 438.01028442]
[74.05690002 425.40890503]
[69.79523468 410.90615845]
[69.99932861 395.79162598]
[74.65103149 381.40921021]
[83.33671570 369.03787231]
[95.28405762 359.77761841]
[109.43070984 354.45187378]
[108.50275421 339.48059082]
[107.57479858 324.50933838]
[106.64684296 309.53805542]
[105.71888733 294.56680298]
[104.79093170 279.59552002]
[94.31820679 265.51739502]
[102.64945984 249.09904480]
[101.48992920 234.14392090]
[100.33039856 219.18881226]
[99.17087555 204.23368835]
[90.18648529 196.12785339]
[89.10153198 183.67356873]
[97.04154968 173.50366211]
[96.11359406 158.53239441]
[95.18563080 143.56112671]
[88.17601013 142.20121765]
[81.48023224 139.72113037]
[75.27604675 136.18667603]
[69.72813416 131.69169617]
[64.98375702 126.35549164]
[61.16884232 120.31970978]
[58.38466263 113.74456024]
[43.54648209 115.94193268]
[28.70830345 118.13929749]
[20.80258751 134.45082092]
[4.83034563 142.68367004]
[-12.73200607 139.71177673]
[-24.88972855 126.91007996]
[-39.65280151 129.56558228]
[-51.86523056 139.62377930]
[-65.76123810 134.26184082]
[-80.52430725 136.91735840]
[-95.28737640 139.57286072]
[-110.05045319 142.22837830]
[-120.35092926 154.52795410]
[-136.38526917 153.99934387]
[-145.85330200 141.04804993]
[-141.49195862 125.60919952]
[-126.64688873 119.52615356]
[-112.70596313 127.46530914]
[-97.94288635 124.80979919]
[-83.17981720 122.15428925]
[-68.41674805 119.49877930]
[-57.26026917 109.63053131]
[-42.30831146 114.80252075]
[-27.54523849 112.14701080]
[-23.93676186 100.54834747]
[-15.68866348 91.53289795]
[-4.32236385 86.85460663]
[8.02648830 87.45890045]
[19.00924110 93.29234314]
[26.51093292 103.30111694]
[41.34911346 101.10375214]
[56.18729401 98.90637970]
[59.39129639 72.01844788]
[79.21094513 49.29103851]
[111.34656525 40.78299713]
[102.45483398 28.70255089]
[93.56310272 16.62210846]
[84.67137146 4.54166365]
[75.77964020 -7.53878021]
[66.88790894 -19.61922455]
[57.99618149 -31.69966888]
[41.58608246 -29.69964218]
[26.49228287 -36.20915604]
[16.79520607 -49.36536789]
[15.06422997 -65.52281952]
[21.67748833 -80.26330566]
[12.59987450 -92.20470428]
[3.52226138 -104.14610291]
[-11.80117893 -109.98769379]
[-14.13642597 -126.21971893]
[-1.08117890 -136.14405823]
[13.93444443 -129.55140686]
[15.46365738 -113.22371674]
[24.54127121 -101.28231812]
[33.61888504 -89.34091949]
[47.02761078 -91.95178986]
[60.31657791 -88.51284027]
[70.87696838 -79.64028168]
[76.61029816 -67.02270508]
[76.34527588 -53.09997177]
[70.07662964 -40.59140015]
[78.96835327 -28.51095581]
[87.86008453 -16.43051147]
[96.75181580 -4.35006714]
[105.64354706 7.73037720]
[114.53527832 19.81082153]
[123.42700958 31.89126587]
[138.39065552 30.84749031]
[145.51911926 17.64957428]
[152.64758301 4.45165682]
[148.35269165 -10.52137470]
[155.76997375 -23.80439186]
[170.07093811 -27.80663872]
[177.19940186 -41.00455475]
[184.32786560 -54.20247269]
[191.45632935 -67.40039062]
[198.58479309 -80.59830475]
[205.71325684 -93.79622650]
[212.84172058 -106.99414062]
[219.97018433 -120.19205475]
[219.72070312 -136.01129150]
[232.57684326 -143.53251648]
[239.70530701 -156.73043823]
[246.83377075 -169.92835999]
[253.96223450 -183.12628174]
[252.95640564 -199.49455261]
[266.77636719 -208.32293701]
[281.20535278 -200.52955627]
[281.40002441 -184.13156128]
[267.16015625 -175.99781799]
[260.03167725 -162.79989624]
[252.90322876 -149.60197449]
[245.77476501 -136.40405273]
[246.53411865 -121.52882385]
[233.16809082 -113.06359100]
[226.03964233 -99.86567688]
[218.91117859 -86.66776276]
[211.78271484 -73.46984100]
[204.65425110 -60.27192688]
[197.52578735 -47.07400894]
[190.39732361 -33.87609100]
[183.26885986 -20.67817497]
[187.76325989 -6.52416754]
[180.72198486 6.96194506]
[165.84548950 11.58012009]
[158.71702576 24.77803802]
[151.58856201 37.97595596]
[161.12127686 49.55729294]
[175.44342041 45.09901047]
[189.76556396 40.64072418]
[200.48512268 28.23012352]
[216.53982544 31.57358551]
[221.41395569 47.23164749]
[210.09344482 59.09663391]
[194.22384644 54.96286774]
[179.90170288 59.42115021]
[165.57955933 63.87943268]
[165.40547180 71.37741089]
[180.40142822 71.72558594]
[195.39738464 72.07401276]
[195.04872131 87.06996155]
[180.05325317 86.72154236]
[165.05729675 86.37336731]
[164.88320923 93.87135315]
[178.98300171 98.98953247]
[193.08280945 104.10771179]
[211.13156128 100.47251129]
[221.89479065 114.32980347]
[236.07209778 119.22917175]
[250.24940491 124.12854004]
[264.42672729 129.02790833]
[281.37203979 128.48664856]
[286.58306885 144.61988831]
[272.52288818 154.09339905]
[259.52734375 143.20523071]
[245.35003662 138.30584717]
[231.17272949 133.40647888]
[216.99542236 128.50711060]
[205.97958374 133.51461792]
[194.12545776 129.54396057]
[187.96461487 118.20751190]
[173.86482239 113.08932495]
[159.76502991 107.97114563]
[147.17396545 127.89624786]
[129.26568604 139.69323730]
[110.15690613 142.63316345]
[111.08486176 157.60443115]
[112.01281738 172.57569885]
[122.54279327 187.67842102]
[114.12599182 203.07415771]
[115.28551483 218.02928162]
[116.44504547 232.98439026]
[117.60457611 247.93951416]
[126.87961578 256.90859985]
[127.53422546 269.39291382]
[119.76219940 278.66757202]
[120.69015503 293.63882446]
[121.61811066 308.61010742]
[122.54606628 323.58135986]
[123.47402191 338.55264282]
[124.40198517 353.52389526]
[139.09803772 357.06192017]
[152.09748840 364.77590942]
[162.24443054 375.97998047]
[168.63661194 389.67782593]
[170.70565796 404.65148926]
[168.26756287 419.56948853]
[161.53913879 433.10537720]
[151.11865234 444.05548096]
[137.93270874 451.44616699]
[123.15379333 454.62026978]
[108.09602356 453.29553223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[13 186]
[15 183]
[16 182]
[17 181]
[18 180]
[21 178]
[22 177]
[23 176]
[30 62]
[31 61]
[32 60]
[36 54]
[37 53]
[39 51]
[40 50]
[41 49]
[42 48]
[65 97]
[66 96]
[67 95]
[68 94]
[69 93]
[70 92]
[71 91]
[76 85]
[77 84]
[78 83]
[98 137]
[99 136]
[100 135]
[103 132]
[104 131]
[105 130]
[106 129]
[107 128]
[108 127]
[109 126]
[110 125]
[112 123]
[113 122]
[114 121]
[115 120]
[138 147]
[139 146]
[140 145]
[154 173]
[155 172]
[156 171]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
