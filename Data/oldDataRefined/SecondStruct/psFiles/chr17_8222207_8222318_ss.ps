%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:39 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCUAUCUUCAAAGUUUUGACGAUCAUGAGAGGGGCAGCCCCUUAGCUUGGGGCCAGAGGGCGCACUGUCCGCCCCUAUGAGUGGUGAUAUGAUUGCUCCUCCCUGGACA\
) } def
/len { sequence length } bind def

/coor [
[116.77368927 194.38507080]
[104.14700317 202.48239136]
[89.21938324 203.95417786]
[75.25448608 198.47862244]
[65.30548859 187.25288391]
[61.54755402 172.73124695]
[64.80090332 158.09146118]
[52.89003372 167.20909119]
[40.97916412 176.32672119]
[34.72408295 190.85890198]
[19.91483498 192.45120239]
[8.00396442 201.56883240]
[-3.90690565 210.68646240]
[-15.81777573 219.80409241]
[-21.60791969 235.14704895]
[-37.83201981 237.53675842]
[-47.80010986 224.51487732]
[-41.25787354 209.47721863]
[-24.93540573 207.89323425]
[-13.02453518 198.77560425]
[-1.11366558 189.65797424]
[10.79720402 180.54034424]
[16.20034027 166.66030884]
[31.86153412 164.41584778]
[43.77240372 155.29821777]
[55.68327332 146.18058777]
[66.06642151 135.35514832]
[74.67955780 123.07450867]
[75.65307617 108.21175385]
[89.91184998 101.35625458]
[91.63190460 93.35523224]
[98.93903351 88.85848999]
[107.89021301 76.82202911]
[116.84140015 64.78557587]
[125.79257965 52.74911499]
[134.74375916 40.71265793]
[143.69494629 28.67619896]
[152.64613342 16.63973999]
[161.59732056 4.60328245]
[169.15742493 -8.35220718]
[175.23306274 -22.06667328]
[181.30871582 -35.78113937]
[179.82417297 -51.53254318]
[192.05345154 -60.03512192]
[198.12910461 -73.74958801]
[204.20474243 -87.46405792]
[210.28038025 -101.17852020]
[203.84722900 -111.37503815]
[203.20893860 -123.29347992]
[208.40997314 -133.90184021]
[218.02423096 -140.55880737]
[229.54385376 -141.67109680]
[236.37228394 -155.02671814]
[243.20071411 -168.38233948]
[250.02914429 -181.73796082]
[256.85757446 -195.09358215]
[256.42565918 -199.74377441]
[257.47637939 -203.83419800]
[259.62588501 -206.94776917]
[262.39041138 -208.84654236]
[265.25799561 -209.48905945]
[273.52642822 -222.00437927]
[281.79483032 -234.51969910]
[290.06326294 -247.03501892]
[288.27313232 -262.97787476]
[299.72302246 -274.21530151]
[315.62957764 -272.12689209]
[323.79061890 -258.31469727]
[317.94573975 -243.37425232]
[302.57858276 -238.76658630]
[294.31015015 -226.25126648]
[286.04174805 -213.73594666]
[277.77331543 -201.22064209]
[270.21319580 -188.26515198]
[263.38476562 -174.90953064]
[256.55633545 -161.55390930]
[249.72790527 -148.19828796]
[242.89947510 -134.84266663]
[249.62107849 -117.92664337]
[241.84045410 -101.12251282]
[223.99484253 -95.10288239]
[217.91920471 -81.38841248]
[211.84356689 -67.67395020]
[205.76792908 -53.95948029]
[207.68702698 -39.18902969]
[195.02317810 -29.70549965]
[188.94754028 -15.99103260]
[182.87188721 -2.27656627]
[196.92483521 -7.52203846]
[211.43284607 -3.71183825]
[221.09487915 7.76183271]
[222.38053894 22.70663261]
[214.82006836 35.66191483]
[201.17596436 41.89397049]
[186.43362427 39.12568283]
[175.97972107 28.36855316]
[173.63377380 13.55446529]
[164.68258667 25.59092331]
[155.73139954 37.62738037]
[146.78022766 49.66383743]
[137.82904053 61.70029831]
[128.87785339 73.73675537]
[119.92667389 85.77321625]
[110.97549438 97.80966949]
[102.19248199 109.96939087]
[100.60289764 125.71054077]
[86.96018982 131.68763733]
[78.34705353 143.96827698]
[92.84164429 140.10734558]
[107.50701904 143.25804138]
[119.13684845 152.73152161]
[125.18848419 166.45660400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 26]
[8 25]
[9 24]
[11 22]
[12 21]
[13 20]
[14 19]
[27 108]
[28 107]
[30 105]
[32 104]
[33 103]
[34 102]
[35 101]
[36 100]
[37 99]
[38 98]
[39 97]
[40 88]
[41 87]
[42 86]
[44 84]
[45 83]
[46 82]
[47 81]
[52 78]
[53 77]
[54 76]
[55 75]
[56 74]
[61 73]
[62 72]
[63 71]
[64 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
