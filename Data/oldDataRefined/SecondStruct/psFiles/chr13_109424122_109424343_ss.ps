%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:16 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAACUCCAACUAGCCCCAAAUAGCUAAUGUCUUGUCCGAGGAGAUCUCCCUAUACUUCGUGGCGGUCCAGGAAACUCAAAAUUCGACACCGAGCAUCACAAGACCGCUCGUCAAAACAACUAAAUUGACAACUCCAAAUCCCGAUUCGUAUCACCCCAUAGAUUAGGGUCAAACCCAGAAUCGAUAACACACAAGUCUAUACAAUUUCGGUGAAAGCAUCA\
) } def
/len { sequence length } bind def

/coor [
[-2.22337747 428.11102295]
[7.58486032 439.45996094]
[12.37243462 453.67541504]
[11.42814827 468.64569092]
[4.89227486 482.14688110]
[-6.26427507 492.17340088]
[-20.38418770 497.23583984]
[-35.36993408 496.58209229]
[-48.99537277 490.30935669]
[-59.23643112 479.34939575]
[-64.57179260 465.33035278]
[-64.20941925 450.33715820]
[-72.04238892 463.12951660]
[-79.87536621 475.92187500]
[-87.70833588 488.71423340]
[-81.64099121 502.99594116]
[-85.15976715 518.10876465]
[-96.91163635 528.24157715]
[-112.37776184 529.49804688]
[-125.61109924 521.39501953]
[-131.52316284 507.04833984]
[-127.84063721 491.97457886]
[-115.97954559 481.96987915]
[-100.50070190 480.88125610]
[-92.66772461 468.08889771]
[-84.83475494 455.29653931]
[-77.00177765 442.50418091]
[-70.46633911 429.00277710]
[-65.29193115 414.92352295]
[-60.11753082 400.84426880]
[-60.75992966 393.48818970]
[-54.76979065 386.60397339]
[-49.39756012 372.59899902]
[-44.02532578 358.59402466]
[-51.51892853 343.53356934]
[-45.68261719 327.39694214]
[-29.67049980 320.34161377]
[-24.49609566 306.26235962]
[-19.32169151 292.18307495]
[-14.14728642 278.10382080]
[-24.41241074 267.16641235]
[-38.79120255 271.43844604]
[-53.16999054 275.71051025]
[-64.04970551 287.98095703]
[-80.05966187 284.42941284]
[-84.73019409 268.70944214]
[-73.25665283 256.99234009]
[-57.44203949 261.33172607]
[-43.06325150 257.05966187]
[-28.68445969 252.78761292]
[-29.70850563 232.85903931]
[-22.59092331 214.58880615]
[-8.85047913 201.09182739]
[8.89290714 194.54287720]
[27.41456413 195.82899475]
[33.37372208 182.06350708]
[39.33287811 168.29803467]
[45.29203796 154.53254700]
[45.06496429 147.15197754]
[51.43332291 140.61605835]
[57.58581161 126.93589783]
[63.73829651 113.25572968]
[61.42309189 98.43547821]
[51.39136887 87.28359222]
[41.35964584 76.13171387]
[31.32792282 64.97982788]
[21.29619980 53.82794189]
[11.26447582 42.67605972]
[-4.28080606 41.68511200]
[-14.29553699 30.23261070]
[-13.25502205 15.41866684]
[-23.36504936 4.33772135]
[-33.55287933 -6.67173576]
[-49.11057663 -7.44359016]
[-59.28564835 -18.75387383]
[-58.45392609 -33.58100510]
[-68.64175415 -44.59046173]
[-78.82958221 -55.59991837]
[-93.23407745 -50.65719223]
[-108.40304565 -52.00708771]
[-121.70838165 -59.41572952]
[-130.84484863 -71.59952545]
[-134.22950745 -86.44754791]
[-131.27593994 -101.38730621]
[-122.49586487 -113.83038330]
[-109.41049194 -121.62094879]
[-94.28693390 -123.40923309]
[-79.74544525 -118.88541412]
[-68.30542755 -108.83325958]
[-61.94892120 -94.99437714]
[-61.77724075 -79.76642609]
[-67.82012939 -65.78775024]
[-57.63230133 -54.77829361]
[-47.44446945 -43.76883316]
[-32.59744644 -43.45035553]
[-22.10870361 -32.43033218]
[-22.54342079 -16.85956383]
[-12.35559177 -5.85010767]
[-5.51159668 -3.07808375]
[-2.10313749 5.38694334]
[12.73792839 5.91454601]
[23.07038498 17.08123779]
[22.41636086 32.64433289]
[32.44808197 43.79621887]
[42.47980499 54.94810486]
[52.51153183 66.09999084]
[62.54325485 77.25186920]
[72.57497406 88.40375519]
[77.56902313 76.80558777]
[87.54241180 67.55205536]
[101.32283020 62.77569962]
[105.08591461 48.25539780]
[108.84900665 33.73509598]
[112.61209106 19.21479416]
[116.37517548 4.69449186]
[105.36979675 -6.01892185]
[101.21101379 -20.80405235]
[105.01751709 -35.68377304]
[115.76537323 -46.65551758]
[130.56347656 -50.76793671]
[145.43118286 -46.91481400]
[156.36918640 -36.13261795]
[160.43519592 -21.32170486]
[156.53549194 -6.46613836]
[145.71907043 4.43800974]
[130.89547729 8.45757961]
[127.13239288 22.97788239]
[123.36930847 37.49818420]
[119.60621643 52.01848602]
[115.84313202 66.53878784]
[120.74005127 72.21947479]
[131.00387573 61.28082657]
[141.26770020 50.34218216]
[151.53152466 39.40354156]
[159.66601562 26.80075836]
[174.63018799 25.76461601]
[184.42398071 37.12601471]
[181.19358826 51.77403641]
[167.52961731 57.96216202]
[155.19770813 66.50171661]
[142.86579895 75.04128265]
[130.53388977 83.58084106]
[135.43081665 89.26152039]
[150.34716797 87.67958832]
[165.26351929 86.09764862]
[180.17985535 84.51570892]
[195.09620667 82.93377686]
[210.01255798 81.35183716]
[213.81996155 65.14685822]
[222.93386841 51.24794769]
[236.23680115 41.32718277]
[252.10862732 36.57083893]
[268.62384033 37.53755188]
[283.78518677 44.09279251]
[295.76513672 55.42723083]
[303.12631226 70.15665436]
[317.99218750 68.15512085]
[332.85803223 66.15358734]
[340.10327148 52.43184662]
[354.04504395 45.61960602]
[369.32244873 48.33631134]
[380.06103516 59.53733063]
[382.13156128 74.91564178]
[374.73788452 88.55797577]
[360.72302246 95.21857452]
[345.47598267 92.33630371]
[334.85955811 81.01944733]
[319.99371338 83.02098083]
[305.12783813 85.02251434]
[302.93420410 98.30188751]
[297.08410645 110.44202423]
[288.04208374 120.45709229]
[276.53231812 127.53089142]
[263.48059082 131.08334351]
[249.93984985 130.81805420]
[237.00521851 126.74701691]
[225.72552490 119.19040680]
[217.01815796 108.75143433]
[211.59449768 96.26818848]
[196.67814636 97.85012054]
[181.76179504 99.43206024]
[166.84544373 101.01399994]
[151.92910767 102.59593201]
[137.01275635 104.17787170]
[132.67672729 115.53227234]
[125.08455658 124.57002258]
[115.24983215 130.43916321]
[104.37725067 132.68635559]
[93.71683502 131.28604126]
[84.42069244 126.61946106]
[77.41846466 119.40821838]
[71.26597595 133.08837891]
[65.11348724 146.76853943]
[59.05751801 160.49171448]
[53.09835815 174.25718689]
[47.13920212 188.02267456]
[41.18004608 201.78814697]
[50.26159286 209.15496826]
[57.14154816 218.73405457]
[61.29175186 229.88021851]
[62.37009048 241.82536316]
[60.24810791 253.73144531]
[55.02372742 264.74923706]
[47.01801300 274.07891846]
[36.75582886 281.02804565]
[24.93163490 285.06283569]
[12.36256409 285.84887695]
[-0.06802721 283.27822876]
[-5.24243164 297.35748291]
[-10.41683578 311.43673706]
[-15.59124088 325.51602173]
[-8.56944084 337.00372314]
[-9.43056965 350.24499512]
[-17.63700485 360.42352295]
[-30.02035904 363.96627808]
[-35.39258957 377.97122192]
[-40.76482010 391.97619629]
[-46.03826904 406.01867676]
[-51.21267319 420.09793091]
[-56.38707733 434.17718506]
[-44.85001755 424.59094238]
[-30.54437065 420.08001709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 27]
[13 26]
[14 25]
[15 24]
[28 220]
[29 219]
[30 218]
[32 217]
[33 216]
[34 215]
[37 211]
[38 210]
[39 209]
[40 208]
[41 50]
[42 49]
[43 48]
[55 197]
[56 196]
[57 195]
[58 194]
[60 193]
[61 192]
[62 191]
[63 108]
[64 107]
[65 106]
[66 105]
[67 104]
[68 103]
[71 100]
[72 98]
[73 97]
[76 94]
[77 93]
[78 92]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[143 184]
[144 183]
[145 182]
[146 181]
[147 180]
[148 179]
[156 169]
[157 168]
[158 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
