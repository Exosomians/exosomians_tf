%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:11 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGCUUCGACGCGCGAGCCAGCUUCUCCUGCUGGUAGGGGCUAUCUCCUCCUGGCCAGAAGCCAGUUCCCAUAUGCUCAUCGACGCGAGGGGACGAUCUUGGAGGUUUGUUCGAGAGUUCCAGGUAAACAUCCUCUUGCAUCCCAUCAGUUCGAAGGUUCUGAGGUCUGUGUAGGUUUACUCCGCGACGUACACCGUCAGACGGAAAGAAAAC\
) } def
/len { sequence length } bind def

/coor [
[35.55345154 141.70376587]
[25.10223198 152.46350098]
[14.65101337 163.22325134]
[4.19979525 173.98298645]
[-6.25142336 184.74272156]
[-7.16242361 188.97950745]
[-9.17057991 192.36695862]
[-11.87487030 194.66476440]
[-14.83742237 195.78720093]
[-17.63705254 195.80189514]
[-28.69621277 205.93574524]
[-33.82644653 223.62263489]
[-51.09692383 226.74571228]
[-62.00753021 237.03933716]
[-66.73575592 252.13749695]
[-81.30289459 255.24357605]
[-81.92453766 270.80798340]
[-93.13607788 281.09176636]
[-107.97055054 280.40319824]
[-118.88115692 290.69683838]
[-129.79176331 300.99044800]
[-140.70236206 311.28408813]
[-151.61296082 321.57769775]
[-162.52357483 331.87133789]
[-161.43376160 347.47088623]
[-170.66789246 360.09091187]
[-185.86589050 363.77258301]
[-199.85173035 356.77755737]
[-206.02172852 342.40866089]
[-201.46258545 327.45043945]
[-188.32699585 318.96572876]
[-172.81719971 320.96072388]
[-161.90658569 310.66711426]
[-150.99598694 300.37347412]
[-140.08538818 290.07986450]
[-129.17477417 279.78622437]
[-118.26417542 269.49261475]
[-118.08902740 254.64320374]
[-107.17075348 244.04856873]
[-91.59651947 244.33296204]
[-87.64869690 229.97106934]
[-72.30115509 226.12873840]
[-61.39054871 215.83511353]
[-60.72620392 203.75917053]
[-51.72393799 195.09414673]
[-38.83006668 194.87658691]
[-27.77090645 184.74272156]
[-17.01116371 174.29150391]
[-6.55994606 163.53176880]
[3.89127254 152.77203369]
[14.34249115 142.01228333]
[24.79370880 131.25254822]
[20.17920876 116.97997284]
[5.40709209 114.37525177]
[-9.36502457 111.77052307]
[-24.13714027 109.16580200]
[-38.90925598 106.56108093]
[-52.82279587 114.54813385]
[-67.68869781 108.51617432]
[-72.10311127 93.09240723]
[-62.67968369 80.10862732]
[-46.64725494 79.52487946]
[-36.30453491 91.78896332]
[-21.53241730 94.39368439]
[-6.76030159 96.99841309]
[8.01181507 99.60313416]
[22.78393173 102.20785522]
[37.27281952 98.32556915]
[48.76348495 88.68375397]
[60.25415039 79.04193878]
[71.74481964 69.40012360]
[58.60118866 76.62819672]
[43.63783646 77.67610168]
[29.61505318 72.35054779]
[19.11961746 61.63393402]
[14.08762550 47.50315094]
[15.44732571 32.56490326]
[22.94789505 19.57485008]
[35.20570374 10.92926502]
[49.95955276 8.22299862]
[64.48780823 11.95527554]
[76.11043549 21.43760300]
[82.68341064 34.92077637]
[82.99481964 49.91455460]
[85.59954071 35.14244080]
[80.37615967 20.20835495]
[90.20598602 9.01800632]
[92.81070709 -5.75410986]
[95.41542816 -20.52622604]
[98.02014923 -35.29834366]
[100.62487030 -50.07045746]
[103.22959900 -64.84257507]
[105.83432007 -79.61469269]
[108.43904114 -94.38681030]
[111.04376221 -109.15892029]
[105.82038879 -124.09300995]
[115.65020752 -135.28335571]
[104.19981384 -150.38015747]
[107.36997986 -168.73684692]
[122.68601990 -178.76849365]
[124.86000061 -193.61012268]
[127.03397369 -208.45175171]
[129.20794678 -223.29336548]
[131.38192749 -238.13499451]
[133.55590820 -252.97662354]
[135.72988892 -267.81823730]
[130.07437134 -282.59408569]
[139.57455444 -294.06561279]
[141.74853516 -308.90722656]
[143.92251587 -323.74884033]
[135.53417969 -337.42419434]
[141.13121033 -352.45925903]
[156.42005920 -357.32040405]
[169.67242432 -348.27859497]
[170.72221375 -332.26992798]
[158.76414490 -321.57485962]
[156.59016418 -306.73324585]
[154.41618347 -291.89163208]
[160.22720337 -278.17733765]
[150.57151794 -265.64425659]
[148.39753723 -250.80264282]
[146.22355652 -235.96101379]
[144.04957581 -221.11938477]
[141.87559509 -206.27777100]
[139.70162964 -191.43614197]
[137.52764893 -176.59451294]
[146.15927124 -169.14059448]
[150.16389465 -158.33425903]
[148.43878174 -146.81842041]
[141.29789734 -137.46943665]
[130.42231750 -132.67863464]
[135.83201599 -118.80114746]
[125.81587982 -106.55419922]
[123.21115875 -91.78208160]
[120.60643768 -77.00997162]
[118.00171661 -62.23785400]
[115.39698792 -47.46573639]
[112.79226685 -32.69361877]
[110.18754578 -17.92150307]
[107.58282471 -3.14938736]
[104.97809601 11.62272930]
[110.38778687 25.50021362]
[100.37165833 37.74716187]
[97.76693726 52.51927948]
[108.97231293 62.49121475]
[123.34215546 58.18916702]
[134.34349060 46.81898117]
[148.75517273 50.58100891]
[163.12501526 46.27896118]
[171.97401428 32.89708710]
[187.96582031 31.61563873]
[198.83285522 43.41763306]
[196.23887634 59.24958801]
[182.17375183 66.96658325]
[167.42706299 60.64880371]
[153.05722046 64.95085144]
[143.08370972 76.01332855]
[127.64420319 72.55901337]
[113.27436066 76.86106110]
[121.95723724 90.35019684]
[120.77044678 104.68415070]
[133.30276489 112.92678070]
[145.83508301 121.16941833]
[158.36740112 129.41204834]
[170.89971924 137.65467834]
[186.68130493 138.77359009]
[193.06307983 152.23175049]
[198.26670837 152.53344727]
[202.42054749 154.59304810]
[205.03117371 157.71720886]
[205.95140076 161.11727905]
[218.11225891 169.89872742]
[230.27310181 178.68017578]
[242.43395996 187.46160889]
[254.59480286 196.24305725]
[270.31256104 198.04927063]
[276.10122681 211.77299500]
[288.26208496 220.55444336]
[300.42291260 229.33587646]
[315.12399292 224.37016296]
[329.92611694 229.02600098]
[339.13757324 241.51315308]
[339.21636963 257.03002930]
[330.13220215 269.61007690]
[315.37814331 274.41601562]
[300.62741089 269.59988403]
[291.55194092 257.01354980]
[291.64147949 241.49673462]
[279.48062134 232.71528625]
[267.31979370 223.93385315]
[252.47184753 222.75573730]
[245.81336975 208.40390015]
[233.65251160 199.62246704]
[221.49166870 190.84101868]
[209.33081055 182.05957031]
[197.16996765 173.27813721]
[184.82043457 164.76406860]
[169.93524170 164.23474121]
[162.65708923 150.18699646]
[150.12477112 141.94436646]
[137.59245300 133.70173645]
[125.06012726 125.45909882]
[112.52781677 117.21646118]
[81.66602325 115.46298981]
[81.38663483 80.89079285]
[69.89596558 90.53260803]
[58.40530014 100.17442322]
[46.91463089 109.81623840]
[61.28103638 105.50272369]
[75.77879333 109.35174561]
[86.11371613 120.22324371]
[89.22462463 134.89710999]
[84.19007111 149.02697754]
[72.50128937 158.42764282]
[57.62045670 160.31463623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 52]
[2 51]
[3 50]
[4 49]
[5 48]
[10 47]
[11 46]
[13 43]
[14 42]
[16 40]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[53 67]
[54 66]
[55 65]
[56 64]
[57 63]
[68 208]
[69 207]
[70 206]
[71 205]
[84 144]
[85 143]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
[97 131]
[100 126]
[101 125]
[102 124]
[103 123]
[104 122]
[105 121]
[106 120]
[108 118]
[109 117]
[110 116]
[145 159]
[146 158]
[148 156]
[149 155]
[161 203]
[162 202]
[163 201]
[164 200]
[165 199]
[167 197]
[171 196]
[172 195]
[173 194]
[174 193]
[175 192]
[177 190]
[178 189]
[179 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
