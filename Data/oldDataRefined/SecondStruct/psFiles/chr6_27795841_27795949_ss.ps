%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:06 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUUUUUUUCUCGGUUCUUCCAGGGUGGCUCUAAACUUGAGCCUAGCGACCUAAGUUUCAGGUCUCACGAUUGGUAAUGUGGUACCCCGGUGGAUAUUCGGACGAAU\
) } def
/len { sequence length } bind def

/coor [
[69.48336029 442.61114502]
[55.77529144 449.88220215]
[40.41615677 447.67391968]
[29.31185913 436.83535767]
[26.73222733 421.53421021]
[33.66917801 407.65405273]
[47.45531845 400.53213501]
[49.59004211 385.68481445]
[51.72476578 370.83749390]
[45.87749863 357.13861084]
[55.50001144 344.58004761]
[57.63473511 329.73272705]
[55.43887711 322.55740356]
[60.04826736 314.49429321]
[62.60609818 299.71398926]
[65.16393280 284.93368530]
[57.07582855 267.46795654]
[69.85047150 252.00318909]
[71.56034851 237.10095215]
[73.27021790 222.19873047]
[67.03414917 208.67243958]
[76.29412079 195.84419250]
[78.00399017 180.94197083]
[71.76792145 167.41567993]
[81.02789307 154.58744812]
[82.73776245 139.68521118]
[84.44763184 124.78298950]
[86.15750122 109.88076019]
[79.53918457 96.41978455]
[66.69395447 88.67382812]
[53.84871674 80.92786407]
[41.00347900 73.18190002]
[28.15824509 65.43593597]
[13.42418480 70.67440033]
[-1.21185493 65.16800690]
[-8.83918285 51.51671219]
[-5.85640907 36.16623688]
[6.32809305 26.36460876]
[21.96117401 26.73985481]
[33.66136932 37.11479568]
[35.90420532 52.59070206]
[48.74944305 60.33666611]
[61.59467697 68.08262634]
[74.43991089 75.82859039]
[87.28514862 83.57455444]
[94.10739136 80.45893860]
[87.87637329 66.81436157]
[101.52104950 60.58356094]
[107.75186920 74.22771454]
[114.57411194 71.11209869]
[117.13194275 56.33179474]
[119.68977356 41.55148697]
[122.24760437 26.77117920]
[124.80544281 11.99087143]
[114.57827759 0.16128397]
[114.39941406 -15.47527695]
[124.35331726 -27.53570557]
[139.74005127 -30.32543564]
[153.29446411 -22.52724266]
[158.61657715 -7.82319450]
[153.19346619 6.84390640]
[139.58575439 14.54870415]
[137.02790833 29.32901192]
[134.47007751 44.10931778]
[131.91224670 58.88962555]
[129.35441589 73.66993713]
[141.10093689 82.99833679]
[154.91780090 77.15928650]
[168.73464966 71.32023621]
[182.55151367 65.48118591]
[196.36836243 59.64213181]
[199.75163269 44.49838257]
[211.41226196 34.26074600]
[226.86651611 32.86579514]
[240.17190552 40.84992599]
[246.21223450 55.14307022]
[242.66488647 70.24922943]
[230.89387512 80.35976410]
[215.42539978 81.58698273]
[202.20741272 73.45898438]
[188.39056396 79.29803467]
[174.57369995 85.13709259]
[160.75685120 90.97614288]
[146.93998718 96.81519318]
[122.33046722 119.03649139]
[101.05973053 111.59063721]
[99.34986115 126.49285889]
[97.63998413 141.39508057]
[95.93011475 156.29731750]
[102.04388428 170.88951111]
[92.90621185 182.65184021]
[91.19634247 197.55407715]
[97.31011200 212.14627075]
[88.17244720 223.90859985]
[86.46257019 238.81082153]
[84.75270081 253.71305847]
[92.11141205 261.97628784]
[93.59183502 272.71817017]
[88.93647003 282.26559448]
[79.94423676 287.49151611]
[77.38640594 302.27182007]
[74.82857513 317.05212402]
[72.48205566 331.86746216]
[70.34733582 346.71478271]
[76.04190826 361.47561646]
[66.57208252 372.97219849]
[64.43736267 387.81951904]
[62.30263901 402.66683960]
[73.52386475 413.38430786]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 108]
[8 107]
[9 106]
[11 104]
[12 103]
[14 102]
[15 101]
[16 100]
[18 96]
[19 95]
[20 94]
[22 92]
[23 91]
[25 89]
[26 88]
[27 87]
[28 86]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[50 66]
[51 65]
[52 64]
[53 63]
[54 62]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
