%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:45 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGCCUCCCCCACGUGGCAAGGACCUCCAUGACGUUAUGGUCCAGCUACGCACCUCACCUGCCUCGUUCGAGGAUAAGGUAGAGGGACGAGGUUUUUAGGUAAAUUAUAUAACAGGAGCCUAUCUCCUGCAUAGUCUAUAAUUUGACUAUUCUUGUCUAUGAUGUGAACUAGAAUCGGUUUUCCGGCUCUUCGCUA\
) } def
/len { sequence length } bind def

/coor [
[98.92913055 139.05238342]
[91.53193665 140.28991699]
[88.01299286 154.87130737]
[84.49404144 169.45269775]
[80.97509766 184.03408813]
[86.13054657 199.60179138]
[75.02562714 211.66880798]
[59.08413315 207.82162476]
[54.70530319 192.01789856]
[66.39369965 180.51513672]
[69.91265106 165.93374634]
[73.43159485 151.35235596]
[76.95054626 136.77096558]
[75.78974152 129.19947815]
[76.16294098 122.03826141]
[63.09434509 129.40113831]
[50.02575302 136.76400757]
[36.95715714 144.12686157]
[23.88856316 151.48973083]
[10.81996822 158.85260010]
[6.60208416 171.04841614]
[-4.44241858 176.91012573]
[-16.13196182 173.77487183]
[-29.31515884 180.93051147]
[-42.49835968 188.08615112]
[-55.68155670 195.24180603]
[-68.86475372 202.39744568]
[-67.62983704 217.57621765]
[-72.68157196 231.94284058]
[-83.14471436 243.00822449]
[-97.20645142 248.85520935]
[-112.43051910 248.47077942]
[-126.17923737 241.92155457]
[-136.07057190 230.34219360]
[-140.39079285 215.73892212]
[-138.39137268 200.64183044]
[-130.41874695 187.66658020]
[-117.85420990 179.06121826]
[-102.87464142 176.31666565]
[-88.07535553 179.90844727]
[-76.02040100 189.21424866]
[-62.83720398 182.05860901]
[-49.65400314 174.90295410]
[-36.47080612 167.74731445]
[-23.28760910 160.59165955]
[-14.94192123 145.15890503]
[3.45709991 145.78401184]
[16.52569389 138.42114258]
[29.59428978 131.05827332]
[42.66288376 123.69540405]
[55.73147964 116.33253479]
[68.80007172 108.96966553]
[66.41082001 95.01257324]
[70.24488068 80.72775269]
[80.10388947 68.87005615]
[68.35536194 59.54417801]
[56.60682297 50.21830368]
[44.85828781 40.89242935]
[33.03651047 31.65958023]
[21.14221764 22.52033234]
[9.24792671 13.38108540]
[-2.64636421 4.24183798]
[-22.72406197 2.51252532]
[-29.34989738 -15.64694309]
[-41.52677155 -24.40615082]
[-53.70364761 -33.16535568]
[-65.88052368 -41.92456436]
[-82.24289703 -43.02220535]
[-89.22965240 -57.85855484]
[-79.65341949 -71.17124939]
[-63.36540222 -69.26532745]
[-57.12131882 -54.10144043]
[-44.94444275 -45.34223175]
[-32.76756668 -36.58302689]
[-20.59069061 -27.82381821]
[-10.68285275 -30.37189865]
[-0.80235475 -26.96940994]
[5.70403481 -18.51317406]
[6.49288321 -7.65245295]
[18.38717461 1.48679447]
[30.28146553 10.62604141]
[42.17575455 19.76528931]
[49.40221786 21.34939003]
[54.18416595 29.14389420]
[65.93270111 38.46976852]
[77.68123627 47.79564285]
[89.42977142 57.12151718]
[104.39192963 56.05679703]
[114.70149231 45.16125107]
[125.01105499 34.26570511]
[135.32061768 23.37015915]
[145.63018799 12.47461319]
[155.93974304 1.57906735]
[166.24929810 -9.31647873]
[151.97821045 -4.69740486]
[139.70382690 3.92462206]
[125.60829926 9.05456257]
[110.66337585 10.33876514]
[95.89932251 7.68869829]
[82.33396149 1.28705502]
[70.90247345 -8.42484474]
[62.39292145 -20.77747726]
[57.39194107 -34.91926575]
[56.24430084 -49.87529755]
[59.02910995 -64.61452484]
[65.55438995 -78.12084961]
[75.37030029 -89.46315002]
[87.80014801 -97.85951996]
[101.98702240 -102.73112488]
[116.95291138 -103.74210358]
[131.66609192 -100.82278442]
[145.11224365 -94.17440796]
[156.36442566 -84.25531006]
[164.64666748 -71.74979401]
[161.05221558 -57.18682861]
[171.18849182 -68.24376678]
[181.32476807 -79.30070496]
[191.46104431 -90.35764313]
[201.59733582 -101.41458130]
[211.73361206 -112.47151947]
[212.47665405 -128.49736023]
[225.55343628 -137.79129028]
[240.93257141 -133.22381592]
[246.81649780 -118.29870605]
[238.69157410 -104.46522522]
[222.79054260 -102.33524323]
[212.65426636 -91.27830505]
[202.51799011 -80.22136688]
[192.38171387 -69.16442871]
[182.24543762 -58.10749054]
[172.10916138 -47.05055237]
[175.84205627 -40.54551697]
[187.04074097 -21.03041267]
[201.70137024 -24.20311356]
[216.36199951 -27.37581444]
[231.02262878 -30.54851341]
[245.68325806 -33.72121429]
[260.34387207 -36.89391708]
[266.47952271 -51.14640808]
[279.83792114 -59.04150772]
[295.28250122 -57.54339600]
[306.87451172 -47.22811890]
[310.15658569 -32.06211472]
[303.86669922 -17.87702370]
[290.42343140 -10.12729836]
[274.99600220 -11.79286957]
[263.51657104 -22.23328972]
[248.85595703 -19.06058884]
[234.19532776 -15.88788795]
[219.53469849 -12.71518707]
[204.87406921 -9.54248619]
[190.21343994 -6.36978531]
[177.14485168 0.99308318]
[166.83529663 11.88862991]
[156.52572632 22.78417587]
[146.21617126 33.67972183]
[135.90660095 44.57526779]
[125.59703827 55.47081375]
[115.28747559 66.36636353]
[124.01938629 70.72605896]
[131.49758911 77.36238098]
[137.12748718 85.91191101]
[140.42050171 95.85608673]
[141.03439331 106.55230713]
[138.80439758 117.27531433]
[133.76275635 127.26642609]
[141.83610535 139.90844727]
[149.90946960 152.55047607]
[157.98283386 165.19250488]
[162.63420105 167.60424805]
[165.59336853 171.20227051]
[166.69190979 175.14065552]
[166.12261963 178.62971497]
[173.58842468 191.63978577]
[181.05421448 204.64985657]
[194.63368225 212.76826477]
[194.25744629 227.65811157]
[201.72323608 240.66818237]
[209.18902588 253.67825317]
[216.65483093 266.68832397]
[231.09933472 274.45288086]
[231.32676697 290.85043335]
[217.10316467 299.01263428]
[203.06054688 290.54284668]
[203.64476013 274.15411377]
[196.17895508 261.14404297]
[188.71316528 248.13398743]
[181.24737549 235.12391663]
[168.20190430 227.93606567]
[168.04414368 212.11564636]
[160.57835388 199.10557556]
[153.11254883 186.09550476]
[145.34080505 173.26586914]
[137.26744080 160.62384033]
[129.19407654 147.98181152]
[121.12071991 135.33978271]
[113.72352600 136.57731628]
[116.19834900 151.37174988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[5 10]
[15 52]
[16 51]
[17 50]
[18 49]
[19 48]
[20 47]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[55 87]
[56 86]
[57 85]
[58 84]
[59 82]
[60 81]
[61 80]
[62 79]
[64 75]
[65 74]
[66 73]
[67 72]
[88 159]
[89 158]
[90 157]
[91 156]
[92 155]
[93 154]
[94 153]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[133 152]
[134 151]
[135 150]
[136 149]
[137 148]
[138 147]
[166 196]
[167 195]
[168 194]
[169 193]
[173 192]
[174 191]
[175 190]
[177 188]
[178 187]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
