%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:50 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUUCUUUGGAACGCUCGUGUCGGGGAGAGCUGUGGGGUCCACCCUGAGCUUGGGUGUUAGGGACCGAAUCCUCCGGUCACGGAAUAGGUAAUCCGGUGACCCCGCGCCA\
) } def
/len { sequence length } bind def

/coor [
[-18.55718613 163.50102234]
[-30.95635796 171.94261169]
[-43.35552979 180.38421631]
[-55.75470352 188.82580566]
[-68.15387726 197.26739502]
[-80.55304718 205.70899963]
[-92.95221710 214.15058899]
[-105.35139465 222.59217834]
[-117.75056458 231.03378296]
[-130.14973450 239.47537231]
[-142.54890442 247.91697693]
[-154.94807434 256.35855103]
[-162.00111389 270.52066040]
[-176.87597656 271.28750610]
[-189.27514648 279.72909546]
[-195.90902710 294.72653198]
[-212.24084473 296.21090698]
[-221.46984863 282.65518188]
[-214.10200500 268.00433350]
[-197.71673584 267.32992554]
[-185.31756592 258.88833618]
[-179.15139771 245.33001709]
[-163.38967896 243.95939636]
[-150.99050903 235.51779175]
[-138.59132385 227.07620239]
[-126.19216156 218.63461304]
[-113.79298401 210.19300842]
[-101.39381409 201.75141907]
[-88.99464417 193.30981445]
[-76.59546661 184.86822510]
[-64.19629669 176.42663574]
[-51.79712677 167.98503113]
[-39.39795303 159.54344177]
[-26.99878120 151.10185242]
[-15.21580029 141.81953430]
[-4.10591030 131.74131775]
[7.00397921 121.66310883]
[18.11386871 111.58489990]
[29.22375870 101.50668335]
[40.33364868 91.42847443]
[51.44353867 81.35026550]
[62.55342865 71.27204895]
[66.46926880 56.79219818]
[61.95316315 42.48818588]
[57.43704987 28.18417358]
[52.92094040 13.88016319]
[48.40483093 -0.42384869]
[33.88706970 -6.23492813]
[26.54671669 -20.04265213]
[29.84965897 -35.32743454]
[42.23635101 -44.87226868]
[57.85817337 -44.17037582]
[69.33898163 -33.55316925]
[71.25788879 -18.03376770]
[62.70884323 -4.93995953]
[67.22495270 9.36405182]
[71.74106598 23.66806412]
[76.25717163 37.97207642]
[80.77328491 52.27608490]
[87.92529297 54.53414154]
[87.80036926 39.53466034]
[102.02718353 34.78094101]
[110.94441223 46.84257126]
[102.22930145 59.05025101]
[109.38130951 61.30830765]
[121.29217529 52.19067764]
[133.20304871 43.07304764]
[145.11392212 33.95541763]
[157.02478027 24.83778763]
[157.54418945 9.20883274]
[168.02659607 -2.39518595]
[183.52252197 -4.49520588]
[196.71528625 3.90033841]
[201.37564087 18.82732773]
[195.30313110 33.23769379]
[181.36500549 40.32730103]
[166.14241028 36.74865723]
[154.23155212 45.86628723]
[142.32067871 54.98391724]
[130.40980530 64.10154724]
[118.49893951 73.21917725]
[124.31883240 86.96192932]
[122.63440704 99.59339905]
[136.87426758 104.30790710]
[151.11412048 109.02240753]
[165.35397339 113.73691559]
[177.87904358 104.57711029]
[193.39611816 104.56238556]
[205.93855286 113.69841766]
[210.68351746 128.47219849]
[205.80650330 143.20292664]
[193.18280029 152.22633362]
[177.66647339 152.07272339]
[165.22389221 142.80116272]
[160.63946533 127.97676849]
[146.39961243 123.26226044]
[132.15975952 118.54776001]
[117.91990662 113.83325195]
[97.27281952 125.79788208]
[73.62512207 112.63518524]
[72.63163757 82.38194275]
[61.52175140 92.46015167]
[50.41186142 102.53836060]
[39.30197144 112.61657715]
[28.19208145 122.69478607]
[17.08219147 132.77299500]
[5.97230101 142.85121155]
[-5.13758898 152.92942810]
[9.28754139 157.04228210]
[15.32737732 170.77255249]
[8.61155128 184.18515015]
[-6.00042963 187.57484436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[5 30]
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[14 21]
[15 20]
[35 108]
[36 107]
[37 106]
[38 105]
[39 104]
[40 103]
[41 102]
[42 101]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[83 98]
[84 97]
[85 96]
[86 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
