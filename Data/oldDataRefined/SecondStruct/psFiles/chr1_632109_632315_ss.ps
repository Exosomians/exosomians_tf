%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:16:48 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUUGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAGUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAA\
) } def
/len { sequence length } bind def

/coor [
[91.31835175 516.92681885]
[80.41551971 506.33453369]
[74.40069580 492.37420654]
[74.19110870 477.17471313]
[79.81871033 463.05386353]
[90.42533875 452.16497803]
[104.39354706 446.16851807]
[104.16699982 431.17022705]
[103.94045258 416.17193604]
[103.71390533 401.17364502]
[103.48735809 386.17538452]
[95.55871582 373.56640625]
[103.08670807 359.65093994]
[102.86015320 344.65264893]
[102.63360596 329.65438843]
[102.40705872 314.65609741]
[102.18051147 299.65780640]
[101.95396423 284.65951538]
[101.50091553 269.66635132]
[100.82147980 254.68174744]
[100.14203644 239.69714355]
[99.46260071 224.71253967]
[98.78316498 209.72793579]
[98.10372162 194.74333191]
[97.31114197 179.76428223]
[96.40546417 164.79165649]
[87.91382599 152.55476379]
[94.80377960 138.31260681]
[93.89810181 123.33997345]
[79.84063721 113.25094604]
[76.15406799 96.34503174]
[62.76845932 89.57557678]
[49.38285065 82.80612946]
[33.57611847 83.48271179]
[25.71045113 70.83437347]
[12.32484436 64.06491852]
[-1.06076360 57.29546356]
[-15.91235161 61.99313354]
[-29.39082718 54.93726349]
[-33.77781296 40.74959183]
[-47.16342163 33.98014069]
[-60.54902649 27.21068573]
[-73.93463898 20.44123268]
[-87.32024384 13.67177868]
[-100.70584869 6.90232468]
[-114.09146118 0.13287109]
[-127.47706604 -6.63658237]
[-121.21015930 6.99154425]
[-123.19911957 21.85909462]
[-132.82785034 33.36072540]
[-147.11376953 37.93371582]
[-161.63172913 34.16154861]
[-171.88464355 23.21267891]
[-174.69659424 8.47860622]
[-169.19657898 -5.47667170]
[-157.08825684 -14.33039856]
[-142.12353516 -15.34033775]
[-154.46829224 -23.86130905]
[-166.81304932 -32.38227844]
[-182.56565857 -33.85399628]
[-188.64471436 -47.45158768]
[-200.98947144 -55.97255707]
[-213.33422852 -64.49353027]
[-225.67898560 -73.01449585]
[-241.43159485 -74.48622131]
[-247.51065063 -88.08380890]
[-259.85540771 -96.60477448]
[-272.20016479 -105.12574768]
[-284.54492188 -113.64672089]
[-300.52087402 -112.18083191]
[-311.52334595 -123.85665131]
[-309.11221313 -139.71748352]
[-295.13708496 -147.59625244]
[-280.31848145 -141.44905090]
[-276.02395630 -125.99147797]
[-263.67919922 -117.47050476]
[-251.33442688 -108.94953156]
[-238.98966980 -100.42856598]
[-224.12005615 -99.56632233]
[-217.15802002 -85.35926056]
[-204.81326294 -76.83828735]
[-192.46850586 -68.31731415]
[-180.12374878 -59.79634476]
[-165.25411987 -58.93410110]
[-158.29208374 -44.72703934]
[-145.94732666 -36.20606613]
[-133.60256958 -27.68509483]
[-120.70761108 -20.02219009]
[-107.32200623 -13.25273705]
[-93.93639374 -6.48328304]
[-80.55078888 0.28617069]
[-67.16518402 7.05562449]
[-53.77957535 13.82507801]
[-40.39396667 20.59453201]
[-27.00835800 27.36398506]
[-12.98088455 22.48899269]
[0.69045883 29.16349792]
[5.70869017 43.90985870]
[19.09429741 50.67930984]
[32.47990417 57.44876480]
[47.32920837 56.28797913]
[56.15230179 69.42051697]
[69.53791046 76.18997192]
[82.92351532 82.95942688]
[99.27136993 75.88658905]
[116.01644135 81.95946503]
[128.96890259 74.39415741]
[141.92135620 66.82884979]
[154.87380981 59.26354599]
[158.99252319 44.24109650]
[172.23593140 36.75331116]
[186.53215027 40.77245331]
[199.48461914 33.20714951]
[212.43707275 25.64184189]
[225.38952637 18.07653618]
[238.34197998 10.51122952]
[251.29444885 2.94592357]
[264.24688721 -4.61938238]
[277.19934082 -12.18468857]
[275.35665894 -22.81026840]
[276.64434814 -33.49240875]
[280.93951416 -43.33044052]
[287.86633301 -51.49897766]
[296.82876587 -57.31717300]
[307.06204224 -60.30545425]
[317.69772339 -60.22501755]
[327.83740234 -57.09686661]
[336.62878418 -51.19882202]
[348.71057129 -60.08875656]
[360.79232788 -68.97869110]
[365.85125732 -76.58715057]
[373.12435913 -77.91001892]
[385.33901978 -86.61646271]
[391.64865112 -101.75319672]
[407.94476318 -103.58863068]
[417.46331787 -90.23463440]
[410.41244507 -75.42864990]
[394.04547119 -74.40180969]
[381.83081055 -65.69535828]
[369.68225098 -56.89692307]
[357.60049438 -48.00698853]
[345.51870728 -39.11705780]
[345.57604980 -38.99029922]
[345.63290405 -38.86332703]
[360.29882812 -42.01154327]
[374.96472168 -45.15975952]
[384.84771729 -57.79725647]
[400.89074707 -57.80569458]
[410.78701782 -45.17860413]
[406.94494629 -29.60240555]
[392.31182861 -23.02582741]
[378.11294556 -30.49385643]
[363.44705200 -27.34564018]
[348.78112793 -24.19742203]
[342.59378052 -3.42062354]
[325.62057495 10.24723148]
[303.77557373 11.87825680]
[284.76464844 0.76776832]
[271.81219482 8.33307457]
[258.85974121 15.89838028]
[245.90728760 23.46368599]
[232.95483398 31.02899361]
[220.00238037 38.59429932]
[207.04992676 46.15960312]
[194.09745789 53.72491074]
[190.57511902 68.15157318]
[177.54724121 76.00838470]
[162.43911743 72.21600342]
[149.48666382 79.78131104]
[136.53421021 87.34661102]
[123.58174896 94.91191864]
[123.89112091 103.34690094]
[121.27583313 111.37216949]
[116.05604553 118.00530243]
[108.87073517 122.43429565]
[109.77641296 137.40692139]
[118.33282471 150.71475220]
[111.37809753 163.88597107]
[112.28377533 178.85861206]
[115.92635345 187.23794556]
[113.08832550 194.06388855]
[113.76776886 209.04849243]
[114.44720459 224.03309631]
[115.12664032 239.01770020]
[115.80608368 254.00230408]
[116.48551941 268.98690796]
[119.72146606 274.75668335]
[119.57762146 280.44085693]
[116.95225525 284.43295288]
[117.17880249 299.43124390]
[117.40534973 314.42953491]
[117.63189697 329.42782593]
[117.85844421 344.42611694]
[118.08499146 359.42440796]
[126.02983856 373.10614014]
[118.48564148 385.94882202]
[118.71219635 400.94711304]
[118.93874359 415.94540405]
[119.16529083 430.94369507]
[119.39183807 445.94198608]
[133.53479004 451.51382446]
[144.46545410 462.07739258]
[150.51698303 476.02182007]
[150.76655579 491.22070312]
[145.17613220 505.35632324]
[134.59819031 516.27307129]
[120.64579773 522.30627441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[13 194]
[14 193]
[15 192]
[16 191]
[17 190]
[18 189]
[19 186]
[20 185]
[21 184]
[22 183]
[23 182]
[24 181]
[25 179]
[26 178]
[28 176]
[29 175]
[31 104]
[32 103]
[33 102]
[35 100]
[36 99]
[37 98]
[40 95]
[41 94]
[42 93]
[43 92]
[44 91]
[45 90]
[46 89]
[47 88]
[57 87]
[58 86]
[59 85]
[61 83]
[62 82]
[63 81]
[64 80]
[66 78]
[67 77]
[68 76]
[69 75]
[106 171]
[107 170]
[108 169]
[109 168]
[112 165]
[113 164]
[114 163]
[115 162]
[116 161]
[117 160]
[118 159]
[119 158]
[128 142]
[129 141]
[130 140]
[132 139]
[133 138]
[144 154]
[145 153]
[146 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
