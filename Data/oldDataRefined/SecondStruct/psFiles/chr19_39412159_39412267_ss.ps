%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:58 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUUUUCACGAGGUCCACUCCUAGCUUGAGUGUUGGAGCCGUAACGAGGCGAGCGUGACAGUAUAUUCAUGGCGCGCGAUUGGCUAACGCGGUGACCUCGAGGCCGG\
) } def
/len { sequence length } bind def

/coor [
[90.28477478 301.50234985]
[75.21231079 300.20779419]
[61.27837753 294.31704712]
[49.84808350 284.40728760]
[42.04125214 271.44934082]
[38.62271500 256.71267700]
[39.92739105 241.64108276]
[45.82745743 227.71110535]
[55.74488449 216.28744507]
[68.70806885 208.48930359]
[83.44699860 205.08064270]
[84.73062897 190.13566589]
[86.01425171 175.19068909]
[87.29787445 160.24571228]
[88.58150482 145.30073547]
[89.86512756 130.35575867]
[91.14875031 115.41078949]
[83.09996796 109.79486847]
[78.70516968 100.02313995]
[80.02678680 88.48190308]
[65.17946625 86.34718323]
[50.33214188 84.21245575]
[35.48482132 82.07773590]
[26.39195442 83.96988678]
[20.24638557 79.66420746]
[5.46607828 77.10636902]
[-9.31422901 74.54853821]
[-22.08548164 83.85824585]
[-37.68592072 81.32806396]
[-46.86008453 68.45909119]
[-44.16510010 52.88627625]
[-31.19985962 43.84868622]
[-15.65640640 46.70816422]
[-6.75639629 59.76823044]
[8.02391148 62.32606506]
[22.80421829 64.88389587]
[37.61954498 67.23041534]
[52.46686554 69.36513519]
[67.31418610 71.49985504]
[82.16150665 73.63458252]
[96.21575165 68.39261627]
[106.03866577 57.05637360]
[115.86157990 45.72013092]
[125.68448639 34.38388824]
[121.56150055 21.14296722]
[124.53419495 7.70868683]
[133.71237183 -2.39564514]
[146.59304810 -6.57506943]
[159.74237061 -3.82890463]
[169.88499451 -14.88002205]
[173.51594543 -30.27894402]
[187.82218933 -34.42388153]
[197.96481323 -45.47499847]
[208.10743713 -56.52611542]
[217.93034363 -67.86235809]
[227.42553711 -79.47447968]
[236.92071533 -91.08660889]
[246.41590881 -102.69873047]
[255.91110229 -114.31085205]
[258.65701294 -129.89195251]
[272.70330811 -134.84684753]
[282.19848633 -146.45898438]
[277.33346558 -161.09916687]
[281.17797852 -176.03982544]
[292.50524902 -186.51344299]
[307.70077515 -189.17791748]
[321.91574097 -183.18302917]
[330.61416626 -170.44172668]
[331.02044678 -155.01971436]
[323.00494385 -141.83810425]
[309.12533569 -135.10308838]
[293.81060791 -136.96379089]
[284.31542969 -125.35166931]
[282.24865723 -110.60115051]
[267.52322388 -104.81566620]
[258.02804565 -93.20354462]
[248.53285217 -81.59142303]
[239.03765869 -69.97929382]
[229.54246521 -58.36717224]
[229.14578247 -53.47033691]
[225.56843567 -48.81293869]
[219.15855408 -46.38349152]
[209.01593018 -35.33237457]
[198.87330627 -24.28125763]
[195.96783447 -9.67278481]
[180.93611145 -4.73739815]
[170.79348755 6.31371880]
[174.58250427 22.21556664]
[168.13166809 37.41562653]
[153.77748108 45.90660477]
[137.02073669 44.20679855]
[127.19782257 55.54304123]
[117.37490845 66.87928772]
[107.55200195 78.21553040]
[120.41340637 99.83377838]
[106.09372711 116.69441223]
[104.81010437 131.63938904]
[103.52648163 146.58436584]
[102.24285126 161.52934265]
[100.95922852 176.47431946]
[99.67560577 191.41929626]
[98.39197540 206.36427307]
[112.33379364 212.23631287]
[123.77735901 222.13076782]
[131.60154724 235.07824707]
[135.03982544 249.81030273]
[133.75535583 264.88363647]
[127.87396240 278.82150269]
[117.97184753 290.25842285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 102]
[12 101]
[13 100]
[14 99]
[15 98]
[16 97]
[17 96]
[20 40]
[21 39]
[22 38]
[23 37]
[25 36]
[26 35]
[27 34]
[41 94]
[42 93]
[43 92]
[44 91]
[49 87]
[50 86]
[52 84]
[53 83]
[54 82]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[61 73]
[62 72]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
