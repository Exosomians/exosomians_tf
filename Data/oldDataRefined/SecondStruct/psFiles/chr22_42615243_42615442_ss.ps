%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:20:20 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACGGAAUUUGAAUACUCAUUCCUUUUAUUGCUAAGCCCCACUGCGGGCUUAGGAGUGACGAUUACACUCUGCUUAAAAACUCGCCCAUUUCCAGCGGGAGUUCCACUGGGCGGAUGAAACGCCCUACGGACCCUCAACGCUAGACGGGCUGGAAUAAGUGCGGAUUUUUCAUCUGACUGACACCCCACCAGCACAAAA\
) } def
/len { sequence length } bind def

/coor [
[176.92720032 393.85226440]
[177.72682190 382.74285889]
[181.36735535 372.19998169]
[187.61044312 362.93844604]
[196.04106140 355.58831787]
[190.11183167 341.80990601]
[184.18260193 328.03152466]
[178.25335693 314.25314331]
[172.32412720 300.47473145]
[166.39489746 286.69635010]
[160.46565247 272.91793823]
[154.53642273 259.13955688]
[150.50242615 256.56930542]
[148.04460144 251.43392944]
[148.64466858 244.83663940]
[143.14897156 230.87965393]
[137.65327454 216.92266846]
[132.15757751 202.96569824]
[120.29526520 193.95820618]
[122.43844604 178.28282166]
[116.94274902 164.32585144]
[111.44704437 150.36886597]
[105.95134735 136.41189575]
[100.45564270 122.45491028]
[105.22442627 136.67668152]
[101.17819977 151.12063599]
[89.71522522 160.79536438]
[74.79679108 162.35752869]
[61.57830048 155.26728821]
[54.62769699 141.97483826]
[56.34691620 127.07369232]
[66.14184570 115.71326447]
[80.62797546 111.81941986]
[65.96065521 114.96102142]
[51.29333496 118.10262299]
[36.62601471 121.24423218]
[21.95869255 124.38583374]
[7.29137039 127.52743530]
[-7.37595129 130.66903687]
[-22.04327202 133.81065369]
[-30.41868591 147.21318054]
[-45.83660126 150.68643188]
[-59.14983749 142.16979980]
[-62.45989227 126.71601868]
[-53.80296707 113.49356842]
[-38.31506348 110.34708405]
[-25.18487740 119.14332581]
[-10.51755524 116.00172424]
[4.14976645 112.86011505]
[18.81708908 109.71851349]
[33.48440933 106.57691193]
[48.15173340 103.43530273]
[62.81905365 100.29370117]
[77.48637390 97.15209961]
[78.89099884 82.21800995]
[65.06668854 76.39662933]
[51.24237442 70.57524872]
[37.41806412 64.75387573]
[23.59375572 58.93249512]
[9.76450062 66.23220062]
[-5.51050043 62.88431549]
[-15.01885891 50.46960068]
[-14.27101994 34.84991074]
[-3.62008834 23.40038109]
[11.90489006 21.52713394]
[24.97349548 30.11465836]
[29.41513252 45.10818481]
[43.23944473 50.92956543]
[57.06375504 56.75094223]
[70.88806152 62.57231903]
[84.71237183 68.39369965]
[75.37131500 56.65723038]
[61.60916519 50.69039536]
[51.69910431 39.43025970]
[47.52878952 25.02163315]
[49.89257431 10.20905495]
[58.34021378 -2.18600035]
[71.26261139 -9.80253887]
[86.19832611 -11.18977356]
[100.30242920 -6.08346605]
[110.88838196 4.54374123]
[115.93979645 18.66759491]
[114.49448395 33.59780121]
[106.82737732 46.49086380]
[106.12198639 61.47426987]
[113.92445374 48.66327667]
[121.72692108 35.85228348]
[129.52938843 23.04129410]
[126.35252380 12.62793446]
[129.37338257 2.39710689]
[137.36135864 -4.33705854]
[147.51939392 -5.53264093]
[155.71846008 -18.09351158]
[156.78253174 -33.87889481]
[170.21846008 -40.30736542]
[178.41751099 -52.86823654]
[186.61657715 -65.42910767]
[194.81562805 -77.98997498]
[195.39190674 -96.39138794]
[211.33732605 -103.71190643]
[219.33906555 -116.39939117]
[227.34080505 -129.08686829]
[227.62940979 -147.49504089]
[243.45846558 -155.06388855]
[251.26092529 -167.87487793]
[259.06338501 -180.68586731]
[253.25088501 -194.95193481]
[256.91043091 -209.73236084]
[268.43521118 -219.40933228]
[283.27069092 -220.43222046]
[291.07315063 -233.24320984]
[298.87564087 -246.05419922]
[306.67810059 -258.86520386]
[314.48056030 -271.67617798]
[309.30706787 -286.43316650]
[314.87786865 -301.04483032]
[328.56262207 -308.61193848]
[343.89981079 -305.56158447]
[353.64767456 -293.33401489]
[353.20358276 -277.70275879]
[342.77719116 -266.04837036]
[327.29156494 -263.87371826]
[319.48907471 -251.06272888]
[311.68661499 -238.25172424]
[303.88415527 -225.44073486]
[296.08169556 -212.62974548]
[301.98022461 -198.97891235]
[298.67037964 -184.29869080]
[287.21704102 -174.26502991]
[271.87438965 -172.88339233]
[264.07192993 -160.07240295]
[256.26943970 -147.26141357]
[258.81951904 -135.43151855]
[252.41719055 -124.69264221]
[240.02827454 -121.08512878]
[232.02653503 -108.39765167]
[224.02479553 -95.71016693]
[226.38966370 -83.84186554]
[219.82028198 -73.20436096]
[207.37649536 -69.79091644]
[199.17744446 -57.23004913]
[190.97837830 -44.66917801]
[182.77932739 -32.10830688]
[182.30169678 -17.22136307]
[168.27932739 -9.89445496]
[160.08027649 2.66641593]
[160.44670105 21.99442863]
[142.34037781 30.84375954]
[134.53791809 43.65475082]
[126.73544312 56.46574402]
[118.93297577 69.27673340]
[129.08798218 97.78322601]
[114.41262054 116.95921326]
[119.90832520 130.91618347]
[125.40402222 144.87316895]
[130.89971924 158.83015442]
[136.39543152 172.78712463]
[148.65081787 182.79292297]
[146.11454773 197.47000122]
[151.61026001 211.42697144]
[157.10595703 225.38395691]
[162.60165405 239.34092712]
[168.31481934 253.21031189]
[174.24404907 266.98870850]
[180.17329407 280.76708984]
[186.10252380 294.54550171]
[192.03175354 308.32388306]
[197.96099854 322.10229492]
[203.89022827 335.88067627]
[209.81945801 349.65908813]
[229.08595276 349.66104126]
[246.37437439 358.05252075]
[258.23440552 373.11108398]
[262.31988525 391.78857422]
[257.85296631 410.32800293]
[245.77165222 425.01928711]
[252.75846863 438.29275513]
[259.53045654 444.43518066]
[259.74890137 451.82870483]
[266.52740479 465.20971680]
[273.30590820 478.59075928]
[288.66278076 480.06396484]
[300.77117920 489.62377930]
[305.76736450 504.21972656]
[302.05706787 519.19427490]
[290.82421875 529.76910400]
[275.65319824 532.56982422]
[261.38504028 526.70275879]
[252.57263184 514.04003906]
[252.02798462 498.62225342]
[259.92489624 485.36926270]
[253.14639282 471.98822021]
[246.36788940 458.60720825]
[239.48501587 445.27957153]
[232.49819946 432.00610352]
[221.65065002 434.00021362]
[210.64007568 433.13037109]
[200.21086121 429.44735718]
[191.07014465 423.19241333]
[183.83987427 414.78140259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 170]
[6 169]
[7 168]
[8 167]
[9 166]
[10 165]
[11 164]
[12 163]
[15 162]
[16 161]
[17 160]
[18 159]
[20 157]
[21 156]
[22 155]
[23 154]
[24 153]
[33 54]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
[85 151]
[86 150]
[87 149]
[88 148]
[92 146]
[93 145]
[95 143]
[96 142]
[97 141]
[98 140]
[100 137]
[101 136]
[102 135]
[104 132]
[105 131]
[106 130]
[110 126]
[111 125]
[112 124]
[113 123]
[114 122]
[176 195]
[177 194]
[179 193]
[180 192]
[181 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
