%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:20:14 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAGCCCGGCAGGCGGAGGAGCGCCCGCCCGCGCUGCUUCUUCGCAGCGCCCAGACACCGCGCCCCGGGGCCACCAGCACAGCGCACCCCCCGCCCACCAACCCCGCAGGCC\
) } def
/len { sequence length } bind def

/coor [
[89.21166992 252.99516296]
[85.52011871 267.90380859]
[74.85726166 278.95819092]
[60.09134293 283.18469238]
[45.19433212 279.44641113]
[34.17344666 268.74896240]
[29.99324799 253.96986389]
[33.77819061 239.08464050]
[44.51014328 228.09735107]
[59.30226135 223.96350098]
[62.95317459 209.41458130]
[66.60408783 194.86567688]
[58.75568008 182.25860596]
[62.25097275 167.45193481]
[75.52763367 159.30528259]
[79.17855072 144.75636292]
[82.82946014 130.20745850]
[86.48037720 115.65854645]
[83.53829956 104.04072571]
[87.71543884 95.13370514]
[77.32836151 84.31202698]
[69.00946808 80.21354675]
[66.81037903 73.05002594]
[56.72277069 61.94866562]
[46.63516235 50.84730530]
[36.54755402 39.74594879]
[20.32262802 46.05561447]
[2.95155025 45.74090576]
[-12.97046852 38.87516403]
[-25.07468414 26.50846481]
[-31.57122040 10.50712872]
[-31.51370430 -6.72793436]
[-24.93704987 -22.62144279]
[-35.89958954 -32.85974121]
[-46.86212921 -43.09803772]
[-57.82466888 -53.33633423]
[-68.78720856 -63.57463074]
[-79.74974823 -73.81292725]
[-90.71228790 -84.05122375]
[-106.49681854 -83.26123047]
[-118.16056824 -93.92578125]
[-118.78363037 -109.71778107]
[-107.99636841 -121.26811981]
[-92.19865417 -121.72418976]
[-80.76300812 -110.81541443]
[-80.47399139 -95.01376343]
[-69.51145172 -84.77546692]
[-58.54890823 -74.53717041]
[-47.58637238 -64.29887390]
[-36.62383270 -54.06057739]
[-25.66129112 -43.82228088]
[-14.69875240 -33.58398438]
[-3.53312898 -39.83733749]
[8.96838570 -42.65702438]
[21.77334404 -41.79963303]
[33.82123566 -37.32585144]
[44.11130524 -29.59632111]
[51.78569794 -19.24255562]
[56.20096207 -7.11537933]
[56.98199081 5.78500080]
[54.05386353 18.39148331]
[47.64891434 29.65834045]
[57.73652267 40.75969696]
[67.82412720 51.86105728]
[77.91173553 62.96241379]
[88.15003204 73.92495728]
[98.53710938 84.74662781]
[112.98087311 88.79357910]
[127.47856140 84.94429016]
[141.97624207 81.09500122]
[156.47393799 77.24570465]
[170.97161865 73.39641571]
[173.12014771 59.35519791]
[180.45780945 47.24333954]
[191.83816528 38.88893509]
[205.50761414 35.53801346]
[219.37556458 37.66877365]
[231.33416748 44.92367172]
[239.57868958 56.16888428]
[254.17611694 52.71702957]
[268.19873047 43.18800735]
[281.23721313 54.02473068]
[274.43341064 69.55355835]
[257.62796021 67.31445312]
[243.03054810 70.76630402]
[239.92631531 86.37766266]
[230.31576538 99.13832092]
[216.06573486 106.48592377]
[199.98081970 106.91779327]
[185.25143433 100.29794312]
[174.82090759 87.89410400]
[160.32322693 91.74339294]
[145.82553101 95.59268951]
[131.32785034 99.44197845]
[116.83016205 103.29126740]
[131.63929749 100.90596771]
[145.76998901 105.93822479]
[155.73788452 117.14718628]
[159.08512878 131.76895142]
[154.98635864 146.19808960]
[144.45222473 156.87666321]
[130.08024597 161.17156982]
[115.41425323 158.02375793]
[104.07057953 148.20942688]
[98.84635925 134.14857483]
[101.02928925 119.30945587]
[97.37837219 133.85836792]
[93.72746277 148.40728760]
[90.07654572 162.95619202]
[97.93373871 176.40618896]
[94.02393341 191.10884094]
[81.15299988 198.51658630]
[77.50209045 213.06549072]
[73.85117340 227.61441040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 114]
[11 113]
[12 112]
[15 109]
[16 108]
[17 107]
[18 106]
[20 67]
[21 66]
[23 65]
[24 64]
[25 63]
[26 62]
[33 52]
[34 51]
[35 50]
[36 49]
[37 48]
[38 47]
[39 46]
[68 95]
[69 94]
[70 93]
[71 92]
[72 91]
[79 85]
[80 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
