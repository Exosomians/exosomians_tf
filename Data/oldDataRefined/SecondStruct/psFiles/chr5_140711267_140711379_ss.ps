%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:17:56 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGGAGGCCCGACCGAAAUCGAGUCGCCAAUGAAGCUGUCAAGAAAUUAACUUUGUUCGUUGGACAGACCCAACAAGCUCUGGGCGCCCGCGAGAGGUCAGGAAAAUGGAGA\
) } def
/len { sequence length } bind def

/coor [
[83.41191864 571.64715576]
[71.78426361 561.98852539]
[63.52150726 549.33081055]
[59.35837936 534.79943848]
[59.66505814 519.68664551]
[64.41427612 505.33615112]
[73.18373108 493.02404785]
[85.19365692 483.84509277]
[99.37612915 478.61547852]
[98.54981232 463.63827515]
[90.12314606 451.35656738]
[97.08847809 437.15109253]
[96.26216125 422.17388916]
[95.43584442 407.19665527]
[94.60952759 392.21945190]
[84.53294373 386.53350830]
[78.44406128 376.55343628]
[77.98854828 364.75061035]
[83.39960480 354.11566162]
[93.40900421 347.40072632]
[93.40900421 332.40072632]
[93.40900421 317.40072632]
[79.86216736 308.24243164]
[74.34113312 292.67507935]
[79.18659973 276.71154785]
[92.69435120 266.64193726]
[92.28103638 251.64762878]
[91.86772156 236.65333557]
[91.45440674 221.65902710]
[80.89424133 214.13676453]
[76.57114410 201.70622253]
[80.29360962 188.87918091]
[90.90546417 180.45080566]
[90.90546417 165.45080566]
[87.71456909 158.66847229]
[91.11783600 150.03890991]
[91.53115082 135.04461670]
[91.94446564 120.05030823]
[77.73925018 113.80180359]
[69.31906128 97.57831573]
[73.24246216 76.88286591]
[66.46945953 63.49905396]
[59.69645691 50.11524200]
[52.92345810 36.73142624]
[37.58331680 34.39483643]
[26.56998253 23.46386719]
[24.11831093 8.14169502]
[31.17101860 -5.67998838]
[45.01619339 -12.68646526]
[60.33008575 -10.18360233]
[71.22418976 0.86619884]
[73.50950623 16.21406364]
[66.30727386 29.95842743]
[73.08026886 43.34223938]
[79.85327148 56.72605515]
[86.62627411 70.10987091]
[94.11488342 70.52302551]
[102.31908417 57.96551132]
[109.09210968 71.34934235]
[116.58071899 71.76249695]
[124.78494263 59.20500183]
[132.98916626 46.64750671]
[141.19338989 34.09000778]
[149.39761353 21.53251076]
[145.90943909 6.11796665]
[154.41319275 -7.20350552]
[169.86375427 -10.52851200]
[183.09457397 -1.88438547]
[186.25604248 13.60046768]
[177.47251892 26.73915863]
[161.95510864 29.73673439]
[153.75088501 42.29423141]
[145.54666138 54.85172653]
[137.34243774 67.40922546]
[129.13821411 79.96672058]
[127.03120422 108.98154449]
[106.93877411 120.46362305]
[106.52545929 135.45793152]
[106.11214447 150.45222473]
[105.90546417 165.45080566]
[105.90546417 180.45080566]
[118.47854614 192.51789856]
[118.50344849 209.60887146]
[106.44870758 221.24571228]
[106.86202240 236.24000549]
[107.27533722 251.23431396]
[107.68865204 266.22860718]
[119.66765594 273.20385742]
[126.54988861 285.11111450]
[126.61328888 298.75540161]
[119.94901276 310.53686523]
[108.40900421 317.40072632]
[108.40900421 332.40072632]
[108.40900421 347.40072632]
[122.28739929 360.13543701]
[122.59040070 378.65304565]
[109.58675385 391.39312744]
[110.41307068 406.37033081]
[111.23938751 421.34756470]
[112.06570435 436.32479858]
[120.55147552 449.67776489]
[113.52703857 462.81195068]
[114.35335541 477.78918457]
[129.02505493 481.42684937]
[141.97184753 489.22891235]
[152.04251099 500.50158691]
[158.34156799 514.24249268]
[160.30892944 529.22985840]
[157.76963806 544.13098145]
[150.94947815 557.62084961]
[140.45492554 568.50000000]
[127.21912384 575.80102539]
[112.41899109 578.87475586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 103]
[10 102]
[12 100]
[13 99]
[14 98]
[15 97]
[20 94]
[21 93]
[22 92]
[26 87]
[27 86]
[28 85]
[29 84]
[33 81]
[34 80]
[36 79]
[37 78]
[38 77]
[41 56]
[42 55]
[43 54]
[44 53]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
