%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:17:59 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUUACCCGUUUGGUGUUGUUCGACCGUCGCCACCCUAAGCUUGGGUGCGGAGGCUUCUCUGACCUCGGAAUUAGGUCGCGGAAUCUGGCGAGCCGGUGCGAUGGAAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[0.87088794 331.76913452]
[-2.08196259 339.70419312]
[-7.92585135 345.69863892]
[-15.60689259 348.78149414]
[-23.78353310 348.49707031]
[-32.33065414 360.82373047]
[-40.87777328 373.15039062]
[-49.42489624 385.47708130]
[-47.99288177 401.45608521]
[-59.69199753 412.43380737]
[-75.54768372 409.98904419]
[-83.39681244 395.99725342]
[-77.21820831 381.19168091]
[-61.75156403 376.92996216]
[-53.20444107 364.60327148]
[-44.65732193 352.27661133]
[-36.11019897 339.94995117]
[-36.78852844 318.37014771]
[-16.80743408 308.39169312]
[-17.55467415 293.51583862]
[-4.18176603 285.06149292]
[2.95744491 271.86938477]
[10.09665585 258.67727661]
[5.61378241 244.51960754]
[12.66603088 231.03924561]
[27.54628563 226.43318176]
[34.68549728 213.24107361]
[41.82470703 200.04896545]
[48.96392059 186.85685730]
[56.10313034 173.66476440]
[63.24234009 160.47265625]
[70.38155365 147.28054810]
[70.80327606 139.79696655]
[77.90357971 133.82727051]
[85.40357971 120.83689117]
[92.90357971 107.84650421]
[88.74396515 106.39289093]
[84.98757935 103.00395966]
[82.45514679 97.85701752]
[81.87322998 91.45359802]
[83.75341034 84.57067108]
[88.29492950 78.16903687]
[87.46861267 63.19181824]
[78.98284149 49.83883286]
[86.00727844 36.70465469]
[85.18096161 21.72743225]
[84.35464478 6.75020933]
[83.52832794 -8.22701359]
[79.88857269 -16.75951767]
[82.89137268 -23.62720108]
[82.47805786 -38.62150574]
[82.06474304 -53.61581039]
[81.65142822 -68.61011505]
[81.23811340 -83.60441589]
[72.19403839 -97.28421021]
[79.76013947 -111.83364868]
[96.15306091 -112.28552246]
[104.50917053 -98.17497253]
[96.23241425 -84.01773834]
[96.64572906 -69.02342987]
[97.05904388 -54.02912521]
[97.47235870 -39.03482056]
[97.88567352 -24.04051590]
[98.50554657 -9.05332947]
[99.33186340 5.92389297]
[100.15818024 20.90111542]
[100.98449707 35.87833786]
[109.41117096 48.16005325]
[102.44583893 62.36550140]
[103.27215576 77.34272766]
[107.21617126 62.87051773]
[120.56112671 56.02127838]
[134.61872864 61.25423050]
[140.23670959 75.16243744]
[133.75746155 88.69090271]
[119.39975739 93.03189850]
[134.39405823 93.44521332]
[149.39263916 93.65189362]
[164.39263916 93.65189362]
[179.39263916 93.65189362]
[194.39263916 93.65189362]
[203.40405273 81.01963806]
[218.13015747 76.12863922]
[232.90843201 80.85959625]
[242.05635071 93.39335632]
[242.05635071 108.91043091]
[232.90843201 121.44419098]
[218.13015747 126.17514801]
[203.40405273 121.28415680]
[194.39263916 108.65189362]
[179.39263916 108.65189362]
[164.39263916 108.65189362]
[149.39263916 108.65189362]
[142.61030579 111.84278870]
[133.98074341 108.43952179]
[118.98644257 108.02620697]
[105.89395905 115.34650421]
[98.39395905 128.33688354]
[90.89395905 141.32727051]
[83.57365417 154.41975403]
[76.43444824 167.61186218]
[69.29523468 180.80397034]
[62.15602493 193.99607849]
[55.01681519 207.18818665]
[47.87760162 220.38027954]
[40.73839188 233.57238770]
[45.02108383 248.54891968]
[37.59298325 261.82589722]
[23.28876114 265.81649780]
[16.14955139 279.00860596]
[9.01034069 292.20068359]
[9.24693680 308.02014160]
[-3.61532760 315.53088379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 17]
[6 16]
[7 15]
[8 14]
[19 113]
[21 111]
[22 110]
[23 109]
[26 106]
[27 105]
[28 104]
[29 103]
[30 102]
[31 101]
[32 100]
[34 99]
[35 98]
[36 97]
[42 70]
[43 69]
[45 67]
[46 66]
[47 65]
[48 64]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[76 96]
[77 95]
[78 93]
[79 92]
[80 91]
[81 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
