%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:20:20 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUCCGACAAGAGUCUUCCUUCCGUCAUCUCUUACCAAGAUGUGACAGGCUAAGCCCGCGACAUGGGUCGCGAGUGAGACUCGGAGUAGUUGCUUGUCGACCCG\
) } def
/len { sequence length } bind def

/coor [
[82.87359619 420.56005859]
[82.43732452 405.56640625]
[79.04443359 398.86856079]
[82.21282196 390.13174438]
[82.21282196 375.13174438]
[79.41586304 371.08624268]
[79.23910522 365.20877075]
[82.67446899 359.26589966]
[83.54664612 344.29129028]
[84.41881561 329.31665039]
[85.29098511 314.34204102]
[86.16316223 299.36740112]
[87.03533173 284.39279175]
[87.90750885 269.41818237]
[76.28911591 260.13641357]
[72.31706238 245.62135315]
[77.71676636 231.38420105]
[90.61343384 222.95912170]
[91.48561096 207.98449707]
[83.91382599 200.84411621]
[81.55541229 190.47999573]
[85.45072937 180.35270691]
[94.50885773 173.98539734]
[96.25025177 159.08682251]
[97.99164581 144.18824768]
[99.73303986 129.28967285]
[29.43057632 93.02729034]
[17.39872742 84.06990814]
[5.36687994 75.11253357]
[-6.66496801 66.15515137]
[-18.69681549 57.19777298]
[-34.38665009 55.16315079]
[-39.97509384 41.35668182]
[-52.00694275 32.39930344]
[-64.03878784 23.44192314]
[-76.07064056 14.48454475]
[-92.38619995 9.87598038]
[-92.47433472 -7.07773829]
[-76.20757294 -11.85568619]
[-67.11325836 2.45269704]
[-55.08140945 11.41007614]
[-43.04956436 20.36745453]
[-31.01771545 29.32483292]
[-16.18848038 30.71876526]
[-9.73943710 45.16592407]
[2.29241061 54.12330246]
[14.32425880 63.08068466]
[26.35610580 72.03806305]
[38.38795471 80.99543762]
[45.18526459 77.82580566]
[65.57718658 68.31689453]
[66.44936371 53.34226990]
[67.32153320 38.36764908]
[62.20638657 22.20374870]
[76.32257843 12.81389236]
[89.25322723 23.77904892]
[82.29615784 39.23981857]
[81.42398071 54.21444321]
[80.55181122 69.18906403]
[87.39450073 72.25950623]
[107.92256165 81.47083282]
[118.52916718 70.86423492]
[129.13577271 60.25762939]
[139.74237061 49.65102768]
[150.34896851 39.04442596]
[154.06842041 23.07264900]
[169.83659363 18.56745529]
[181.43254089 30.16340446]
[176.92735291 45.93157578]
[160.95556641 49.65102768]
[150.34896851 60.25762939]
[139.74237061 70.86423492]
[129.13577271 81.47083282]
[118.52916718 92.07743835]
[124.67005157 105.76280975]
[139.64466858 104.89064026]
[154.61929321 104.01847076]
[169.59391785 103.14629364]
[185.05468750 96.18922424]
[196.01985168 109.11987305]
[186.62998962 123.23606110]
[170.46609497 118.12091827]
[155.49147034 118.99308777]
[140.51684570 119.86526489]
[125.54222107 120.73743439]
[114.63161469 131.03106689]
[112.89022064 145.92964172]
[111.14883423 160.82821655]
[109.40744019 175.72679138]
[118.31276703 193.69584656]
[106.46023560 208.85667419]
[105.58805847 223.83128357]
[117.41943359 233.69662476]
[121.12979889 248.46437073]
[115.49950409 262.42016602]
[102.88212585 270.29034424]
[102.00995636 285.26495361]
[101.13777924 300.23959351]
[100.26560974 315.21420288]
[99.39344025 330.18884277]
[98.52126312 345.16345215]
[97.64909363 360.13809204]
[97.21282196 375.13174438]
[97.21282196 390.13174438]
[97.43098450 405.13015747]
[97.86724854 420.12380981]
[100.61727142 439.30941772]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 106]
[2 105]
[4 104]
[5 103]
[8 102]
[9 101]
[10 100]
[11 99]
[12 98]
[13 97]
[14 96]
[18 92]
[19 91]
[23 89]
[24 88]
[25 87]
[26 86]
[27 49]
[28 48]
[29 47]
[30 46]
[31 45]
[33 43]
[34 42]
[35 41]
[36 40]
[51 59]
[52 58]
[53 57]
[61 74]
[62 73]
[63 72]
[64 71]
[65 70]
[75 85]
[76 84]
[77 83]
[78 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
