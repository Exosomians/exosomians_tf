%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:16:49 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGCGUCACUAAUAUCCGAAAGCGAGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUA\
) } def
/len { sequence length } bind def

/coor [
[158.37837219 804.21716309]
[157.31790161 789.25469971]
[156.25744629 774.29223633]
[155.19697571 759.32977295]
[154.13652039 744.36730957]
[140.68350220 737.97338867]
[132.18060303 725.62200928]
[130.99391174 710.57348633]
[137.54193115 696.86145020]
[150.15647888 688.21154785]
[149.09602356 673.24908447]
[137.71243286 663.71234131]
[136.42382812 648.55334473]
[146.50402832 636.67785645]
[142.89863586 630.23327637]
[145.53596497 621.49645996]
[144.68733215 606.52044678]
[143.83871460 591.54449463]
[142.99008179 576.56854248]
[142.14144897 561.59252930]
[141.29283142 546.61657715]
[132.84786987 534.34741211]
[139.79203796 520.13159180]
[138.51994324 505.18563843]
[136.82542419 490.28167725]
[135.13088989 475.37768555]
[133.43635559 460.47372437]
[121.65827179 451.42868042]
[119.72746277 436.33807373]
[129.29458618 424.04547119]
[127.60004425 409.14151001]
[113.88778687 403.32431030]
[104.86835480 391.34494019]
[103.04404449 376.36032104]
[109.00421143 362.38272095]
[121.24028015 353.20526123]
[119.54574585 338.30130005]
[117.85121918 323.39730835]
[116.15668488 308.49334717]
[114.46215057 293.58935547]
[112.76761627 278.68539429]
[111.07308197 263.78140259]
[109.37854767 248.87742615]
[96.34737396 241.71316528]
[89.95796967 228.08821106]
[92.85041046 213.13873291]
[104.12123108 202.63754272]
[102.42669678 187.73356628]
[100.73216248 172.82958984]
[91.60660553 161.05786133]
[97.73538971 146.47195435]
[96.04085541 131.56797791]
[94.34632111 116.66400909]
[82.54556274 102.23513031]
[90.32978821 85.29829407]
[88.21416473 70.44824219]
[86.09854889 55.59818268]
[83.98292542 40.74812698]
[81.86730957 25.89807320]
[67.18523407 22.06238937]
[55.12274933 12.92239571]
[47.49917984 -0.10430084]
[45.44935608 -15.01690674]
[49.25479126 -29.53873634]
[58.30547333 -41.46478271]
[71.19741058 -48.99652481]
[69.08179474 -63.84658051]
[66.96617126 -78.69663239]
[57.35982132 -91.26757812]
[63.22470474 -104.95890045]
[58.91935730 -113.00571442]
[61.18576050 -120.03391266]
[59.28049469 -134.91241455]
[57.37522888 -149.79092407]
[53.18417740 -157.89785767]
[55.54981232 -164.89326477]
[53.85527802 -179.79725647]
[52.16074371 -194.70123291]
[50.46621323 -209.60520935]
[48.77167892 -224.50918579]
[47.07714462 -239.41316223]
[45.38261032 -254.31713867]
[31.49584389 -264.96194458]
[29.64474297 -282.02114868]
[40.48957825 -294.88000488]
[31.06207848 -307.58563232]
[37.12012100 -321.19259644]
[24.89970207 -330.85174561]
[23.17943954 -345.96780396]
[32.46327209 -357.55856323]
[30.55800629 -372.43707275]
[28.65273857 -387.31558228]
[26.74747086 -402.19409180]
[24.84220314 -417.07260132]
[22.93693542 -431.95111084]
[20.82131577 -446.80114746]
[18.49576759 -461.61978149]
[16.17021751 -476.43841553]
[13.84466934 -491.25704956]
[4.06139088 -503.69079590]
[9.73194408 -517.46374512]
[-4.14467430 -524.40771484]
[-11.25961399 -538.19750977]
[-8.87703514 -553.53057861]
[2.08691216 -564.51104736]
[17.41636658 -566.91674805]
[31.21683884 -559.82263184]
[38.18176651 -545.95654297]
[35.63299561 -530.65020752]
[24.55057526 -519.78930664]
[34.16751480 -508.41546631]
[28.66329956 -493.58261108]
[30.98884964 -478.76397705]
[33.31439972 -463.94534302]
[35.63994598 -449.12670898]
[38.89719772 -445.64395142]
[40.00630188 -440.08050537]
[37.81544113 -433.85635376]
[39.72071075 -418.97787476]
[41.62597656 -404.09936523]
[43.53124619 -389.22085571]
[45.43651199 -374.34234619]
[47.34177780 -359.46383667]
[59.24666977 -350.58639526]
[61.39083099 -335.52459717]
[51.99862671 -323.09783936]
[61.28984833 -311.45645142]
[55.36808395 -296.78527832]
[66.56156158 -290.41226196]
[72.12596130 -278.58029175]
[69.82839966 -265.51104736]
[60.28659058 -256.01165771]
[61.98112488 -241.10769653]
[63.67565536 -226.20372009]
[65.37018585 -211.29974365]
[67.06472015 -196.39576721]
[68.75925446 -181.49177551]
[70.45378876 -166.58779907]
[72.25373077 -151.69619751]
[74.15900421 -136.81768799]
[76.06427002 -121.93917847]
[78.07476044 -107.07452393]
[87.52979279 -95.56575775]
[81.81623077 -80.81225586]
[83.93184662 -65.96219635]
[86.04747009 -51.11214447]
[100.52983093 -47.48029327]
[112.55093384 -38.55625153]
[120.26037598 -25.67489433]
[122.45664215 -10.78315067]
[118.77425385 3.85425496]
[109.74414062 15.99921608]
[96.71736145 23.78245354]
[98.83298492 38.63250732]
[100.94860077 53.48256302]
[103.06422424 68.33261871]
[105.17984009 83.18267822]
[113.46245575 88.66794586]
[117.45443726 97.76486969]
[115.88349152 107.57415771]
[109.25029755 114.96947479]
[110.94483185 129.87344360]
[112.63936615 144.77743530]
[121.88612366 157.61518860]
[115.63613892 171.13505554]
[117.33067322 186.03903198]
[119.02520752 200.94300842]
[132.36578369 208.64596558]
[138.54042053 222.56454468]
[135.37278748 237.27610779]
[124.28253174 247.18289185]
[125.97705841 262.08688354]
[127.67159271 276.99084473]
[129.36613464 291.89483643]
[131.06066895 306.79879761]
[132.75518799 321.70278931]
[134.44972229 336.60675049]
[136.14425659 351.51074219]
[150.12828064 357.70706177]
[159.07417297 369.98989868]
[160.66033936 385.00155640]
[154.56039429 398.69998169]
[142.50402832 407.44696045]
[144.19856262 422.35095215]
[156.28106689 432.18203735]
[157.78724670 447.32095337]
[148.34033203 458.77917480]
[150.03486633 473.68316650]
[151.72940063 488.58712769]
[153.42393494 503.49111938]
[156.11610413 506.87469482]
[157.46125793 510.56701660]
[157.52725220 514.10827637]
[156.52381897 517.10754395]
[154.76802063 519.28295898]
[163.27366638 532.62329102]
[156.26879883 545.76794434]
[157.11743164 560.74389648]
[157.96606445 575.71990967]
[158.81468201 590.69586182]
[159.66331482 605.67187500]
[160.51193237 620.64782715]
[161.46650696 635.61743164]
[173.12088013 645.95245361]
[173.98320007 661.14166260]
[164.05848694 672.18859863]
[165.11894226 687.15106201]
[178.82739258 693.93530273]
[187.24391174 706.58673096]
[188.19154358 721.65222168]
[181.51571655 735.07940674]
[169.09898376 743.30682373]
[170.15943909 758.26928711]
[171.21990967 773.23175049]
[172.28036499 788.19421387]
[173.34083557 803.15667725]
[185.44100952 813.32336426]
[186.72494507 829.07543945]
[176.43090820 841.06744385]
[160.66616821 842.18475342]
[148.78366089 831.76452637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 216]
[2 215]
[3 214]
[4 213]
[5 212]
[10 207]
[11 206]
[14 203]
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[21 197]
[23 195]
[24 190]
[25 189]
[26 188]
[27 187]
[30 184]
[31 183]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 173]
[42 172]
[43 171]
[47 167]
[48 166]
[49 165]
[51 163]
[52 162]
[53 161]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[66 146]
[67 145]
[68 144]
[70 142]
[72 141]
[73 140]
[74 139]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[85 128]
[87 126]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 115]
[97 114]
[98 113]
[99 112]
[101 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
