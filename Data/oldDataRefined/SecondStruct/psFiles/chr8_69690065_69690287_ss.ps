%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:31 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCGGAGGGUGAAUAAGAUGUGGAGAGUACAGAGAAGUGGUACGGUCUGAUCUCAGUUCGAGUUGUCCCAGAAGAAAGGGGCGACUAAGGCGGUUCGGGCAAGGGAACCGACACCAAAGCGACCUAUCAUCCAUCCCUGUCACCCUUAGAGCAAGUAGGUAAGUACGCGCAGUGAUUAAUCUACUGCUCCGUAAACCGAUGGAAUUCUCUCAGUAUCAAUGA\
) } def
/len { sequence length } bind def

/coor [
[436.89416504 412.18405151]
[442.61392212 398.31738281]
[453.07473755 387.56698608]
[466.78009033 381.47079468]
[481.76925659 380.90093994]
[495.89941406 385.93988037]
[483.42736816 377.60632324]
[470.95532227 369.27279663]
[458.48327637 360.93923950]
[446.01123047 352.60568237]
[433.53918457 344.27212524]
[421.06713867 335.93856812]
[408.59509277 327.60501099]
[398.80462646 330.49014282]
[388.83120728 327.45101929]
[382.03286743 319.25881958]
[380.83596802 308.45986938]
[368.60253906 299.77978516]
[354.00714111 302.52014160]
[341.47705078 293.89160156]
[338.70169067 278.56399536]
[326.46826172 269.88394165]
[314.23486328 261.20385742]
[302.00146484 252.52380371]
[289.76803589 243.84373474]
[275.17263794 246.58409119]
[262.64254761 237.95553589]
[259.86718750 222.62794495]
[247.63375854 213.94787598]
[235.40036011 205.26779175]
[221.91929626 211.60235596]
[206.97816467 210.33009338]
[194.59811401 201.69293213]
[188.16127014 187.92834473]
[189.48704529 172.69056702]
[175.45680237 177.61911011]
[161.04428101 173.28981018]
[151.83692932 161.16223145]
[151.53263855 145.76048279]
[139.29922485 137.08041382]
[127.06581879 128.40034485]
[114.83240509 119.72027588]
[90.67623138 134.76045227]
[56.46467590 118.49919891]
[41.53690720 119.96945190]
[26.60913467 121.43971252]
[13.63380241 130.49240112]
[0.20942748 124.03985596]
[-14.71834373 125.51010895]
[-29.64611435 126.98036957]
[-42.65367889 136.96711731]
[-57.70070648 130.44645691]
[-59.30810165 114.12628174]
[-45.82231903 104.79538727]
[-31.11637115 112.05259705]
[-16.18860054 110.58233643]
[-1.26082957 109.11208344]
[10.64676857 100.16455078]
[25.13887787 106.51194000]
[40.06665039 105.04167938]
[54.99441910 103.57142639]
[58.12681198 88.90213013]
[45.10150909 81.46294403]
[32.07621002 74.02375793]
[19.05090714 66.58456421]
[6.02560663 59.14537811]
[-6.99969482 51.70619202]
[-20.02499580 44.26700211]
[-33.05029678 36.82781601]
[-46.07559967 29.38862610]
[-60.16561127 35.88871384]
[-75.37873077 32.83248138]
[-85.86521149 21.39511108]
[-87.59277344 5.97450304]
[-79.89714050 -7.49980259]
[-65.73744202 -13.84666061]
[-50.55837250 -10.62557411]
[-40.19659042 0.92488325]
[-38.63640976 16.36332512]
[-25.61110878 23.80251312]
[-12.58580780 31.24170113]
[0.43949345 38.68088913]
[13.46479511 46.12007904]
[26.49009705 53.55926514]
[39.51539612 60.99845505]
[52.54069901 68.43764496]
[65.56600189 75.87683105]
[71.42973328 71.20066071]
[62.07758331 59.47303009]
[73.80536652 50.12107086]
[83.15721130 61.84831238]
[89.02094269 57.17213821]
[84.66667175 42.81803131]
[80.31240082 28.46392822]
[75.95813751 14.10982227]
[71.60386658 -0.24428272]
[67.24959564 -14.59838772]
[52.54539871 -19.55482674]
[43.59025192 -32.22703552]
[43.82758331 -47.74229813]
[53.16614151 -60.13467026]
[68.01506042 -64.63903809]
[82.66461945 -59.52338409]
[91.48177338 -46.75477219]
[91.07614136 -31.24299812]
[81.60369873 -18.95265770]
[85.95796967 -4.59855270]
[90.31224060 9.75555229]
[94.66651154 24.10965729]
[99.02078247 38.46376038]
[103.37505341 52.81786728]
[124.81392670 68.93305206]
[130.83299255 90.65507507]
[123.51247406 107.48686218]
[135.74588013 116.16693115]
[147.97929382 124.84700775]
[160.21270752 133.52706909]
[174.85066223 128.72740173]
[189.33866882 133.41258240]
[198.18518066 145.58645630]
[198.16711426 160.45715332]
[212.11192322 154.17306519]
[227.23004150 155.70254517]
[239.47138977 164.53518677]
[245.60699463 178.21766663]
[244.08042908 193.03439331]
[256.31384277 201.71446228]
[268.54724121 210.39453125]
[283.93136597 207.95176697]
[296.21411133 216.92886353]
[298.44812012 231.61032104]
[310.68151855 240.29039001]
[322.91494751 248.97045898]
[335.14834595 257.65051270]
[347.38174438 266.33059692]
[362.76586914 263.88784790]
[375.04864502 272.86492920]
[377.28262329 287.54638672]
[389.51602173 296.22644043]
[409.65658569 297.21054077]
[416.92864990 315.13296509]
[429.40069580 323.46652222]
[441.87274170 331.80007935]
[454.34478760 340.13363647]
[466.81683350 348.46719360]
[479.28887939 356.80075073]
[491.76092529 365.13430786]
[504.23297119 373.46783447]
[515.60687256 358.01461792]
[540.89062500 354.46911621]
[555.86700439 355.31018066]
[570.84344482 356.15124512]
[585.81982422 356.99227905]
[600.79620361 357.83334351]
[609.53027344 355.19189453]
[615.97631836 358.79266357]
[630.93945312 359.84368896]
[645.90258789 360.89468384]
[660.86572266 361.94570923]
[675.82885742 362.99670410]
[690.79199219 364.04772949]
[705.10034180 357.29638672]
[717.25421143 365.90643311]
[732.21734619 366.95745850]
[747.18048096 368.00845337]
[755.95074463 365.48974609]
[762.34564209 369.18057251]
[777.29254150 370.44134521]
[792.23950195 371.70208740]
[808.53076172 367.00845337]
[817.55084229 381.36370850]
[806.25360107 394.00524902]
[790.97869873 386.64901733]
[776.03179932 385.38827515]
[761.08489990 384.12750244]
[746.12945557 382.97158813]
[731.16632080 381.92059326]
[716.20324707 380.86956787]
[702.96508789 387.69607544]
[689.74096680 379.01086426]
[674.77783203 377.95983887]
[659.81469727 376.90884399]
[644.85156250 375.85781860]
[629.88842773 374.80682373]
[614.92529297 373.75579834]
[599.95513916 372.80975342]
[584.97875977 371.96868896]
[570.00238037 371.12762451]
[555.02593994 370.28659058]
[540.04956055 369.44552612]
[536.10394287 375.82379150]
[550.67456055 379.38699341]
[551.78814697 394.34558105]
[537.90576172 400.02694702]
[528.21270752 388.58029175]
[524.26708984 394.95855713]
[531.70629883 407.98385620]
[545.26916504 416.13000488]
[544.86248779 431.01904297]
[552.30169678 444.04434204]
[565.86450195 452.19049072]
[565.45782471 467.07955933]
[572.89703369 480.10485840]
[587.32562256 487.89889526]
[587.51959229 504.29690552]
[573.27929688 512.42999268]
[559.25402832 503.93154907]
[559.87170410 487.54403687]
[552.43255615 474.51873779]
[539.40179443 467.30426025]
[539.27636719 451.48355103]
[531.83715820 438.45825195]
[518.80645752 431.24374390]
[518.68103027 415.42303467]
[511.24182129 402.39773560]
[515.27813721 416.84448242]
[513.66015625 431.75695801]
[506.61923218 445.00177002]
[495.16268921 454.68414307]
[480.92956543 459.41885376]
[465.95599365 458.52859497]
[452.38415527 452.14068604]
[442.15563965 441.16903687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 148]
[7 147]
[8 146]
[9 145]
[10 144]
[11 143]
[12 142]
[13 141]
[17 139]
[18 138]
[21 135]
[22 134]
[23 133]
[24 132]
[25 131]
[28 128]
[29 127]
[30 126]
[35 121]
[39 117]
[40 116]
[41 115]
[42 114]
[44 61]
[45 60]
[46 59]
[48 57]
[49 56]
[50 55]
[62 87]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[70 79]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[150 190]
[151 189]
[152 188]
[153 187]
[154 186]
[156 185]
[157 184]
[158 183]
[159 182]
[160 181]
[161 180]
[163 178]
[164 177]
[165 176]
[167 175]
[168 174]
[169 173]
[196 215]
[197 214]
[199 212]
[200 211]
[202 209]
[203 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
