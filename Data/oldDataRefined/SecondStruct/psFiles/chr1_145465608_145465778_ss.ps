%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:16:59 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUUUUAAGUCCCCUUUCGCGCUUGCGUCAGGGGGUGAUGGUGUUUAAUACGUCAGUUCAAAGGGUGUAAACCCCUUUAGCGUCCCCAGUCGUGUAGGCCUCACGUUACCUAUUCGGAGCGGGUCCCUUUUGGUGGAAGCACUAGUACCAUAGAGGGGACGGUCCAUUCA\
) } def
/len { sequence length } bind def

/coor [
[143.81697083 197.81086731]
[131.76185608 206.73689270]
[117.42150116 211.13623047]
[102.43473816 210.50611877]
[88.51428223 204.91856384]
[77.25096130 195.01213074]
[69.93196869 181.91889954]
[67.39373016 167.13522339]
[69.92630768 152.35057068]
[77.24028015 139.25454712]
[88.49734497 129.34530640]
[93.75981140 115.29872131]
[82.40727234 125.10279083]
[71.05473328 134.90686035]
[59.70219421 144.71093750]
[48.34965515 154.51501465]
[47.04444122 170.03706360]
[35.39168930 179.81806946]
[20.60182762 178.47808838]
[9.24928856 188.28216553]
[-2.10324979 198.08624268]
[-6.97864485 213.74391174]
[-23.03361130 217.08607483]
[-33.75217438 204.67462158]
[-28.10799599 189.27737427]
[-11.90732384 186.73370361]
[-0.55478525 176.92962646]
[10.79775333 167.12554932]
[11.62547398 152.29820251]
[22.99889946 142.19375610]
[38.54558182 143.16247559]
[49.89812088 133.35839844]
[61.25065994 123.55432892]
[72.60319519 113.75025177]
[83.95573425 103.94618225]
[86.13975525 89.10602570]
[78.09310150 76.44698334]
[70.04644775 63.78794098]
[61.99979401 51.12889862]
[54.72762299 45.53919983]
[53.92423248 38.16434860]
[46.11012650 25.36045456]
[38.29602432 12.55655766]
[24.50245094 4.80749750]
[24.47680664 -10.08708572]
[19.82652092 -12.61655045]
[16.92496681 -16.31786346]
[15.92522430 -20.31842804]
[16.60764313 -23.81320763]
[9.50650692 -37.02584839]
[2.40537071 -50.23848724]
[-4.69576502 -63.45112991]
[-11.79690075 -76.66377258]
[-33.08510208 -77.99458313]
[-49.19991302 -91.76384735]
[-53.77764511 -112.32305145]
[-45.13759232 -131.38554382]
[-53.64120865 -143.74226379]
[-62.14482880 -156.09898376]
[-69.61629486 -161.41935730]
[-70.68849182 -168.75994873]
[-78.96501160 -181.26991272]
[-87.24152374 -193.77987671]
[-95.51804352 -206.28984070]
[-103.79455566 -218.79980469]
[-112.07107544 -231.30978394]
[-127.62725830 -232.90327454]
[-138.48255920 -244.15922546]
[-139.51142883 -259.76293945]
[-130.22807312 -272.34677124]
[-115.01580811 -275.96908569]
[-101.05739594 -268.91946411]
[-94.94358063 -254.52659607]
[-99.56110382 -239.58628845]
[-91.28459167 -227.07632446]
[-83.00807190 -214.56636047]
[-74.73155975 -202.05639648]
[-66.45503998 -189.54643250]
[-58.17852783 -177.03645325]
[-49.78810883 -164.60260010]
[-41.28449249 -152.24588013]
[-32.78087234 -139.88916016]
[-23.85450935 -142.09434509]
[-14.64278984 -141.74801636]
[-5.86253738 -138.86410522]
[1.79941440 -133.65455627]
[7.73994446 -126.51374054]
[11.48711491 -117.98864746]
[12.73764896 -108.73699188]
[11.38143158 -99.47647858]
[7.51108122 -90.92910767]
[1.41573977 -83.76490784]
[8.51687527 -70.55226135]
[15.61801147 -57.33962250]
[22.71914673 -44.12698364]
[29.82028198 -30.91434288]
[37.28070450 -17.90119171]
[50.51535797 -11.06795120]
[51.09991837 4.74245214]
[58.91402435 17.54634857]
[66.72812653 30.35024452]
[74.65883636 43.08224487]
[82.70549011 55.74128723]
[90.75214386 68.40032959]
[98.79879761 81.05937195]
[95.13735199 66.51310730]
[98.12897491 51.81446457]
[107.18482971 39.85655594]
[120.52245331 32.99304962]
[135.51663208 32.57487869]
[149.21604919 38.68434906]
[158.92430115 50.11894989]
[162.73048401 64.62801361]
[159.88546753 79.35573578]
[150.94921875 91.40327454]
[137.68063354 98.39933777]
[122.69000244 98.96662903]
[136.15318298 105.58047485]
[149.61634827 112.19432068]
[165.41418457 111.33455658]
[173.42591858 123.89087677]
[186.88909912 130.50473022]
[199.35061646 127.08482361]
[210.43952942 132.89949036]
[214.44659424 144.33757019]
[227.78672791 151.19619751]
[241.12686157 158.05484009]
[254.46699524 164.91346741]
[267.80712891 171.77210999]
[281.14724731 178.63073730]
[294.48739624 185.48937988]
[307.88958740 192.22589111]
[321.35278320 198.83973694]
[334.81594849 205.45358276]
[348.27911377 212.06742859]
[361.74227905 218.68127441]
[374.45489502 210.06237793]
[389.77493286 208.97048950]
[403.58135986 215.69934082]
[412.16040039 228.43888855]
[413.20425415 243.76226807]
[406.43215942 257.54757690]
[393.66577148 266.08660889]
[378.33920288 267.08242798]
[364.57519531 260.26715088]
[356.07623291 247.47407532]
[355.12844849 232.14445496]
[341.66528320 225.53060913]
[328.20208740 218.91676331]
[314.73892212 212.30291748]
[301.27575684 205.68907166]
[293.85836792 205.56159973]
[287.62875366 198.82951355]
[274.28860474 191.97087097]
[260.94848633 185.11224365]
[247.60835266 178.25360107]
[234.26821899 171.39497375]
[220.92808533 164.53633118]
[207.58795166 157.67770386]
[190.14869690 159.49105835]
[180.27525330 143.96789551]
[166.81207275 137.35404968]
[151.97721863 138.68687439]
[143.00250244 125.65749359]
[129.53933716 119.04364777]
[116.07615662 112.42980194]
[124.72035980 124.68858337]
[138.12008667 131.43005371]
[148.50794983 142.25096130]
[154.69682312 155.91470337]
[155.97943115 170.85977173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 35]
[13 34]
[14 33]
[15 32]
[16 31]
[19 28]
[20 27]
[21 26]
[36 105]
[37 104]
[38 103]
[39 102]
[41 101]
[42 100]
[43 99]
[45 97]
[49 96]
[50 95]
[51 94]
[52 93]
[53 92]
[57 82]
[58 81]
[59 80]
[61 79]
[62 78]
[63 77]
[64 76]
[65 75]
[66 74]
[117 166]
[118 165]
[119 164]
[121 162]
[122 161]
[125 159]
[126 158]
[127 157]
[128 156]
[129 155]
[130 154]
[131 153]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
