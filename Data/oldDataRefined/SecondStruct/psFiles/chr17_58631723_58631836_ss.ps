%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:47 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGUGAGCACUCUCUUGUGUUUAUAGAGGGAGAGCGCCAAAGGUCGCAAGAUGUGCAAGUCUAUAUGAGGAGCUCUUUGUGUGAUAUCUUUAAUAGGGAGUUUUAUAUCAGAA\
) } def
/len { sequence length } bind def

/coor [
[98.49930573 139.32620239]
[81.24015808 134.59580994]
[67.86008453 122.71184540]
[54.18482590 128.87522888]
[40.50956345 135.03860474]
[26.83430099 141.20198059]
[21.16089058 155.70887756]
[7.20443153 161.76460266]
[-6.59071827 156.26647949]
[-15.99292278 168.99082947]
[-30.77536774 167.16638184]
[-44.45063019 173.32975769]
[-58.12589264 179.49314880]
[-71.80115509 185.65652466]
[-85.47641754 191.81990051]
[-99.15167236 197.98327637]
[-101.32128143 213.25730896]
[-111.42152405 224.91873169]
[-126.22945404 229.24641418]
[-141.01991272 224.85940552]
[-151.07331848 213.15757751]
[-153.18167114 197.87496948]
[-146.67219543 183.88818359]
[-133.62205505 175.66035461]
[-118.19548035 175.81695557]
[-105.31505585 184.30801392]
[-91.63979340 178.14463806]
[-77.96453094 171.98126221]
[-64.28926849 165.81788635]
[-50.61400604 159.65451050]
[-36.93874359 153.49111938]
[-28.51468658 141.20762634]
[-12.75409508 142.59121704]
[-7.73631191 128.61418152]
[6.04454851 122.16883087]
[20.67092323 127.52671051]
[34.34618759 121.36333466]
[48.02144623 115.19995880]
[61.69670868 109.03658295]
[61.03749466 94.45698547]
[65.73660278 80.63968658]
[75.14779663 69.48492432]
[61.81148148 60.97297668]
[62.62287903 46.10049057]
[55.54063797 32.87771225]
[48.45839310 19.65493393]
[34.24706650 11.47140598]
[34.49912262 -4.92580366]
[48.95527649 -12.66865253]
[62.74427032 -3.79196048]
[61.68117142 12.57269192]
[68.76341248 25.79546928]
[75.84565735 39.01824951]
[88.67540741 46.58441162]
[88.37057495 62.40267944]
[99.47608948 60.64866638]
[110.62436676 62.10639954]
[120.90550232 66.65690613]
[129.48039246 73.92878723]
[135.64918518 83.32852936]
[138.90837097 94.08895111]
[153.89578247 94.70343781]
[168.88319397 95.31792450]
[183.87759399 95.72764587]
[198.87619019 95.93252563]
[213.87478638 96.13740540]
[228.87339783 96.34228516]
[243.87199402 96.54717255]
[258.87060547 96.75205231]
[273.86920166 96.95693207]
[280.01473999 93.97100067]
[285.84103394 94.55360413]
[289.67535400 97.60498810]
[304.64038086 98.62862396]
[319.60543823 99.65225983]
[334.57046509 100.67589569]
[349.53549194 101.69953156]
[364.50051880 102.72316742]
[379.46554565 103.74680328]
[394.43057251 104.77043915]
[409.39559937 105.79407501]
[418.30859375 103.23281097]
[424.75366211 107.05556488]
[439.68515015 108.48758698]
[454.61663818 109.91960144]
[467.85717773 100.86051178]
[483.15234375 105.70170593]
[488.76901245 120.72943878]
[480.39849854 134.41572571]
[464.46200562 136.26161194]
[453.18460083 124.85108948]
[438.25311279 123.41907501]
[423.32162476 121.98705292]
[408.37197876 120.75910950]
[393.40695190 119.73547363]
[378.44192505 118.71183777]
[363.47686768 117.68820190]
[348.51184082 116.66455841]
[333.54681396 115.64092255]
[318.58178711 114.61728668]
[303.61676025 113.59365082]
[288.65173340 112.57001495]
[273.66430664 111.95552826]
[258.66571045 111.75064850]
[243.66711426 111.54576874]
[228.66851807 111.34088898]
[213.66990662 111.13600922]
[198.67131042 110.93112946]
[183.67271423 110.72624969]
[176.84921265 113.82333374]
[168.26870728 110.30533600]
[153.28129578 109.69084930]
[138.29388428 109.07636261]
[130.31559753 125.09515381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 39]
[4 38]
[5 37]
[6 36]
[9 33]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[42 55]
[44 53]
[45 52]
[46 51]
[61 113]
[62 112]
[63 111]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[70 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[83 93]
[84 92]
[85 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
