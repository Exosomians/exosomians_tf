%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:33 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGCGUCCGCGCCACCGGUUCACCAUUCCGCAGCCAGAGCAUUUGGCUUCUAGUGCCCAAGCUUGGGGCAGGCACGGACUAUAGGUUGGAAGUCGAUAUCCCACCUCUGAAAAAUCCUCACCAGCUGAGAACGGCAUGAGACGCUCAUCUAGGAAGGGGGACCUGACGUCUGGGUCGGUUGACAAAAG\
) } def
/len { sequence length } bind def

/coor [
[99.11766052 180.17350769]
[97.87897491 165.22473145]
[96.64028168 150.27597046]
[77.23928833 144.95454407]
[61.46640015 132.46725464]
[51.83586121 114.80461121]
[37.00164413 117.02856445]
[22.16742516 119.25252533]
[7.33320665 121.47647858]
[-7.50101137 123.70043182]
[-20.00150108 133.39828491]
[-33.73527145 127.63349152]
[-48.56948853 129.85743713]
[-63.40370560 132.08139038]
[-48.89796829 150.93315125]
[-47.80286026 179.19351196]
[-64.18803406 209.00761414]
[-74.88195801 219.52616882]
[-85.57588196 230.04472351]
[-82.32071686 245.12475586]
[-87.75656891 259.56271362]
[-100.14888000 268.75152588]
[-115.54330444 269.75906372]
[-129.02754211 262.26379395]
[-136.29882812 248.65748596]
[-135.03691101 233.28181458]
[-125.64446259 221.04312134]
[-111.11859131 215.84674072]
[-96.09443665 219.35078430]
[-85.40051270 208.83224487]
[-74.70658112 198.31369019]
[-78.27619171 191.71763611]
[-88.98500824 171.92947388]
[-103.63980865 175.12896729]
[-118.29460907 178.32846069]
[-132.94941711 181.52795410]
[-147.60421753 184.72744751]
[-162.25901794 187.92694092]
[-176.91381836 191.12643433]
[-191.09875488 200.41210938]
[-203.94833374 189.35205078]
[-196.87762451 173.94293213]
[-180.11331177 176.47163391]
[-165.45851135 173.27214050]
[-150.80371094 170.07264709]
[-136.14891052 166.87315369]
[-121.49410248 163.67366028]
[-106.83930206 160.47416687]
[-92.18450165 157.27467346]
[-91.07252502 149.85755920]
[-105.86797333 152.32629395]
[-112.78775787 139.01777649]
[-102.26880646 128.32424927]
[-88.84856415 135.02334595]
[-87.73658752 127.60623169]
[-100.80885315 120.24988556]
[-113.88111877 112.89353180]
[-126.95338440 105.53717804]
[-140.02565002 98.18082428]
[-154.59558105 103.85980225]
[-169.39053345 98.79583740]
[-177.42474365 85.37997437]
[-174.90473938 69.94677734]
[-163.02035522 59.78333282]
[-147.38307190 59.68849945]
[-135.37629700 69.70706177]
[-132.66929626 85.10855865]
[-119.59703064 92.46491241]
[-106.52476501 99.82126617]
[-93.45249939 107.17761993]
[-80.38024139 114.53397369]
[-65.62766266 117.24717712]
[-50.79344177 115.02322388]
[-35.95922470 112.79927063]
[-24.51977730 103.26049042]
[-9.72496605 108.86621094]
[5.10925198 106.64225769]
[19.94347000 104.41830444]
[34.77768707 102.19435120]
[49.61190796 99.97039795]
[52.84057617 82.25318146]
[62.09333801 66.80292511]
[76.18825531 55.59322357]
[93.32485962 50.05599594]
[93.57286835 35.05804825]
[93.82087708 20.06009865]
[94.06888580 5.06214905]
[86.56081390 -8.86406517]
[94.50749207 -21.46166992]
[94.75550079 -36.45961761]
[95.00350952 -51.45756912]
[82.52197266 -60.67661667]
[77.87512207 -75.48155975]
[82.84977722 -90.17960358]
[95.53307343 -99.11904144]
[111.04802704 -98.86248779]
[123.42882538 -89.50858307]
[127.91478729 -74.65409851]
[122.78098297 -60.01088333]
[110.00145721 -51.20956039]
[109.75344849 -36.21160889]
[109.50543976 -21.21365929]
[117.03125000 -8.36019993]
[109.06683350 5.31015825]
[108.81882477 20.30810738]
[108.57081604 35.30605698]
[108.32280731 50.30400848]
[114.53263092 51.75309753]
[120.50971222 53.97486877]
[126.15832520 56.93373871]
[131.38801575 60.58232117]
[136.11502075 64.86218262]
[140.26364136 69.70477295]
[143.76742554 75.03255463]
[146.57028198 80.76018524]
[148.62728882 86.79595184]
[163.52693176 85.06368256]
[178.42657471 83.33141327]
[193.32621765 81.59914398]
[208.22584534 79.86687469]
[223.82289124 67.11456299]
[241.23316956 75.50306702]
[256.06738281 73.27911377]
[270.88272095 70.93259430]
[285.67813110 68.46367645]
[298.01657104 58.56046677]
[311.84378052 64.09740448]
[326.63919067 61.62848282]
[341.43463135 59.15956497]
[356.23004150 56.69064331]
[361.59115601 52.77210236]
[367.27221680 52.24260330]
[371.55477905 54.39315033]
[386.42376709 52.41476440]
[393.69033813 38.70432663]
[407.64270020 31.91380310]
[422.91586304 34.65428925]
[433.63699341 45.87201691]
[435.68356323 61.25353622]
[428.26867676 74.88433838]
[414.24346924 81.52310944]
[399.00091553 78.61709595]
[388.40213013 67.28372955]
[373.53317261 69.26210785]
[358.69894409 71.48606110]
[343.90353394 73.95498657]
[329.10812378 76.42390442]
[314.31268311 78.89282227]
[303.03253174 88.61943817]
[288.14706421 83.25909424]
[273.35162354 85.72801208]
[267.26052856 89.93762207]
[258.29135132 88.11332703]
[243.45712280 90.33728027]
[238.13253784 99.08433533]
[228.66964722 103.54143524]
[218.09973145 102.01329803]
[209.95811462 94.76651001]
[195.05848694 96.49877930]
[180.15884399 98.23104858]
[165.25920105 99.96331787]
[150.35955811 101.69558716]
[145.97517395 120.62145996]
[134.75665283 136.48199463]
[143.37158203 148.76136780]
[151.98651123 161.04074097]
[160.60144043 173.32011414]
[169.21636963 185.59948730]
[184.82440186 188.08236694]
[194.03753662 200.92346191]
[191.38978577 216.50437927]
[178.45199585 225.58123779]
[162.89994812 222.76889038]
[153.96038818 209.73587036]
[156.93699646 194.21441650]
[148.32206726 181.93504333]
[139.70713806 169.65567017]
[131.09220886 157.37629700]
[122.47727966 145.09692383]
[118.95236969 146.68798828]
[115.31581879 148.00402832]
[111.58905029 149.03727722]
[112.82773590 163.98605347]
[114.06642914 178.93481445]
[126.28689575 188.95657349]
[127.75845337 204.69219971]
[117.60804749 216.80603027]
[101.85774231 218.11114502]
[89.85190582 207.83323669]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 184]
[2 183]
[3 182]
[6 80]
[7 79]
[8 78]
[9 77]
[10 76]
[12 74]
[13 73]
[14 72]
[17 31]
[18 30]
[19 29]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
[84 107]
[85 106]
[86 105]
[87 104]
[89 102]
[90 101]
[91 100]
[116 162]
[117 161]
[118 160]
[119 159]
[120 158]
[122 154]
[123 153]
[124 151]
[125 150]
[127 148]
[128 147]
[129 146]
[130 145]
[133 144]
[134 143]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
