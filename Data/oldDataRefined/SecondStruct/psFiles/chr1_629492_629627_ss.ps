%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:16:46 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAAAGAUCCUGAUACUCUUAGCUUGGGUAGGGACUCUUAGGUUUUAAGAGGCACGGUGGAUAGUGUGGGGUAGGAUUUCAUUCCAGUCGAUUUAUUCGAUAGCCCGGGUAUGGGGCUUUUACAACCAAUAUAG\
) } def
/len { sequence length } bind def

/coor [
[89.73061371 103.59127045]
[76.06027222 97.41698456]
[62.38993073 91.24270630]
[48.71958923 85.06842041]
[36.34155655 88.89342499]
[25.05300331 83.40161896]
[20.71054840 72.05246735]
[7.18537426 65.56635284]
[-6.33980083 59.08024597]
[-19.86497688 52.59413528]
[-33.39015198 46.10802460]
[-46.91532516 39.62191010]
[-60.44050217 33.13579941]
[-73.96567535 26.64968872]
[-89.44115448 37.82240677]
[-109.32230377 37.76729202]
[-126.02054596 25.57544327]
[-132.61958313 5.14506149]
[-147.59494019 4.28560734]
[-162.57029724 3.42615318]
[-177.54565430 2.56669903]
[-192.52101135 1.70724511]
[-207.49636841 0.84779102]
[-222.48750305 0.33193779]
[-237.48651123 0.15995654]
[-252.48551941 -0.01202469]
[-267.48452759 -0.18400592]
[-282.48355103 -0.35598716]
[-297.48257446 -0.52796841]
[-312.48156738 -0.69994962]
[-321.63723755 11.82815933]
[-336.41842651 16.54999161]
[-351.14151001 11.64990711]
[-360.14514160 -0.98791331]
[-359.96722412 -16.50396919]
[-350.67617798 -28.93202019]
[-335.84463501 -33.49322510]
[-321.17559814 -28.43371201]
[-312.30960083 -15.69896412]
[-297.31057739 -15.52698231]
[-282.31158447 -15.35500145]
[-267.31256104 -15.18301964]
[-252.31353760 -15.01103878]
[-237.31452942 -14.83905792]
[-222.31552124 -14.66707611]
[-218.27999878 -17.36831284]
[-212.48739624 -17.50237465]
[-206.63691711 -14.12756634]
[-191.66156006 -13.26811218]
[-176.68620300 -12.40865898]
[-161.71084595 -11.54920483]
[-146.73548889 -10.68975067]
[-131.76013184 -9.83029652]
[-122.64007568 -21.73931503]
[-127.37336731 -35.97293854]
[-132.10664368 -50.20656204]
[-136.83993530 -64.44018555]
[-151.67036438 -69.00505066]
[-160.95831299 -81.43539429]
[-161.13240051 -96.95149994]
[-152.12565613 -109.58708954]
[-137.40138245 -114.48354340]
[-122.62134552 -109.75805664]
[-113.46878052 -97.22769165]
[-113.46302795 -81.71061707]
[-122.60630798 -69.17346954]
[-117.87302399 -54.93984604]
[-113.13973999 -40.70622253]
[-108.40645599 -26.47260094]
[-93.88172913 -27.09447670]
[-80.76354218 -21.89773941]
[-71.20451355 -12.10874939]
[-66.61903381 0.32698789]
[-67.47956848 13.12451363]
[-53.95439148 19.61062622]
[-40.42921448 26.09673691]
[-26.90403938 32.58284760]
[-13.37886429 39.06895828]
[0.14631036 45.55506897]
[13.67148590 52.04117966]
[27.19666100 58.52729416]
[44.55413437 56.21018219]
[54.89387131 71.39807892]
[68.56420898 77.57236481]
[82.23455048 83.74664307]
[95.90489197 89.92092896]
[97.75477600 82.00298309]
[103.48558807 74.84652710]
[112.70008087 69.92003632]
[126.98703766 65.35025787]
[141.27398682 60.78047943]
[155.56094360 56.21070099]
[169.84790039 51.64092255]
[178.44534302 38.09605026]
[194.41041565 36.51604080]
[205.49606323 48.11293411]
[203.19833374 63.99059296]
[189.27984619 71.96903229]
[174.41767883 65.92787933]
[160.13072205 70.49765778]
[145.84378052 75.06743622]
[131.55682373 79.63721466]
[117.26985931 84.20699310]
[116.41040802 99.18235016]
[130.08074951 105.35663605]
[143.75108337 111.53092194]
[157.42143250 117.70520020]
[171.09176636 123.87948608]
[185.10383606 116.93713379]
[200.28787231 120.67597198]
[209.47445679 133.33064270]
[208.32595825 148.92599487]
[197.38465881 160.09837341]
[181.81671143 161.57254028]
[168.97282410 152.65242004]
[164.91749573 137.54981995]
[151.24714661 131.37554932]
[137.57681274 125.20126343]
[123.90646362 119.02697754]
[110.23612213 112.85269165]
[120.37954712 123.90307617]
[126.50351715 137.59603882]
[127.97824860 152.52336121]
[124.65206909 167.14993286]
[116.86705780 179.97154236]
[105.42382050 189.66960144]
[91.49919128 195.24674988]
[76.52518463 196.12945557]
[62.04173660 192.22691345]
[49.53833771 183.94047546]
[40.30084610 172.12231445]
[35.27924728 157.98783875]
[34.98996735 142.99063110]
[39.46275330 128.67300415]
[48.23762512 116.50741577]
[60.41217041 107.74497223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 86]
[2 85]
[3 84]
[4 83]
[7 81]
[8 80]
[9 79]
[10 78]
[11 77]
[12 76]
[13 75]
[14 74]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[23 48]
[24 45]
[25 44]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[54 69]
[55 68]
[56 67]
[57 66]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
[104 120]
[105 119]
[106 118]
[107 117]
[108 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
