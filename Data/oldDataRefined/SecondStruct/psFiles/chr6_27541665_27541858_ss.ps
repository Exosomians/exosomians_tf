%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:05 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUCUUUUUCAGACUAGUCCAACCUUGUUGGUCCGAAGAAGGACCUUCUGUUUCAGUCCUAUAGGGUAGACUAUUCCACAAUAUAGGGAAAACGUUUCCCUUUGCAAUAGCAUCAGCCGUCCUAAGCUUGGACGCGCCCCUUUGGGGUUACCUAAAGAUCAGGUAGCGGAAUUGGUGAGCCGGUGCUGAUGUG\
) } def
/len { sequence length } bind def

/coor [
[97.45073700 174.22087097]
[104.81682587 187.28765869]
[106.31905365 202.21223450]
[101.70478821 216.48489380]
[91.74998474 227.70549011]
[78.12865448 233.98716736]
[63.13138962 234.27355957]
[49.28015518 228.51654053]
[38.90420532 217.68418884]
[33.74837875 203.59811401]
[34.67968369 188.62705994]
[41.54151917 175.28857422]
[53.18301010 165.82411194]
[38.29237747 167.63217163]
[25.52545166 176.97648621]
[11.95834827 170.82969666]
[-2.93228531 172.63775635]
[-17.82291794 174.44580078]
[-32.71355057 176.25384521]
[-47.60418320 178.06190491]
[-56.16562653 187.72055054]
[-68.61449432 188.91348267]
[-78.21751404 181.54388428]
[-93.13534546 183.11181641]
[-108.05317688 184.67974854]
[-122.97100067 186.24766541]
[-137.88882446 187.81559753]
[-152.80665588 189.38352966]
[-167.72448730 190.95144653]
[-180.64028931 200.08888245]
[-194.10661316 193.72431946]
[-209.02444458 195.29225159]
[-221.94024658 204.42967224]
[-235.40657043 198.06512451]
[-248.32237244 207.20254517]
[-261.78869629 200.83799744]
[-276.70651245 202.40592957]
[-291.62435913 203.97384644]
[-306.54217529 205.54177856]
[-319.45797729 214.67919922]
[-332.92428589 208.31465149]
[-347.84213257 209.88258362]
[-362.75994873 211.45050049]
[-375.70187378 221.52218628]
[-390.79125977 215.10014343]
[-392.50543213 198.79083252]
[-379.08102417 189.37187195]
[-364.32788086 196.53268433]
[-349.41006470 194.96475220]
[-334.49221802 193.39682007]
[-322.64343262 184.37155151]
[-308.11010742 190.62394714]
[-293.19226074 189.05603027]
[-278.27444458 187.48809814]
[-263.35662842 185.92016602]
[-251.50782776 176.89489746]
[-236.97448730 183.14729309]
[-225.12570190 174.12202454]
[-210.59236145 180.37442017]
[-195.67454529 178.80650330]
[-183.82575989 169.78121948]
[-169.29241943 176.03363037]
[-154.37458801 174.46569824]
[-139.45675659 172.89776611]
[-124.53893280 171.32984924]
[-109.62110138 169.76191711]
[-94.70326996 168.19398499]
[-79.78544617 166.62606812]
[-66.17285156 155.55967712]
[-49.41223526 163.17126465]
[-34.52160263 161.36322021]
[-19.63096809 159.55516052]
[-4.74033546 157.74711609]
[10.15029716 155.93907166]
[21.85214424 146.72407532]
[36.48432541 152.74153137]
[51.37496185 150.93348694]
[65.99502563 147.57884216]
[80.18434906 142.71437073]
[94.37367249 137.84989929]
[78.69699860 139.80850220]
[61.42166138 134.91848755]
[45.54696274 122.50108337]
[34.27275085 103.16116333]
[30.46790504 78.81575012]
[36.15321350 52.51019287]
[34.46516800 37.60547638]
[32.77712631 22.70076370]
[31.08908272 7.79604864]
[29.40103912 -7.10866547]
[27.71299553 -22.01338005]
[26.02495193 -36.91809464]
[18.23454475 -51.97617722]
[30.54755402 -63.63062668]
[45.15512085 -55.02508545]
[40.92966843 -38.60613632]
[42.61771011 -23.70142365]
[44.30575180 -8.79670906]
[45.99379730 6.10800552]
[47.68183899 21.01272011]
[49.36988449 35.91743469]
[51.05792618 50.82214737]
[65.94922638 52.63027191]
[80.83919525 54.43824768]
[86.04511261 40.37061310]
[91.25103760 26.30297852]
[87.95826721 10.23780823]
[100.40264893 -0.44252652]
[115.78246307 5.24898720]
[118.27627563 21.45740891]
[105.31867218 31.50890160]
[100.11275482 45.57653809]
[94.90682983 59.64417267]
[100.82928467 64.24575043]
[114.72178650 58.58903885]
[112.67420197 73.44889832]
[118.59665680 78.05047607]
[130.94142151 69.52950287]
[143.21713257 60.90936661]
[155.42301941 52.19062805]
[167.62890625 43.47188568]
[179.83477783 34.75314713]
[192.04066467 26.03440666]
[193.07664490 10.43117809]
[203.93707275 -0.81983143]
[219.49397278 -2.40623879]
[232.40187073 6.42100906]
[236.56604004 21.49395561]
[230.02029419 35.69561768]
[215.85531616 42.32040024]
[200.75939941 38.24029160]
[188.55352783 46.95903015]
[176.34764099 55.67776871]
[164.14175415 64.39650726]
[151.93588257 73.11524963]
[148.31552124 79.56998444]
[139.46238708 81.87425995]
[127.11763000 90.39523315]
[128.97109985 97.66259766]
[132.67803955 112.19734192]
[134.53150940 119.46470642]
[149.44932556 121.03263855]
[164.36715698 122.60056305]
[179.28498840 124.16848755]
[194.20281982 125.73641205]
[209.12065125 127.30434418]
[224.03846741 128.87226868]
[238.79161072 121.71146393]
[252.21603394 131.13041687]
[250.50184631 147.43972778]
[235.41247559 153.86177063]
[222.47055054 143.79010010]
[207.55271912 142.22216797]
[192.63488770 140.65425110]
[177.71705627 139.08631897]
[162.79924011 137.51838684]
[147.88140869 135.95046997]
[132.96357727 134.38253784]
[125.56845856 147.43290710]
[134.57958984 159.42454529]
[143.59072876 171.41619873]
[152.60186768 183.40783691]
[161.61299133 195.39947510]
[169.28082275 200.38867188]
[170.67085266 207.65766907]
[179.48764038 219.79292297]
[193.85877991 226.40962219]
[195.08007812 241.25407410]
[203.89685059 253.38932800]
[212.71363831 265.52459717]
[227.97979736 263.83938599]
[242.03681946 270.02770996]
[251.10345459 282.42495728]
[252.74081421 297.69631958]
[246.50845337 311.73388672]
[234.08285522 320.76159668]
[218.80642700 322.35110474]
[204.78846741 316.07476807]
[195.79972839 303.62091064]
[194.25813293 288.33959961]
[200.57838440 274.34136963]
[191.76159668 262.20611572]
[182.94482422 250.07086182]
[169.20431519 244.32214355]
[167.35238647 228.60971069]
[158.53559875 216.47445679]
[149.62135315 204.41061401]
[140.61021423 192.41897583]
[131.59909058 180.42732239]
[122.58795166 168.43568420]
[113.57682037 156.44404602]
[99.23815155 152.03921509]
[85.04882812 156.90368652]
[70.85950470 161.76817322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 77]
[14 76]
[16 74]
[17 73]
[18 72]
[19 71]
[20 70]
[23 68]
[24 67]
[25 66]
[26 65]
[27 64]
[28 63]
[29 62]
[31 60]
[32 59]
[34 57]
[36 55]
[37 54]
[38 53]
[39 52]
[41 50]
[42 49]
[43 48]
[78 194]
[79 193]
[80 192]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[92 96]
[104 113]
[105 112]
[106 111]
[117 138]
[118 137]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
[159 191]
[160 190]
[161 189]
[162 188]
[163 187]
[165 186]
[166 185]
[168 183]
[169 182]
[170 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
