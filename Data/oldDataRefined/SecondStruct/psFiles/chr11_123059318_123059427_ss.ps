%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:01 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACAAAAUUGAUAGUGAGCGAGUCUGUAGGUUCCUUCCACAACGGUAGUAAUCGGUUCGAAAACCACCUUUGAUGCUUACAAAUUGUUAGUGAGUAGUGUCGCUCAGUG\
) } def
/len { sequence length } bind def

/coor [
[68.98938751 333.76980591]
[68.63072205 348.99450684]
[62.10475159 362.75430298]
[50.54215240 372.66519165]
[35.94620514 377.01010132]
[20.84575081 375.03625488]
[7.85703182 367.08557129]
[-0.76957572 354.53561401]
[-3.53946114 339.56072998]
[0.02727505 324.75537109]
[9.31267452 312.68469238]
[22.70798492 305.44000244]
[37.89238739 304.27648926]
[42.88948441 290.13333130]
[39.83412170 275.55545044]
[51.72683334 265.12118530]
[56.72393036 250.97802734]
[61.72102737 236.83486938]
[66.71812439 222.69171143]
[71.71521759 208.54855347]
[76.71231842 194.40538025]
[81.70941162 180.26222229]
[75.07588959 166.97569275]
[79.94218445 152.56132507]
[93.92330170 145.69355774]
[98.92039490 131.55039978]
[87.02656555 127.39624786]
[78.16413116 119.16992188]
[73.54514313 108.54479980]
[73.57680511 97.46514893]
[59.65847015 91.87230682]
[45.22241592 98.30471039]
[30.49630737 92.56735229]
[24.21688461 78.06410217]
[30.10961533 63.39947510]
[44.67844772 57.27373886]
[59.27995300 63.32118225]
[65.25131989 77.95396423]
[79.16965485 83.54681396]
[86.08252716 77.39658356]
[94.68642426 73.99275970]
[95.95851135 59.04679489]
[97.23060608 44.10083389]
[90.69151306 29.69420815]
[99.48028564 17.66895485]
[100.75238037 2.72299266]
[102.02446747 -12.22297001]
[95.48537445 -26.62959480]
[104.27414703 -38.65485001]
[105.54624176 -53.60081100]
[95.63508606 -65.61775208]
[97.13807678 -80.75695801]
[108.65547180 -90.13166809]
[109.92755890 -105.07763672]
[111.19965363 -120.02359772]
[106.51834869 -136.31843567]
[120.88046265 -145.32765198]
[133.51342773 -134.02081299]
[126.14561462 -118.75151062]
[124.87352753 -103.80554199]
[123.60143280 -88.85958099]
[133.36883545 -77.67327118]
[132.29165649 -62.49781799]
[120.49220276 -52.32872009]
[119.22011566 -37.38275909]
[125.85018921 -24.04516792]
[116.97042847 -10.95088100]
[115.69834137 3.99508166]
[114.42624664 18.94104385]
[121.05632782 32.27863312]
[112.17656708 45.37292099]
[110.90447998 60.31888580]
[109.63238525 75.26484680]
[122.53421783 83.01360321]
[129.76649475 97.24111176]
[128.27204895 114.04579163]
[143.09068298 116.37134552]
[157.90931702 118.69689178]
[172.72795105 121.02244568]
[187.54658508 123.34799194]
[202.36520386 125.67353821]
[212.54006958 114.07717133]
[227.37545776 109.84460449]
[242.13746643 114.32642365]
[252.11558533 126.09251404]
[254.12582397 141.38833618]
[247.52674866 155.33306885]
[234.42407227 163.47700500]
[218.99882507 163.22140503]
[206.17314148 154.64787292]
[200.03965759 140.49217224]
[185.22102356 138.16662598]
[170.40240479 135.84107971]
[155.58377075 133.51551819]
[140.76513672 131.18997192]
[125.94650269 128.86442566]
[113.06356049 136.54750061]
[108.06645966 150.69065857]
[114.62979889 164.81724548]
[109.36055756 179.08923340]
[95.85257721 185.25932312]
[90.85547638 199.40248108]
[85.85838318 213.54563904]
[80.86128235 227.68881226]
[75.86418915 241.83197021]
[70.86708832 255.97512817]
[65.86999512 270.11828613]
[68.56793213 285.70776367]
[57.03264618 295.13043213]
[52.03554916 309.27359009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 110]
[14 109]
[16 107]
[17 106]
[18 105]
[19 104]
[20 103]
[21 102]
[22 101]
[25 98]
[26 97]
[30 39]
[31 38]
[41 73]
[42 72]
[43 71]
[45 69]
[46 68]
[47 67]
[49 65]
[50 64]
[53 61]
[54 60]
[55 59]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
