%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:02 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUCCCAUUCCACCCUCUCCUUUGGUGUAUUUUGACCUCUUACGCCCGUAGCUAGGGCGAUGGAGAGCGUACGAUUCGCUCGCGAGAUGGUAAACUCGAUUAAGGGGCACACC\
) } def
/len { sequence length } bind def

/coor [
[-54.85747910 229.13230896]
[-58.47755051 243.68891907]
[-53.43027496 259.29202271]
[-64.61867523 271.28167725]
[-80.53308868 267.32394409]
[-84.80212402 251.49020386]
[-73.03416443 240.06884766]
[-69.41410065 225.51223755]
[-73.52000427 223.40406799]
[-77.37442017 220.86511230]
[-80.93231964 217.92500305]
[-84.15213776 214.61810303]
[-86.99627686 210.98303223]
[-100.60990906 217.28137207]
[-114.22353363 223.57969666]
[-127.83716583 229.87803650]
[-129.85559082 245.17279053]
[-139.83999634 256.93353271]
[-154.60440063 261.40747070]
[-169.43753052 257.16696167]
[-179.60618591 245.56515503]
[-181.86558533 230.30413818]
[-175.49478149 216.25364685]
[-162.52664185 207.89714050]
[-147.09928894 207.90115356]
[-134.13549805 216.26440430]
[-120.52187347 209.96606445]
[-106.90824127 203.66773987]
[-93.29460907 197.36940002]
[-94.29545593 179.94548035]
[-88.23540497 163.53134155]
[-76.09071350 150.87382507]
[-59.85903168 144.10623169]
[-42.23082352 144.38883972]
[-26.14347458 151.71006775]
[-15.25354099 141.39456177]
[-12.52530479 134.41751099]
[-3.92625046 130.95213318]
[7.23902559 120.93532562]
[18.40430260 110.91850281]
[29.56957817 100.90168762]
[40.73485565 90.88487244]
[51.90013123 80.86805725]
[63.06540680 70.85124207]
[67.27367401 56.45365524]
[63.26074982 42.00040436]
[59.24782181 27.54715538]
[55.23489761 13.09390450]
[51.22197342 -1.35934532]
[36.91639709 -7.67476654]
[30.06359673 -21.73083687]
[33.89925003 -36.89070892]
[46.61228561 -45.99635696]
[62.19998932 -44.74837112]
[73.30233002 -33.73601151]
[74.67711639 -18.15897942]
[65.67522430 -5.37227011]
[69.68814850 9.08097935]
[73.70107269 23.53422928]
[77.71399689 37.98748016]
[81.72692108 52.44073105]
[88.83432007 54.83549118]
[88.99684143 39.83637238]
[103.31208038 35.35597610]
[111.99681854 47.58607101]
[103.04911804 59.62501526]
[110.15651703 62.01977539]
[122.09791565 52.94216156]
[134.03930664 43.86454773]
[145.98071289 34.78693390]
[157.92210388 25.70932198]
[158.49394226 10.08219814]
[169.01522827 -1.48658335]
[184.51811218 -3.53459692]
[197.68263245 4.90516663]
[202.29287720 19.84770966]
[196.17205811 34.23761749]
[182.21022034 41.28041840]
[166.99971008 37.65071869]
[155.05831909 46.72833252]
[143.11692810 55.80594635]
[131.17552185 64.88356018]
[119.23413086 73.96117401]
[124.14554596 87.13681793]
[122.32189941 99.00830078]
[136.66117859 103.41114044]
[151.00045776 107.81397247]
[165.33973694 112.21681213]
[177.66207886 102.78603363]
[193.17514038 102.43291473]
[205.91383362 111.29324341]
[210.97985840 125.96004486]
[206.42524719 140.79362488]
[194.00132751 150.09017944]
[178.48535156 150.27497864]
[165.84353638 141.27699280]
[160.93690491 126.55609894]
[146.59762573 122.15325928]
[132.25834656 117.75041962]
[117.91905975 113.34757996]
[97.44731903 125.55959320]
[73.74948120 112.39460754]
[73.08222198 82.01651764]
[61.91694641 92.03333282]
[50.75167084 102.05014801]
[39.58639526 112.06696320]
[28.42111778 122.08377838]
[17.25584221 132.10060120]
[6.09056616 142.11741638]
[-4.93804932 152.28450012]
[-15.82798195 162.59999084]
[-9.72669983 177.33612061]
[-9.37483692 193.24136353]
[-14.79108429 208.15747070]
[-25.21339989 220.07090759]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 8]
[2 7]
[13 29]
[14 28]
[15 27]
[16 26]
[35 111]
[36 110]
[38 109]
[39 108]
[40 107]
[41 106]
[42 105]
[43 104]
[44 103]
[45 61]
[46 60]
[47 59]
[48 58]
[49 57]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[85 100]
[86 99]
[87 98]
[88 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
