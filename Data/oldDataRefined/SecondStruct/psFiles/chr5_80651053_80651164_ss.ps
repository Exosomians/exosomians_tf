%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:17:50 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCAGUUCAACUCAACUUUAGAGGAUUCACAUUCAACCCACGAAAUACAAUUCGAUGUGAGACCAAGCAGGUUCACGUGAAAGGUCAUGUGAAUGGUACAAUGCUGAAUAG\
) } def
/len { sequence length } bind def

/coor [
[80.74604797 201.69853210]
[77.76127625 186.56265259]
[83.45465088 172.22428894]
[96.00942230 163.25872803]
[95.17579651 148.28190613]
[94.34217834 133.30508423]
[93.50856018 118.32826996]
[92.54212952 133.29710388]
[86.64658356 147.08995056]
[76.49476624 158.13262939]
[63.24531555 165.16482544]
[48.41037750 167.38398743]
[33.68307114 164.53681946]
[20.74421310 156.94827271]
[11.07052040 145.48443604]
[5.76604795 131.45365906]
[5.43619490 116.45729065]
[10.11860752 102.20684814]
[19.27888107 90.32874298]
[31.87155724 82.17861938]
[46.45943451 78.68665314]
[61.37759781 80.25137329]
[74.92344666 86.69420624]
[85.55244446 97.28188324]
[76.27013397 85.49890137]
[61.65239716 79.44643402]
[59.85439301 64.66075134]
[50.57207870 52.87776566]
[41.28976440 41.09478760]
[32.00744629 29.31180573]
[22.72513199 17.52882576]
[13.44281769 5.74584532]
[4.16050291 -6.03713512]
[2.22668600 8.83768749]
[-7.92476416 19.88069725]
[-22.58463097 23.05691147]
[-36.39637375 17.20577812]
[-44.31334686 4.46523237]
[-43.44279099 -10.50948429]
[-34.10278702 -22.24678993]
[-19.70606613 -26.45801544]
[-5.51412010 -21.60524559]
[-11.96864986 -35.14552307]
[-18.42317963 -48.68579483]
[-24.87770844 -62.22607040]
[-39.85610962 -67.26820374]
[-46.80717850 -81.46179962]
[-41.60696793 -96.38605499]
[-27.34067345 -103.18666840]
[-12.47223377 -97.82896423]
[-5.82282877 -83.49156952]
[-11.33743382 -68.68060303]
[-4.88290405 -55.14032745]
[1.57162535 -41.60005188]
[8.02615452 -28.05977631]
[15.94348335 -15.31945038]
[25.22579765 -3.53646946]
[34.50811386 8.24651146]
[43.79042816 20.02949142]
[53.07274246 31.81247139]
[62.35505676 43.59545135]
[71.63737488 55.37843323]
[85.59117126 60.58810806]
[88.05311584 76.21659088]
[97.33542633 87.99957275]
[103.04506683 83.38622284]
[111.79487610 82.03807068]
[121.67631531 85.48697662]
[136.60534668 84.02969360]
[145.46105957 74.52587891]
[158.02079773 73.69038391]
[167.43437195 81.42688751]
[182.39816284 80.38516235]
[197.36193848 79.34343719]
[212.32572937 78.30171204]
[227.28950500 77.25998688]
[242.25329590 76.21826172]
[257.21707153 75.17653656]
[272.18084717 74.13481140]
[287.14465332 73.09308624]
[302.10842896 72.05136108]
[315.39694214 62.44159317]
[330.25085449 69.39092255]
[331.38973999 85.75047302]
[317.64202881 94.69094086]
[303.15014648 87.01514435]
[288.18637085 88.05686951]
[273.22259521 89.09859467]
[258.25878906 90.14031982]
[243.29501343 91.18204498]
[228.33123779 92.22377014]
[213.36744690 93.26549530]
[198.40367126 94.30722046]
[183.43988037 95.34894562]
[168.47610474 96.39067078]
[154.56227112 106.98564148]
[138.06263733 98.95873260]
[123.13359833 100.41602325]
[137.82441711 103.44583130]
[145.49607849 116.33558655]
[141.15388489 130.69334412]
[127.62487030 137.17143250]
[113.71714020 131.55226135]
[108.48537445 117.49465179]
[109.31899261 132.47146606]
[110.15261841 147.44828796]
[110.98623657 162.42510986]
[124.45843506 169.94197083]
[131.70788574 183.55995178]
[130.42129517 198.93357849]
[121.00922394 211.15718079]
[106.47503662 216.33026123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 107]
[5 106]
[6 105]
[7 104]
[24 65]
[25 64]
[27 62]
[28 61]
[29 60]
[30 59]
[31 58]
[32 57]
[33 56]
[42 55]
[43 54]
[44 53]
[45 52]
[68 98]
[69 97]
[72 95]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
