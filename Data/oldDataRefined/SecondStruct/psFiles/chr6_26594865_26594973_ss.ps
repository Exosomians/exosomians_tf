%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:03 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUACUGUAGGAAGCUAUCGAGUCGACCAUCUCGCCUCCUGACAUCCCCAAACUUACACCAGUAGGAAUCCAGCGACCAAGCUUAGGCCGAGCCUCCUCAAGGUAAAAA\
) } def
/len { sequence length } bind def

/coor [
[100.75355530 347.22564697]
[110.31549072 334.34353638]
[109.45915985 319.36798096]
[108.60282898 304.39245605]
[107.74649811 289.41693115]
[106.89015961 274.44137573]
[93.89624786 263.87145996]
[92.46729279 246.84547424]
[103.96041870 233.75270081]
[102.67678833 218.80772400]
[101.39316559 203.86274719]
[100.10954285 188.91777039]
[91.31148529 176.89930725]
[97.83945465 162.48764038]
[96.55583191 147.54266357]
[95.27220154 132.59768677]
[78.92353821 127.50679016]
[66.60631561 114.40348816]
[62.11816788 96.10112000]
[47.14263153 96.95745087]
[32.16709518 97.81378937]
[17.19155693 98.67012024]
[8.91599751 111.79622650]
[-5.50685740 117.51994324]
[-20.53112411 113.64037323]
[-30.37966537 101.64929962]
[-31.26551628 86.15753174]
[-22.84805107 73.12197113]
[-8.36395264 67.55505371]
[6.61734390 71.59737396]
[16.33522606 83.69458008]
[31.31076241 82.83824921]
[46.28629684 81.98191833]
[61.26183701 81.12558746]
[70.07861328 68.99033356]
[66.26534271 54.48312759]
[62.45206451 39.97592545]
[51.46070099 28.59609604]
[55.70830154 14.31999111]
[51.89502716 -0.18721196]
[48.08175278 -14.69441509]
[32.97743225 -15.53983498]
[18.87435341 -21.01325798]
[7.15419197 -30.57845497]
[-1.03483129 -43.29832458]
[-4.89043903 -57.92670441]
[-4.03489828 -73.03045654]
[1.44797432 -87.12985992]
[11.02102280 -98.84361267]
[23.74637604 -107.02410889]
[38.37733459 -110.86991119]
[53.48050690 -110.00424957]
[67.57624054 -104.51193237]
[79.28356934 -94.93103790]
[87.45554352 -82.20020294]
[91.29154205 -67.56667328]
[90.41575623 -52.46408463]
[84.91399384 -38.37203598]
[75.32525635 -26.67112732]
[62.58895493 -18.50769043]
[66.40222931 -4.00048685]
[70.21550751 10.50671577]
[80.93411255 20.84889412]
[76.95926666 36.16265106]
[80.77254486 50.66985321]
[84.58581543 65.17705536]
[98.73488617 63.22560883]
[112.10778809 66.61757660]
[122.83032227 74.50302124]
[129.54127502 85.43035889]
[144.15145874 82.03290558]
[158.65866089 78.21963501]
[173.05105591 73.99364471]
[187.44345093 69.76765442]
[194.79670715 55.77819443]
[209.91288757 51.16553497]
[223.82382202 58.66629028]
[228.27641296 73.83039856]
[220.62899780 87.66125488]
[205.41867065 91.95326233]
[191.66943359 84.16004944]
[177.27703857 88.38603973]
[162.88464355 92.61203003]
[159.79319763 96.43032074]
[154.21136475 98.25566101]
[147.54890442 96.64308929]
[132.93872070 100.04054260]
[131.32034302 110.19790649]
[126.64801025 119.36090851]
[119.37730408 126.63608551]
[110.21717834 131.31405640]
[111.50080872 146.25903320]
[112.78443146 161.20401001]
[121.67430115 174.29144287]
[115.05451965 187.63414001]
[116.33814240 202.57911682]
[117.62176514 217.52409363]
[118.90539551 232.46907043]
[130.20431519 239.96308899]
[135.00865173 252.43228149]
[131.75566101 265.19134521]
[121.86569977 273.58505249]
[122.72203064 288.56057739]
[123.57836151 303.53613281]
[124.43469238 318.51165771]
[125.29103088 333.48718262]
[136.25909424 345.19537354]
[133.80126953 361.04901123]
[119.80298615 368.88659668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 106]
[3 105]
[4 104]
[5 103]
[6 102]
[9 98]
[10 97]
[11 96]
[12 95]
[14 93]
[15 92]
[16 91]
[19 34]
[20 33]
[21 32]
[22 31]
[35 66]
[36 65]
[37 64]
[39 62]
[40 61]
[41 60]
[70 87]
[71 86]
[72 83]
[73 82]
[74 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
