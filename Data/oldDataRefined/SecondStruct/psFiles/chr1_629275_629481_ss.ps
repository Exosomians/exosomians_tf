%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:16:46 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACAAGAAUACUUAAGCUUGUCGUAUGGGGGCUAAGGCGAUGCUGGUUGAGUAUGUGGAGGAUACUUUUUUGAAGGAUGGUGAGUGGGAUCGUAAUGAAUAUACUAUACAGAGGUAUGGGUAAUGUUAGAGGUCGUAAGGGGGAGUUUGGAUUCUUUAUACAGACUAUUUUCUCAAUGAAACUAUCUCAUUUAUUAUCCUC\
) } def
/len { sequence length } bind def

/coor [
[-172.23896790 283.27359009]
[-176.03302002 293.61648560]
[-181.59048462 303.12301636]
[-188.73532104 311.49560547]
[-197.24186707 318.47253418]
[-206.84188843 323.83605957]
[-217.23312378 327.41937256]
[-228.08869934 329.11163330]
[-239.06752014 328.86145020]
[-249.82490540 326.67843628]
[-260.02343750 322.63287354]
[-269.34359741 316.85345459]
[-277.49362183 309.52316284]
[-284.21881104 300.87341309]
[-297.70513916 307.43991089]
[-311.19146729 314.00643921]
[-324.67779541 320.57296753]
[-338.16412354 327.13946533]
[-351.65042114 333.70599365]
[-365.13674927 340.27249146]
[-378.62307739 346.83901978]
[-387.64349365 359.83679199]
[-402.47357178 358.45187378]
[-412.42257690 373.94570923]
[-429.86575317 372.03057861]
[-443.25134277 378.80001831]
[-456.63696289 385.56948853]
[-470.02258301 392.33892822]
[-483.40817261 399.10839844]
[-496.79379272 405.87783813]
[-506.50762939 421.52017212]
[-523.97772217 419.86868286]
[-537.25958252 426.83953857]
[-550.54144287 433.81039429]
[-561.75640869 446.52496338]
[-577.07873535 439.26803589]
[-574.34698486 422.53558350]
[-557.51226807 420.52856445]
[-544.23040771 413.55770874]
[-530.94860840 406.58685303]
[-527.05078125 395.13394165]
[-516.04052734 389.21823120]
[-503.56323242 392.49221802]
[-490.17764282 385.72277832]
[-476.79202271 378.95333862]
[-463.40640259 372.18386841]
[-450.02081299 365.41442871]
[-436.63519287 358.64495850]
[-432.56488037 347.25222778]
[-421.46655273 341.50347900]
[-409.04010010 344.96554565]
[-400.98431396 332.43743896]
[-385.18960571 333.35269165]
[-371.70327759 326.78619385]
[-358.21694946 320.21966553]
[-344.73062134 313.65313721]
[-331.24429321 307.08663940]
[-317.75799561 300.52011108]
[-304.27166748 293.95361328]
[-290.78533936 287.38708496]
[-293.86990356 273.15588379]
[-293.54000854 258.59796143]
[-289.81402588 244.52107239]
[-302.98904419 237.35041809]
[-316.16409302 230.17976379]
[-329.33914185 223.00910950]
[-345.71054077 223.96257019]
[-354.49468994 210.11442566]
[-346.65518188 195.71046448]
[-330.25665283 195.56823730]
[-322.16848755 209.83407593]
[-308.99343872 217.00471497]
[-295.81838989 224.17536926]
[-282.64337158 231.34602356]
[-268.09613037 216.75148010]
[-249.53948975 207.73417664]
[-229.02555847 205.30969238]
[-208.82893372 209.76351929]
[-191.19451904 220.61752319]
[-178.08799744 236.68125916]
[-164.22979736 230.94099426]
[-150.37161255 225.20074463]
[-136.51341248 219.46049500]
[-122.65522003 213.72024536]
[-108.79702759 207.97999573]
[-94.93883514 202.23974609]
[-81.08064270 196.49949646]
[-67.22245026 190.75924683]
[-53.36425400 185.01898193]
[-39.50606155 179.27873230]
[-25.64786911 173.53848267]
[-11.78967667 167.79823303]
[2.06851649 162.05798340]
[15.92670918 156.31773376]
[29.78490257 150.57748413]
[43.64309692 144.83723450]
[52.44062424 132.81837463]
[68.15126038 134.68560791]
[82.00945282 128.94535828]
[69.57961273 118.06473541]
[63.38066483 102.09169006]
[65.34983826 84.45300293]
[75.60256958 69.21891022]
[92.28092194 60.16447067]
[98.64299774 46.58051300]
[105.00507355 32.99655151]
[111.36715698 19.41259384]
[117.72923279 5.82863426]
[115.09913635 -14.15594482]
[131.41819763 -24.52526283]
[137.36709595 -38.29517746]
[143.31600952 -52.06509399]
[149.26490784 -65.83500671]
[155.21380615 -79.60492706]
[161.16270447 -93.37483978]
[158.73156738 -109.59278107]
[171.72792053 -119.59410858]
[186.78225708 -113.09031677]
[188.40794373 -96.77194977]
[174.93261719 -87.42594147]
[168.98371887 -73.65602875]
[163.03482056 -59.88610840]
[157.08592224 -46.11619186]
[151.13702393 -32.34627914]
[145.18812561 -18.57636261]
[149.79548645 -9.45256138]
[148.59381104 0.91878164]
[141.74012756 9.08393097]
[131.31320190 12.19071388]
[124.95111847 25.77467346]
[118.58903503 39.35863113]
[112.22695923 52.94259262]
[105.86487579 66.52655029]
[110.03165436 72.76257324]
[124.99951935 71.78121185]
[118.36520386 85.23461914]
[122.53198242 91.47064209]
[137.51658630 90.79119873]
[152.50119019 90.11176300]
[167.48579407 89.43231964]
[182.46484375 88.63973999]
[197.43746948 87.73406219]
[212.41011047 86.82838440]
[221.53297424 77.70831299]
[234.02391052 77.26344299]
[243.16595459 85.18714905]
[258.15057373 84.50771332]
[273.13516235 83.82826996]
[288.11978149 83.14883423]
[303.10437012 82.46939850]
[318.08898926 81.78995514]
[333.07357788 81.11051941]
[346.59066772 71.82501221]
[361.27212524 79.13162994]
[362.01495361 95.51394653]
[348.05496216 104.11923981]
[333.75302124 96.09512329]
[318.76840210 96.77455902]
[303.78381348 97.45400238]
[288.79919434 98.13343811]
[273.81460571 98.81287384]
[258.82998657 99.49231720]
[243.84539795 100.17175293]
[229.59294128 110.40891266]
[213.31578064 101.80101776]
[198.34315491 102.70669556]
[183.37051392 103.61237335]
[176.88218689 107.15489197]
[168.16523743 104.41692352]
[153.18063354 105.09636688]
[138.19602966 105.77580261]
[123.21142578 106.45524597]
[120.60491943 113.48774719]
[130.17909241 125.03482819]
[115.39191437 127.55276489]
[112.78541565 134.58526611]
[123.70752716 144.86668396]
[134.62963867 155.14808655]
[150.64427185 156.10270691]
[159.76470947 169.30108643]
[154.99453735 184.61856079]
[139.99302673 190.30487061]
[126.26804352 181.99797058]
[124.34822845 166.07020569]
[113.42611694 155.78878784]
[102.50399780 145.50738525]
[87.74970245 142.80355835]
[73.89151001 148.54380798]
[64.10275269 160.97323608]
[49.38334656 158.69541931]
[35.52515411 164.43566895]
[21.66696167 170.17591858]
[7.80876780 175.91616821]
[-6.04942513 181.65643311]
[-19.90761757 187.39668274]
[-33.76581192 193.13693237]
[-47.62400436 198.87718201]
[-61.48219681 204.61743164]
[-75.34039307 210.35768127]
[-89.19858551 216.09793091]
[-103.05677795 221.83818054]
[-116.91497040 227.57844543]
[-130.77316284 233.31869507]
[-144.63134766 239.05894470]
[-158.48954773 244.79919434]
[-172.34774780 250.53944397]
[-170.36514282 261.39169312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[23 51]
[25 48]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[32 40]
[33 39]
[34 38]
[63 74]
[64 73]
[65 72]
[66 71]
[80 206]
[81 205]
[82 204]
[83 203]
[84 202]
[85 201]
[86 200]
[87 199]
[88 198]
[89 197]
[90 196]
[91 195]
[92 194]
[93 193]
[94 192]
[95 191]
[96 190]
[98 188]
[99 187]
[104 133]
[105 132]
[106 131]
[107 130]
[108 129]
[110 125]
[111 124]
[112 123]
[113 122]
[114 121]
[115 120]
[137 172]
[138 171]
[139 170]
[140 169]
[141 167]
[142 166]
[143 165]
[146 163]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
[176 186]
[177 185]
[178 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
