%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:17:37 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAUCGUCUCAUGUGUGUUCUUCUUUUCAUUGUCGUGAUCUAACAUUUCUGACCCCACCUGGAGAAAGAAUUACAGGUUACAGGAAACAGAAUUCUAAACCACGUUAUAGAG\
) } def
/len { sequence length } bind def

/coor [
[95.08577728 399.97055054]
[81.40537262 407.29351807]
[66.03797913 405.14346313]
[54.89266968 394.34707642]
[52.25504684 379.05581665]
[59.13932800 365.14947510]
[72.89836884 357.97534180]
[74.97679138 343.12002563]
[77.05520630 328.26470947]
[68.41197205 311.06130981]
[80.70071411 295.20050049]
[81.95034027 280.25265503]
[83.19996643 265.30477905]
[84.44959259 250.35693359]
[85.69921875 235.40907288]
[83.08367920 228.38261414]
[87.19702148 220.06500244]
[88.86168671 205.15765381]
[90.52635193 190.25030518]
[79.67211151 171.58798218]
[92.50000000 153.30715942]
[92.50000000 138.30715942]
[92.50000000 123.30715942]
[92.50000000 108.30715942]
[92.29149628 93.30860901]
[91.87451935 78.31440735]
[91.45755005 63.32020569]
[91.04058075 48.32600021]
[82.08235168 43.83797836]
[75.47492218 36.38381958]
[72.13379669 27.06197929]
[72.49739838 17.22472000]
[76.47005463 8.28196621]
[83.44194031 1.49923337]
[92.38229370 -2.18142581]
[93.63191986 -17.12928200]
[94.88154602 -32.07714081]
[96.13117981 -47.02499771]
[97.38080597 -61.97285461]
[98.63043213 -76.92070770]
[99.88005829 -91.86856842]
[87.93392944 -99.29139709]
[80.41337585 -111.09754181]
[78.75184631 -124.92964172]
[83.21964264 -138.05517578]
[92.88191986 -147.90621948]
[105.79361725 -152.58186340]
[107.45828247 -167.48919678]
[109.12294769 -182.39654541]
[110.78761292 -197.30389404]
[101.19588470 -209.57730103]
[103.09645844 -224.67175293]
[114.85638428 -233.74035645]
[108.69839478 -248.31394958]
[117.80033875 -260.10394287]
[119.46501160 -275.01129150]
[112.40005493 -289.81054688]
[121.90589905 -303.17358398]
[138.20375061 -301.35366821]
[144.52777100 -286.22293091]
[134.37234497 -273.34661865]
[132.70768738 -258.43927002]
[138.98474121 -244.93194580]
[129.76373291 -232.07568359]
[139.23359680 -220.63639832]
[137.75775146 -205.49452209]
[125.69496155 -195.63922119]
[124.03029633 -180.73187256]
[122.36562347 -165.82453918]
[120.70095825 -150.91719055]
[133.90238953 -141.71211243]
[140.73638916 -127.03823090]
[139.27001953 -110.82377625]
[129.80639648 -97.46157074]
[114.82791138 -90.61894226]
[113.57828522 -75.67108154]
[112.32865906 -60.72322845]
[111.07903290 -45.77537155]
[109.82940674 -30.82751274]
[108.57978058 -15.87965584]
[107.33015442 -0.93179899]
[121.86215210 13.26379108]
[121.49131775 33.86115265]
[106.03478241 47.90903091]
[106.45175171 62.90323257]
[106.86872864 77.89743805]
[107.28569794 92.89163971]
[110.68005371 100.33834076]
[107.50000000 108.30715942]
[107.50000000 123.30715942]
[107.50000000 138.30715942]
[107.50000000 153.30715942]
[114.65869141 158.18524170]
[119.18089294 165.46221924]
[120.35829163 173.85261536]
[118.06558228 181.91032410]
[112.76895142 188.27787781]
[105.43369293 191.91497803]
[103.76902771 206.82231140]
[102.10436249 221.72966003]
[100.64707184 236.65870667]
[99.39744568 251.60656738]
[98.14781952 266.55441284]
[96.89819336 281.50228882]
[95.64856720 296.45013428]
[103.25202179 304.47439575]
[105.06667328 315.15444946]
[100.72120667 324.83569336]
[91.91051483 330.34313965]
[89.83209991 345.19845581]
[87.75367737 360.05374146]
[99.01544952 370.72857666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 111]
[8 110]
[9 109]
[11 105]
[12 104]
[13 103]
[14 102]
[15 101]
[17 100]
[18 99]
[19 98]
[21 92]
[22 91]
[23 90]
[24 89]
[25 87]
[26 86]
[27 85]
[28 84]
[35 81]
[36 80]
[37 79]
[38 78]
[39 77]
[40 76]
[41 75]
[47 70]
[48 69]
[49 68]
[50 67]
[53 64]
[55 62]
[56 61]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
