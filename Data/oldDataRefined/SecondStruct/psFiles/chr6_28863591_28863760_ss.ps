%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:09 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUUCUUUUUUUUAACUCCGCUCAGCACCUGUACUAUCUGUACUAAAACGUUUGUUCCGUGUAGAUCCUCUUUUCCGCCCUCUUUUUACUUCGACCUCCACGGCCCCUAACUUGGGCCCCGGAGCACGUACGAUUCGUGCGCGAGAUGGUGACUCGAUGUGGGGGGUUG\
) } def
/len { sequence length } bind def

/coor [
[95.10180664 424.85382080]
[85.09121704 436.14321899]
[72.49928284 444.45617676]
[58.18454742 449.22595215]
[43.12300491 450.12728882]
[28.34158516 447.09878540]
[14.84810352 440.34686279]
[3.56257129 430.33190918]
[-4.74554634 417.73675537]
[-9.50978756 403.42019653]
[-10.40531921 388.35830688]
[-7.37108135 373.57803345]
[-0.61395460 360.08718872]
[9.40534973 348.80551147]
[22.00369835 340.50225830]
[36.32211685 335.74353027]
[51.38434601 334.85382080]
[54.39511490 320.15908813]
[57.40588760 305.46435547]
[60.41665649 290.76962280]
[63.42742538 276.07489014]
[66.43819427 261.38015747]
[69.31385803 246.65837097]
[72.05416107 231.91081238]
[74.65888214 217.13868713]
[77.12779999 202.34327698]
[79.46070862 187.52580261]
[81.65740967 172.68751526]
[83.85410309 157.84924316]
[86.05080414 143.01095581]
[68.07594299 137.95361328]
[52.27086258 125.19893646]
[37.49874496 127.80365753]
[22.72662735 130.40838623]
[7.95451212 133.01310730]
[-2.38820720 145.27719116]
[-18.42063713 144.69343567]
[-27.84406853 131.70965576]
[-23.42965317 116.28589630]
[-8.56375122 110.25393677]
[5.34978914 118.24098969]
[20.12190628 115.63626862]
[34.89402008 113.03153992]
[49.66613770 110.42681885]
[50.35411453 102.95844269]
[38.10630035 94.29870605]
[51.73006821 88.02168274]
[52.41804886 80.55330658]
[38.37038040 75.29373932]
[24.32271004 70.03417969]
[8.24509239 73.26562500]
[-2.38768077 60.78058624]
[3.36247635 45.42259979]
[19.58029556 42.99064636]
[29.58227348 55.98650742]
[43.62994003 61.24607086]
[57.67761230 66.50563812]
[68.07594299 62.04639435]
[78.42800140 60.26120377]
[73.55751038 46.07394409]
[59.39748383 34.32969666]
[63.38545990 17.25648880]
[58.25515747 3.16109872]
[53.12485504 -10.93429089]
[47.99455261 -25.02968025]
[42.86425018 -39.12506866]
[27.76790619 -38.35580826]
[13.11591434 -42.07206345]
[0.21112169 -49.94338608]
[-9.79898739 -61.26986313]
[-16.02431870 -75.04435730]
[-17.91132355 -90.04204559]
[-15.29220676 -104.92934418]
[-8.39986134 -118.38248444]
[2.15285182 -129.20521545]
[15.42759132 -136.43521118]
[30.24397659 -139.42955017]
[45.28454590 -137.92201233]
[59.21190262 -132.04661560]
[70.78762817 -122.32582092]
[78.98242950 -109.62398529]
[83.06761932 -95.07054901]
[82.67995453 -79.95958710]
[77.85389709 -65.63475800]
[69.01858521 -53.36982727]
[56.95964050 -44.25537109]
[62.08994293 -30.15998268]
[67.22024536 -16.06459236]
[72.35054779 -1.96920347]
[77.48085022 12.12618542]
[88.32619476 17.53749657]
[92.70291138 29.26939201]
[87.74477386 41.20345306]
[92.61526489 55.39071274]
[109.50291443 54.20376205]
[126.21124268 59.39842224]
[140.33924866 70.65690613]
[152.42573547 61.77338028]
[164.51220703 52.88985062]
[176.59867859 44.00632095]
[179.11723328 28.63444328]
[191.50117493 19.79745674]
[206.14039612 22.29323769]
[218.22688293 13.40970802]
[230.31335449 4.52617931]
[242.39982605 -4.35734940]
[254.48631287 -13.24087811]
[255.31051636 -28.85672569]
[266.01730347 -40.25403976]
[281.55123901 -42.05135345]
[294.57769775 -33.40003204]
[298.94598389 -18.38496590]
[292.59350586 -4.09580898]
[278.51971436 2.72053552]
[263.36984253 -1.15440166]
[251.28335571 7.72912741]
[239.19688416 16.61265564]
[227.11039734 25.49618530]
[215.02392578 34.37971497]
[213.03588867 49.09648132]
[200.90502930 58.27782059]
[185.48220825 56.09280014]
[173.39573669 64.97632599]
[161.30924988 73.85985565]
[149.22277832 82.74338531]
[152.09843445 97.46515656]
[167.37573242 93.35235596]
[177.81414795 103.97725677]
[192.35514832 107.65954590]
[206.89616394 111.34182739]
[221.43716431 115.02410889]
[235.97816467 118.70639038]
[250.51916504 122.38867188]
[267.35791016 120.41562653]
[273.91528320 136.05010986]
[260.70706177 146.67927551]
[246.83688354 136.92967224]
[232.29588318 133.24739075]
[217.75488281 129.56510925]
[203.21388245 125.88282776]
[188.67286682 122.20054626]
[174.13186646 118.51826477]
[159.89465332 122.89444733]
[148.41615295 112.00616455]
[142.84664917 123.66862488]
[134.59478760 133.29786682]
[124.32348633 140.31333923]
[112.81027222 144.33605957]
[100.88908386 145.20765686]
[98.69238281 160.04594421]
[96.49568939 174.88421631]
[94.29898834 189.72250366]
[96.14181519 198.70887756]
[91.92322540 204.81219482]
[89.45429993 219.60760498]
[91.13172913 228.62632751]
[86.80172729 234.65112305]
[84.06142426 249.39868164]
[85.57288361 258.44668579]
[81.13293457 264.39093018]
[78.12216187 279.08566284]
[75.11138916 293.78039551]
[72.10062408 308.47512817]
[69.08985138 323.16986084]
[66.07908630 337.86459351]
[79.57777405 344.60607910]
[90.87103271 354.61233521]
[99.18888092 367.20104980]
[103.96417236 381.51394653]
[104.87133789 396.57513428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 165]
[18 164]
[19 163]
[20 162]
[21 161]
[22 160]
[23 158]
[24 157]
[25 155]
[26 154]
[27 152]
[28 151]
[29 150]
[30 149]
[32 44]
[33 43]
[34 42]
[35 41]
[48 57]
[49 56]
[50 55]
[59 94]
[60 93]
[62 90]
[63 89]
[64 88]
[65 87]
[66 86]
[97 125]
[98 124]
[99 123]
[100 122]
[103 119]
[104 118]
[105 117]
[106 116]
[107 115]
[126 144]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
