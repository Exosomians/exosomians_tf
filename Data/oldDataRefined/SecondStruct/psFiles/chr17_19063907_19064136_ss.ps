%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:19:40 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCUUCCUUUUUGGUGAGUCUGGCGCAAGAGAGGGAGAGUGAGGGGUUAUGCCUCUCUUCUUGCUAGUAGUUACCGACUGCCGUCAACGUCGGUUCGUUGCGGUCUUUCGGCCGAAGUGCGAGUCCUCUUUUGCGAUGGAGAGAAGGAGCCCCAAAAGCCACGAGAUGUGCAAGUCUCUUUGAAGAGAUCAUUGUGUGAUAUCUUUACUAGGGACUUUCAUAUCAGAA\
) } def
/len { sequence length } bind def

/coor [
[409.27603149 396.97039795]
[397.79260254 383.74334717]
[390.07928467 368.00579834]
[386.65609741 350.80725098]
[387.75668335 333.29614258]
[393.31250000 316.64300537]
[380.63885498 308.61938477]
[367.96520996 300.59579468]
[355.29153442 292.57217407]
[342.61788940 284.54855347]
[329.94421387 276.52493286]
[317.27056885 268.50131226]
[304.59692383 260.47769165]
[291.92324829 252.45407104]
[294.23858643 267.27429199]
[285.49838257 279.46484375]
[270.71914673 282.02886963]
[258.38348389 273.49475098]
[255.57147217 258.76068115]
[263.89709473 246.28335571]
[278.58108521 243.22402954]
[266.60360718 234.19407654]
[254.62612915 225.16413879]
[239.95762634 227.48161316]
[227.68211365 218.49458313]
[225.35079956 203.09320068]
[213.37332153 194.06326294]
[201.39582825 185.03332520]
[189.41835022 176.00337219]
[177.44085693 166.97343445]
[165.46337891 157.94349670]
[153.48588562 148.91355896]
[141.50840759 139.88362122]
[129.53091431 130.85366821]
[117.55342865 121.82373810]
[105.57594299 112.79379272]
[90.95202637 109.45597839]
[76.24273682 112.39483643]
[61.53345108 115.33369446]
[46.82416534 118.27256012]
[32.11487579 121.21141815]
[24.32575607 125.95529175]
[17.18563461 124.08879089]
[2.43774199 126.82733917]
[-12.31015110 129.56588745]
[-27.05804443 132.30442810]
[-41.80593872 135.04298401]
[-56.55383301 137.78152466]
[-71.30172729 140.52008057]
[-85.77076721 149.35653687]
[-98.26733398 137.89912415]
[-90.71707153 122.71920776]
[-74.04027557 125.77217865]
[-59.29237747 123.03363800]
[-44.54448700 120.29508972]
[-29.79659271 117.55654144]
[-15.04869843 114.81799316]
[-0.30080524 112.07944489]
[14.44708824 109.34089661]
[29.17601776 106.50212860]
[43.88530350 103.56327057]
[58.59459305 100.62441254]
[73.30387878 97.68555450]
[88.01316833 94.74669647]
[94.05825806 81.01873779]
[86.29483032 68.18404388]
[78.53140259 55.34935760]
[64.76857758 47.54582214]
[64.80181885 32.65125656]
[57.03839493 19.81656647]
[49.27497101 6.98187780]
[35.51214218 -0.82165414]
[35.54538345 -15.71622276]
[27.78195953 -28.55091095]
[9.69958687 -37.48171997]
[10.17999077 -56.82000732]
[2.07037878 -69.43881226]
[-6.03923321 -82.05760956]
[-14.14884567 -94.67641449]
[-29.33294868 -98.15215302]
[-37.37748718 -111.06494141]
[-33.97032547 -125.51924133]
[-42.16555786 -138.08261108]
[-50.44602966 -150.58996582]
[-58.72650528 -163.09730530]
[-66.06250763 -168.51559448]
[-67.03318787 -175.83152771]
[-75.14279938 -188.45033264]
[-83.25241089 -201.06913757]
[-91.36203003 -213.68794250]
[-99.47164154 -226.30674744]
[-114.96608734 -229.42086792]
[-123.65061951 -242.62519836]
[-120.37285614 -258.08584595]
[-107.07744598 -266.63027954]
[-91.65230560 -263.18927002]
[-83.24890900 -249.80424500]
[-86.85283661 -234.41635132]
[-78.74322510 -221.79756165]
[-70.63361359 -209.17875671]
[-62.52399826 -196.55995178]
[-54.41438675 -183.94114685]
[-46.21915436 -171.37777710]
[-37.93868256 -158.87043762]
[-29.65821075 -146.36308289]
[-23.35387611 -142.52635193]
[-21.35152435 -133.62886047]
[-6.78804302 -130.72358704]
[1.61601686 -118.04184723]
[-1.53004265 -102.78602600]
[6.57956934 -90.16722870]
[14.68918228 -77.54842377]
[22.79879379 -64.92961884]
[32.92166519 -63.66897202]
[40.85115433 -56.90813065]
[43.81911087 -46.69062042]
[40.61664963 -36.31433487]
[48.38007355 -23.47964668]
[61.58760834 -16.59413719]
[62.10966110 -0.78154659]
[69.87308502 12.05314255]
[77.63650513 24.88783073]
[90.84404755 31.77334023]
[91.36609650 47.58592987]
[99.12951660 60.42061996]
[106.89294434 73.25531006]
[114.60588074 100.81630707]
[126.58336639 109.84625244]
[138.56085205 118.87619019]
[150.53834534 127.90612793]
[162.51582336 136.93606567]
[174.49331665 145.96600342]
[186.47079468 154.99595642]
[198.44828796 164.02589417]
[210.42576599 173.05583191]
[222.40325928 182.08576965]
[234.38073730 191.11570740]
[249.82901001 189.11851501]
[261.84725952 198.44679260]
[263.65606689 213.18666077]
[275.63354492 222.21659851]
[287.61105347 231.24653625]
[299.94686890 239.78042603]
[312.62054443 247.80403137]
[325.29418945 255.82765198]
[337.96783447 263.85125732]
[350.64151001 271.87487793]
[363.31515503 279.89849854]
[375.98880005 287.92211914]
[388.66247559 295.94573975]
[401.33612061 303.96936035]
[410.15536499 294.88223267]
[420.50433350 287.59313965]
[432.02218628 282.35394287]
[444.30776978 279.34521484]
[456.93347168 278.66979980]
[469.46032715 280.34939575]
[481.45300293 284.32379150]
[492.49514771 290.45315552]
[502.20376587 298.52276611]
[510.24243164 308.25073242]
[516.33306885 319.29769897]
[520.26556396 331.27874756]
[521.90478516 343.77673340]
[521.19561768 356.35699463]
[518.16448975 368.58218384]
[512.91857910 380.02777100]
[525.01776123 388.89401245]
[537.11694336 397.76022339]
[549.21612549 406.62643433]
[561.31530762 415.49264526]
[573.41448975 424.35885620]
[589.11920166 426.27490234]
[594.81182861 440.03872681]
[606.91101074 448.90496826]
[619.01019287 457.77117920]
[631.10937500 466.63739014]
[643.20855713 475.50360107]
[655.30773926 484.36981201]
[667.40692139 493.23605347]
[679.50610352 502.10226440]
[697.85882568 503.68298340]
[704.28649902 520.01885986]
[716.50512695 528.71972656]
[728.72381592 537.42059326]
[740.94244385 546.12145996]
[753.16107178 554.82232666]
[765.37969971 563.52313232]
[781.10906982 565.22540283]
[786.98834229 578.91058350]
[799.20697021 587.61145020]
[811.42559814 596.31225586]
[823.64422607 605.01312256]
[835.86285400 613.71398926]
[852.27227783 617.97637939]
[852.71905518 634.92443848]
[836.55700684 640.04541016]
[827.16204834 625.93261719]
[814.94335938 617.23175049]
[802.72473145 608.53094482]
[790.50610352 599.83007812]
[778.28747559 591.12921143]
[763.43206787 590.04931641]
[756.67883301 575.74176025]
[744.46020508 567.04095459]
[732.24157715 558.34008789]
[720.02294922 549.63922119]
[707.80432129 540.93835449]
[695.58563232 532.23754883]
[683.61767578 533.93481445]
[673.36950684 526.79803467]
[670.63989258 514.20141602]
[658.54071045 505.33523560]
[646.44152832 496.46899414]
[634.34234619 487.60278320]
[622.24316406 478.73657227]
[610.14398193 469.87036133]
[598.04479980 461.00415039]
[585.94561768 452.13790894]
[571.10626221 450.85607910]
[564.54821777 436.45803833]
[552.44903564 427.59182739]
[540.34985352 418.72561646]
[528.25073242 409.85940552]
[516.15155029 400.99319458]
[504.05233765 392.12695312]
[490.69537354 403.36828613]
[474.89422607 410.81414795]
[457.70275879 413.96237183]
[440.26898193 412.59765625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[11 146]
[12 145]
[13 144]
[14 143]
[21 142]
[22 141]
[23 140]
[26 137]
[27 136]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[33 130]
[34 129]
[35 128]
[36 127]
[37 64]
[38 63]
[39 62]
[40 61]
[41 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[65 126]
[66 125]
[67 124]
[69 122]
[70 121]
[71 120]
[73 118]
[74 117]
[76 113]
[77 112]
[78 111]
[79 110]
[82 107]
[83 105]
[84 104]
[85 103]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[167 226]
[168 225]
[169 224]
[170 223]
[171 222]
[172 221]
[174 219]
[175 218]
[176 217]
[177 216]
[178 215]
[179 214]
[180 213]
[181 212]
[183 209]
[184 208]
[185 207]
[186 206]
[187 205]
[188 204]
[190 202]
[191 201]
[192 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
