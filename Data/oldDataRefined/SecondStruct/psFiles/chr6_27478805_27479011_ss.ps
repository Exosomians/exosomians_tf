%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:18:05 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGCACAUCAGCACCGGCUCACCAAUUCCGCUACCUGAUCUUUAGGUAACCCCAGAGGGGCGCGUCCAAGCUUAGGACGGCUGAUGCCCUACAAAAUGACUCUUGUCAAGUCGCUCCUUUAUCCUAGAGUGUAAACGAAAGUCAAACCCUCAUUUCUUUGAGCACUAUCUCGGAGACGCACAGUGGAUUGUAUCGGACUUGAAAA\
) } def
/len { sequence length } bind def

/coor [
[291.02536011 47.56349182]
[276.16372681 49.59623337]
[261.30209351 51.62897110]
[255.09953308 55.65092087]
[246.20086670 53.57843018]
[237.24584961 65.42508698]
[222.17037964 67.47082520]
[209.80523682 57.99765778]
[194.91459656 59.80570602]
[180.02397156 61.61375809]
[165.13333130 63.42180634]
[150.24270630 65.22985840]
[135.35206604 67.03791046]
[120.46144104 68.84595490]
[152.43260193 89.56888580]
[157.60400391 139.14819336]
[115.41760254 184.43927002]
[105.30232239 195.51541138]
[95.18704224 206.59156799]
[99.90654755 221.20738220]
[96.67016602 236.22142029]
[86.34846497 247.59498596]
[71.71793365 252.26864624]
[56.71411514 248.98522949]
[45.37295151 238.62792969]
[40.74516678 223.98281860]
[44.07561111 208.98936462]
[54.46840668 197.68072510]
[69.12795258 193.09886169]
[84.11089325 196.47628784]
[94.22617340 185.40013123]
[104.34145355 174.32398987]
[100.31701660 167.99516296]
[88.24369812 149.00872803]
[73.92288971 153.47126770]
[59.60207367 157.93382263]
[45.28126144 162.39636230]
[30.96044731 166.85890198]
[16.63963509 171.32145691]
[2.31882191 175.78399658]
[-11.00432396 186.26875305]
[-24.76754570 176.36875916]
[-19.06447792 160.40281677]
[-2.14372396 161.46318054]
[12.17708874 157.00064087]
[26.49790192 152.53810120]
[40.81871414 148.07554626]
[55.13952637 143.61300659]
[69.46034241 139.15045166]
[83.78115082 134.68791199]
[83.21530151 127.20928955]
[81.51773834 104.77342224]
[66.68850708 102.51644897]
[51.85927200 100.25948334]
[37.03004074 98.00251770]
[20.46147156 101.59679413]
[12.42102337 86.67072296]
[24.53795815 74.81255341]
[39.28701019 83.17328644]
[54.11624146 85.43025208]
[68.94547272 87.68721771]
[83.77470398 89.94419098]
[86.64482880 83.01509094]
[92.38507843 69.15689850]
[95.25520325 62.22780228]
[83.17343903 53.33786774]
[71.09167480 44.44793701]
[59.00990677 35.55800247]
[46.92813873 26.66806984]
[31.77620697 30.53497696]
[17.70603371 23.71117592]
[11.36112690 9.41865444]
[15.73735619 -5.59409475]
[28.76840019 -14.23851013]
[44.30139542 -12.43296432]
[55.00214386 -1.02997935]
[55.81806946 14.58630276]
[67.89984131 23.47623634]
[79.98160553 32.36616898]
[92.06336975 41.25610352]
[104.14514160 50.14603424]
[118.65338898 53.95532608]
[133.54402161 52.14727402]
[148.43466187 50.33922577]
[163.32528687 48.53117371]
[178.21592712 46.72312546]
[193.10655212 44.91507339]
[207.99719238 43.10702515]
[217.73594666 30.94995499]
[232.86291504 29.32845688]
[244.39280701 38.68779373]
[259.26937866 36.76734543]
[274.13098145 34.73460388]
[288.99261475 32.70186234]
[290.32418823 24.04180717]
[293.41473389 15.85381985]
[298.12677002 8.49060726]
[304.25292969 2.26843023]
[311.52529907 -2.54647756]
[319.62707520 -5.74929857]
[328.20626831 -7.20534039]
[336.89114380 -6.85569906]
[345.30615234 -4.71962738]
[353.08837891 -0.89352524]
[359.90301514 4.45340443]
[365.45785522 11.08663273]
[369.51577759 18.71659279]
[371.90493774 27.01131821]
[386.90493774 27.01131821]
[401.90493774 27.01131821]
[416.90493774 27.01131821]
[431.90493774 27.01131821]
[446.90493774 27.01131821]
[461.90493774 27.01131821]
[475.13375854 19.94036674]
[483.46731567 7.46832228]
[491.80087280 -5.00372171]
[500.13442993 -17.47576523]
[493.26950073 -31.21506119]
[494.20996094 -46.54513550]
[502.70281982 -59.34226990]
[516.46356201 -66.16410828]
[531.79064941 -65.17559814]
[544.56109619 -56.64265442]
[551.33972168 -42.86059189]
[550.30322266 -27.53671837]
[541.73028564 -14.79307556]
[527.92700195 -8.05764103]
[512.60644531 -9.14221287]
[504.27291870 3.32983184]
[495.93936157 15.80187607]
[487.60580444 28.27392006]
[489.94497681 35.39981079]
[502.05355835 26.54643440]
[514.21539307 35.32655334]
[509.62313843 49.60631561]
[494.62329102 49.65159225]
[496.96246338 56.77748108]
[511.06643677 61.88412094]
[525.17041016 66.99076080]
[534.75164795 59.94782257]
[546.42364502 58.42116928]
[557.27075195 62.67546844]
[564.63946533 71.54571533]
[566.78747559 82.75350952]
[580.73077393 88.28380585]
[594.67413330 93.81410217]
[610.35473633 91.70979309]
[619.33282471 103.59439850]
[633.27612305 109.12469482]
[647.26080322 114.54953003]
[661.28601074 119.86860657]
[673.98425293 109.28036499]
[690.19641113 106.55558014]
[705.48266602 112.34446716]
[715.70501709 124.97872162]
[718.14739990 140.95095825]
[732.25140381 146.05760193]
[746.35534668 151.16423035]
[760.45935059 156.27087402]
[774.56329346 161.37751770]
[788.66729736 166.48416138]
[802.77130127 171.59078979]
[816.87524414 176.69743347]
[831.07946777 169.76809692]
[845.99572754 174.99113464]
[852.77453613 189.26782227]
[847.39404297 204.12805176]
[833.04650879 210.75550842]
[818.24401855 205.21824646]
[811.76861572 190.80142212]
[797.66461182 185.69477844]
[783.56066895 180.58813477]
[769.45666504 175.48149109]
[755.35272217 170.37486267]
[741.24871826 165.26821899]
[727.14471436 160.16157532]
[713.04077148 155.05493164]
[703.19506836 164.52136230]
[690.16845703 168.84242249]
[676.48565674 167.12057495]
[664.82440186 159.63534546]
[657.49157715 147.79974365]
[655.96697998 133.89384460]
[641.94171143 128.57478333]
[634.57110596 129.14230347]
[627.74578857 123.06800079]
[613.80249023 117.53771210]
[599.11920166 120.03758240]
[589.14379883 107.75740814]
[575.20050049 102.22711182]
[561.25720215 96.69682312]
[544.92193604 104.95594025]
[527.43658447 98.54431152]
[520.06378174 81.09474182]
[505.95980835 75.98809814]
[491.85583496 70.88146210]
[461.90493774 42.01131821]
[446.90493774 42.01131821]
[431.90493774 42.01131821]
[416.90493774 42.01131821]
[401.90493774 42.01131821]
[386.90493774 42.01131821]
[371.90493774 42.01131821]
[362.64544678 61.66307831]
[344.67578125 73.99520111]
[322.86849976 75.57767487]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 94]
[2 93]
[3 92]
[5 91]
[8 88]
[9 87]
[10 86]
[11 85]
[12 84]
[13 83]
[14 82]
[17 32]
[18 31]
[19 30]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[40 44]
[52 62]
[53 61]
[54 60]
[55 59]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[108 204]
[109 203]
[110 202]
[111 201]
[112 200]
[113 199]
[114 198]
[115 132]
[116 131]
[117 130]
[118 129]
[138 197]
[139 196]
[140 195]
[145 192]
[146 191]
[147 190]
[149 188]
[150 187]
[151 185]
[152 184]
[157 178]
[158 177]
[159 176]
[160 175]
[161 174]
[162 173]
[163 172]
[164 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
