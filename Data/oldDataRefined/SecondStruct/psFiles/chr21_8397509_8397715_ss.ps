%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:20:12 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCCCCGCCCGAGGCCGCCCACGCCCCCACCCGCCCGCCCCGGCCCCCACCCCAGCCGCCCCCUGGCAGGGGGCUGGCCGCUGGCCGGCGGCGGCCCGCGUAAAGGUGGCGCCGCCACGCGGCGCUGGCCGAGGCCCUGCCGACCCUUCCGGCCGCCCCUUCCACCGAGCCCCCCGGGGCAGGCAGGCAGGCAGGCAGGAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 172.89295959]
[92.50000000 157.89295959]
[92.50000000 142.89295959]
[92.50000000 127.89295959]
[92.50000000 112.89295959]
[85.64995575 106.03491211]
[84.27610016 96.02284241]
[89.42829895 86.85229492]
[99.45018768 82.48616791]
[87.36842346 73.59623718]
[75.28665161 64.70630646]
[62.29135513 68.25237274]
[49.80892563 63.73170853]
[42.32089233 53.00568771]
[42.37777710 40.11920929]
[30.43165398 31.04781723]
[18.48553276 21.97642326]
[6.53941011 12.90503120]
[-20.61754799 -0.64289093]
[-34.64279175 -5.96196413]
[-48.66803360 -11.28103733]
[-68.39721680 -7.15065002]
[-79.96820831 -22.64086723]
[-94.14770508 -27.53391075]
[-108.32720947 -32.42695236]
[-122.50670624 -37.31999207]
[-142.10214233 -32.59560776]
[-154.13569641 -47.72928238]
[-168.45651245 -52.19182587]
[-177.78201294 -46.58754349]
[-188.43302917 -47.03290176]
[-196.90168762 -53.13950348]
[-200.53181458 -62.69428253]
[-214.71131897 -67.58732605]
[-228.89080811 -72.48036194]
[-243.07031250 -77.37340546]
[-257.24981689 -82.26644897]
[-272.81903076 -79.45403290]
[-282.32620239 -90.91977692]
[-296.50567627 -95.81282043]
[-310.68518066 -100.70585632]
[-328.67599487 -96.78505707]
[-339.65594482 -110.47345734]
[-353.90774536 -115.15177917]
[-368.15951538 -119.83010864]
[-382.41128540 -124.50843811]
[-396.66308594 -129.18676758]
[-410.63876343 -122.30793762]
[-425.02545166 -127.25544739]
[-431.49722290 -140.62152100]
[-440.62924194 -140.32489014]
[-445.92797852 -145.47961426]
[-460.10748291 -150.37266541]
[-474.28698730 -155.26570129]
[-488.46646118 -160.15873718]
[-504.03570557 -157.34632874]
[-513.54284668 -168.81207275]
[-527.72235107 -173.70510864]
[-541.90185547 -178.59815979]
[-556.08135986 -183.49119568]
[-571.07690430 -177.78910828]
[-584.81060791 -186.08155823]
[-586.74713135 -202.00729370]
[-575.40100098 -213.34945679]
[-559.47595215 -211.40730286]
[-551.18829346 -197.67070007]
[-537.00878906 -192.77764893]
[-522.82934570 -187.88461304]
[-508.64981079 -182.99156189]
[-494.09481812 -186.15396118]
[-483.57342529 -174.33824158]
[-469.39395142 -169.44520569]
[-455.21444702 -164.55215454]
[-441.03494263 -159.65911865]
[-426.81890869 -154.87329102]
[-413.68463135 -161.80342102]
[-399.16464233 -157.26196289]
[-391.98474121 -143.43853760]
[-377.73297119 -138.76022339]
[-363.48120117 -134.08189392]
[-349.22940063 -129.40356445]
[-334.97763062 -124.72523499]
[-324.04360962 -129.90298462]
[-312.13092041 -126.12023163]
[-305.79214478 -114.88535309]
[-291.61264038 -109.99231720]
[-277.43313599 -105.09927368]
[-262.87814331 -108.26167297]
[-252.35676575 -96.44594574]
[-238.17726135 -91.55290222]
[-223.99777222 -86.65986633]
[-209.81826782 -81.76682281]
[-195.63877869 -76.87377930]
[-176.97717285 -81.93137360]
[-163.99397278 -66.51264191]
[-149.67315674 -62.05009460]
[-141.08651733 -67.59456635]
[-130.64627075 -67.49407959]
[-121.80345154 -61.54034042]
[-117.61366272 -51.49949265]
[-103.43416595 -46.60644913]
[-89.25466919 -41.71340561]
[-75.07517242 -36.82036591]
[-66.32498932 -42.10296631]
[-55.89253998 -41.68719864]
[-47.23357391 -35.46909332]
[-43.34896088 -25.30628204]
[-29.32371712 -19.98720741]
[-15.29847431 -14.66813469]
[-1.35516560 -20.19842720]
[5.21134996 -33.68474960]
[11.77786541 -47.17107010]
[18.34438133 -60.65739441]
[24.91089630 -74.14371490]
[31.47741318 -87.63003540]
[38.04392624 -101.11635590]
[44.61044312 -114.60267639]
[46.10811234 -131.49034119]
[62.75040054 -134.72618103]
[70.46681976 -119.63005066]
[58.09676361 -108.03616333]
[51.53025055 -94.54984283]
[44.96373367 -81.06352234]
[38.39721680 -67.57720184]
[31.83070374 -54.09087753]
[25.26418686 -40.60455704]
[18.69767189 -27.11823463]
[12.13115597 -13.63191223]
[15.61080265 0.95890886]
[27.55692482 10.03030109]
[39.50304794 19.10169411]
[51.44916916 28.17308617]
[67.99807739 25.18360901]
[81.86238098 35.28600693]
[84.17658997 52.62453842]
[96.25835419 61.51446915]
[108.34011841 70.40440369]
[121.34934235 77.87168121]
[135.11926270 83.82057953]
[148.88917542 89.76947784]
[162.65908813 95.71838379]
[176.42900085 101.66728210]
[190.19891357 107.61618042]
[202.06559753 101.24167633]
[215.24449158 102.84296417]
[224.95050049 111.61289215]
[227.78968811 124.18283844]
[241.46818542 130.33903503]
[255.14668274 136.49522400]
[270.90652466 135.10334778]
[279.33703613 147.38243103]
[293.01553345 153.53862000]
[308.77542114 152.14674377]
[317.20593262 164.42582703]
[330.88442993 170.58201599]
[344.56292725 176.73820496]
[358.28750610 182.79092407]
[372.05743408 188.73982239]
[385.82733154 194.68872070]
[399.59725952 200.63763428]
[413.36718750 206.58653259]
[423.75756836 195.54953003]
[437.29763794 188.73463440]
[452.35229492 186.96478271]
[467.10369873 190.45368958]
[479.77047729 198.78004456]
[488.82308960 210.93841553]
[493.16836548 225.46061707]
[492.28161621 240.59301758]
[486.26992798 254.50830078]
[475.85922241 265.52615356]
[462.30661011 272.31607056]
[447.24868774 274.05816650]
[432.50378418 270.54208374]
[419.85235596 262.19241333]
[410.82217407 250.01736450]
[406.50363159 235.48718262]
[407.41827393 220.35644531]
[393.64834595 214.40754700]
[379.87844849 208.45864868]
[366.10852051 202.50975037]
[352.33862305 196.56083679]
[344.94985962 196.79393005]
[338.40670776 190.41670227]
[324.72821045 184.26051331]
[311.04971313 178.10432434]
[296.26824951 179.93652344]
[286.85934448 167.21711731]
[273.18084717 161.06092834]
[258.39938354 162.89312744]
[248.99047852 150.17372131]
[235.31198120 144.01753235]
[221.63348389 137.86134338]
[206.17898560 144.49169922]
[190.39973450 137.76171875]
[184.25001526 121.38609314]
[170.48010254 115.43719482]
[156.71018982 109.48829651]
[142.94027710 103.53939819]
[129.17036438 97.59049225]
[115.40044403 91.64159393]
[115.61694336 104.37833405]
[107.50000000 112.89295959]
[107.50000000 127.89295959]
[107.50000000 142.89295959]
[107.50000000 157.89295959]
[107.50000000 172.89295959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[5 203]
[9 137]
[10 136]
[11 135]
[15 132]
[16 131]
[17 130]
[18 129]
[19 109]
[20 108]
[21 107]
[23 103]
[24 102]
[25 101]
[26 100]
[28 96]
[29 95]
[33 93]
[34 92]
[35 91]
[36 90]
[37 89]
[39 87]
[40 86]
[41 85]
[43 82]
[44 81]
[45 80]
[46 79]
[47 78]
[50 75]
[52 74]
[53 73]
[54 72]
[55 71]
[57 69]
[58 68]
[59 67]
[60 66]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
[117 121]
[138 201]
[139 200]
[140 199]
[141 198]
[142 197]
[143 196]
[147 193]
[148 192]
[149 191]
[151 189]
[152 188]
[154 186]
[155 185]
[156 184]
[157 182]
[158 181]
[159 180]
[160 179]
[161 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
