%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Wed Jul 24 19:20:09 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGGGCACGGCUCAGCACUGGCCACGGCUGCUGGCGCAAACGCACCGUGCCCCAGCCCGGGCGGACCGGGACCCUUUCGCAGGGUGCCACCCCCGCGCGGCCAGAGGGCCUCGCCCUGGCCCAGCCUCCUACCUGCUCUUAGUGCUCGCUGCCACCACCACCGCACAGCCCAAGCACCGACGCCAGCGAG\
) } def
/len { sequence length } bind def

/coor [
[100.39179993 169.38821411]
[98.68634033 154.48548889]
[96.98088074 139.58274841]
[83.69621277 136.19525146]
[72.35609436 128.49076843]
[60.06492233 137.08885193]
[47.77375031 145.68695068]
[35.48258209 154.28503418]
[23.19141197 162.88311768]
[10.90024281 171.48121643]
[-1.39092684 180.07929993]
[-13.68209648 188.67739868]
[-12.42980957 203.56756592]
[-22.08834457 217.32402039]
[-40.10797119 222.24668884]
[-51.01236725 232.54689026]
[-61.91676331 242.84709167]
[-72.82115936 253.14729309]
[-83.72555542 263.44747925]
[-94.54576111 273.83609009]
[-105.28105927 284.31240845]
[-116.01635742 294.78875732]
[-119.93051147 310.71392822]
[-135.75250244 315.02627563]
[-147.20602417 303.28964233]
[-142.50868225 287.57763672]
[-126.49268341 284.05346680]
[-115.75738525 273.57711792]
[-105.02208710 263.10079956]
[-102.42679596 256.16860962]
[-94.02575684 252.54309082]
[-83.12136078 242.24288940]
[-72.21696472 231.94268799]
[-61.31256866 221.64248657]
[-50.40816879 211.34228516]
[-57.66013718 198.21182251]
[-72.18523407 201.95635986]
[-86.71033478 205.70089722]
[-98.03053284 217.56619263]
[-113.90023804 213.43284607]
[-117.99404907 197.55290222]
[-106.10060883 186.26226807]
[-90.45486450 191.17581177]
[-75.92977142 187.43127441]
[-61.40467453 183.68673706]
[-41.63760757 169.84045410]
[-22.28018570 176.38623047]
[-9.98901653 167.78813171]
[2.30215287 159.19004822]
[14.59332275 150.59194946]
[26.88449287 141.99386597]
[39.17566299 133.39576721]
[51.46683121 124.79768372]
[63.75799942 116.19959259]
[56.42944336 87.12660217]
[72.13567352 57.08517456]
[107.47529602 43.59091187]
[99.17984772 31.09349251]
[85.10152435 23.87468147]
[84.50937653 8.99185085]
[76.21392822 -3.50556946]
[67.91847992 -16.00299072]
[59.62303162 -28.50041008]
[52.25827026 -33.93014526]
[51.29619980 -41.26945114]
[43.20527267 -53.90024185]
[32.44489670 -55.61459732]
[24.57217598 -62.82597351]
[22.02982903 -72.96875000]
[25.42487526 -82.62616730]
[17.74935913 -95.51361847]
[4.04018974 -103.41104126]
[4.17523813 -118.30503082]
[-3.50027776 -131.19248962]
[-11.17579365 -144.07994080]
[-18.85130882 -156.96739197]
[-26.52682495 -169.85484314]
[-41.66225815 -175.17445374]
[-46.80373764 -190.37130737]
[-38.00715637 -203.78770447]
[-22.02050018 -205.13172913]
[-11.10736370 -193.37234497]
[-13.63937092 -177.53036499]
[-5.96385574 -164.64291382]
[1.71166015 -151.75546265]
[9.38717556 -138.86799622]
[17.06269073 -125.98054504]
[30.22285652 -119.00492096]
[30.63681221 -103.18913269]
[38.31232834 -90.30168152]
[55.83174515 -82.13969421]
[55.83605957 -61.99116898]
[63.92699051 -49.36038208]
[72.12045288 -36.79586029]
[80.41590118 -24.29843903]
[88.71134949 -11.80101871]
[97.00679779 0.69640195]
[110.49178314 7.02131462]
[111.67726898 22.79804420]
[119.97271729 35.29546356]
[134.96029663 34.68521881]
[142.21226501 21.55475998]
[149.46423340 8.42430019]
[156.71620178 -4.70615959]
[163.96817017 -17.83662033]
[171.22013855 -30.96707916]
[172.63365173 -40.00719452]
[178.69850159 -44.25084686]
[186.16323853 -57.26152420]
[181.78999329 -72.44869995]
[189.50959778 -86.23938751]
[204.74215698 -90.45182800]
[218.45046997 -82.58684540]
[222.50161743 -67.31059265]
[214.49214172 -53.68621063]
[199.17391968 -49.79679489]
[191.70918274 -36.78611374]
[184.35060120 -23.71511269]
[177.09863281 -10.58465290]
[169.84666443 2.54580736]
[162.59469604 15.67626667]
[155.34272766 28.80672646]
[148.09075928 41.93718719]
[158.47937012 52.75739288]
[171.89399719 46.04561615]
[185.30860901 39.33383942]
[187.71527100 24.00453186]
[198.69644165 13.04125881]
[214.02966309 10.65962219]
[227.81896973 17.77540970]
[234.76211548 31.65245438]
[232.18931580 46.95475006]
[221.08984375 57.79825592]
[205.73170471 60.01341629]
[192.02038574 52.74845886]
[178.60577393 59.46023560]
[165.19114685 66.17201233]
[164.88601685 73.66580200]
[179.87625122 74.20697784]
[194.86087036 74.88610840]
[194.25096130 89.87370300]
[179.26039124 89.33268738]
[164.27577209 88.65338135]
[163.97065735 96.14717865]
[176.79521179 103.92732239]
[189.61976624 111.70747375]
[202.44433594 119.48762512]
[215.26889038 127.26776886]
[235.41151428 126.78018188]
[243.99877930 144.09510803]
[257.06979370 151.45370483]
[270.14077759 158.81228638]
[283.21179199 166.17088318]
[295.14874268 156.75930786]
[309.78005981 152.63703918]
[324.87457275 154.43267822]
[338.13046265 161.87242126]
[347.52630615 173.82174683]
[351.62933350 188.45846558]
[349.81384277 203.55059814]
[342.35668945 216.79669189]
[330.39501953 226.17681885]
[315.75289917 230.26058960]
[300.66317749 228.42523193]
[287.42687988 220.95065308]
[278.06250000 208.97665405]
[273.99801636 194.32919312]
[275.85321045 179.24188232]
[262.78219604 171.88330078]
[249.71119690 164.52470398]
[236.64019775 157.16610718]
[227.06854248 160.79591370]
[216.86671448 158.50195312]
[209.46528625 150.80764771]
[207.48873901 140.09233093]
[194.66418457 132.31217957]
[181.83963013 124.53202820]
[169.01506042 116.75188446]
[156.19050598 108.97173309]
[147.69255066 122.18778992]
[136.54826355 131.57708740]
[124.15388489 136.77619934]
[111.88360596 137.87728882]
[113.58907318 152.78002930]
[115.29453278 167.68275452]
[128.86944580 175.19947815]
[135.40304565 189.27398682]
[132.38302612 204.49433899]
[120.97063446 215.00799561]
[105.55417633 216.77224731]
[92.06159973 209.10870361]
[85.68106842 194.96414185]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[5 54]
[6 53]
[7 52]
[8 51]
[9 50]
[10 49]
[11 48]
[12 47]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 29]
[21 28]
[22 27]
[36 45]
[37 44]
[38 43]
[57 100]
[58 99]
[60 97]
[61 96]
[62 95]
[63 94]
[65 93]
[66 92]
[70 90]
[71 89]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[101 123]
[102 122]
[103 121]
[104 120]
[105 119]
[106 118]
[108 117]
[109 116]
[124 137]
[125 136]
[126 135]
[144 179]
[145 178]
[146 177]
[147 176]
[148 175]
[150 171]
[151 170]
[152 169]
[153 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
